{
	"compiler": {
		"version": "0.8.26+commit.8a97fa7a"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "fundsAdmin",
						"type": "address"
					}
				],
				"name": "NewFundsAdmin",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "REVISION",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "contract IERC20",
						"name": "token",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "recipient",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "approve",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getFundsAdmin",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "reserveController",
						"type": "address"
					}
				],
				"name": "initialize",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "admin",
						"type": "address"
					}
				],
				"name": "setFundsAdmin",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "contract IERC20",
						"name": "token",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "recipient",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "transfer",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"author": "Aave*",
			"details": "Implementation contract that must be initialized using transparent proxy pattern.",
			"events": {
				"NewFundsAdmin(address)": {
					"details": "Emitted during the transfer of ownership of the funds administrator address",
					"params": {
						"fundsAdmin": "The new funds administrator address*"
					}
				}
			},
			"kind": "dev",
			"methods": {
				"approve(address,address,uint256)": {
					"details": "Approve an amount of tokens to be pulled by the recipient.",
					"params": {
						"amount": "The amount allowed to be pulled. If zero it will revoke the approval.",
						"recipient": "The address of the entity allowed to pull tokens",
						"token": "The address of the asset"
					}
				},
				"getFundsAdmin()": {
					"details": "Retrieve the current funds administrator",
					"returns": {
						"_0": "The address of the funds administrator"
					}
				},
				"initialize(address)": {
					"details": "Initialize the transparent proxy with the admin of the Collector",
					"params": {
						"reserveController": "The address of the admin that controls Collector"
					}
				},
				"setFundsAdmin(address)": {
					"details": "Transfer the ownership of the funds administrator role. This function should only be callable by the current funds administrator.",
					"params": {
						"admin": "The address of the new funds administrator"
					}
				},
				"transfer(address,address,uint256)": {
					"details": "Transfer an amount of tokens to the recipient.",
					"params": {
						"amount": "The amount to be transferred.",
						"recipient": "The address of the entity to transfer the tokens.",
						"token": "The address of the asset"
					}
				}
			},
			"stateVariables": {
				"REVISION": {
					"details": "Retrieve the current implementation Revision of the proxy",
					"return": "The revision version",
					"returns": {
						"_0": "The revision version"
					}
				}
			},
			"title": "Collector",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"notice": "Stores the fees collected by the protocol and allows the fund administrator         to approve or transfer the collected ERC20 tokens.",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/treasury/Collector.sol": "Collector"
		},
		"evmVersion": "cancun",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/IERC20.sol": {
			"keccak256": "0xf57d62241e553696a1324d225663ba2e1a51db0a51ca236d0c1b009d89b6284c",
			"license": "AGPL-3.0",
			"urls": [
				"bzz-raw://d327db93b636790909aa137124f30a856ac1631cb79c476aa188f9627fda8d03",
				"dweb:/ipfs/QmaxpmEoBFioeNYmpxJemyZ7aYF2nX1NKW1XDqREm7i6es"
			]
		},
		"@aave/core-v3/contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol": {
			"keccak256": "0x311b8f1bd3d015a0c9c37680aceca36f59658284b9a7b2ca185b19afe58c3be0",
			"license": "AGPL-3.0",
			"urls": [
				"bzz-raw://33adc701eb5aa4e143bfd62b751480267d9c89fbdb0cd26e47daf7e5410a9976",
				"dweb:/ipfs/QmWFqik5yM5gp8UGxiuZQsWGJ1g4C4UMxUN15AbA64BHgS"
			]
		},
		"contracts/treasury/Collector.sol": {
			"keccak256": "0xf4345953dc09cd2e73609735e7291b94581e50971b454558491724ebb748998f",
			"license": "AGPL-3.0",
			"urls": [
				"bzz-raw://2f20d34cb166c9c5bcf2a4f00191228851010bf3e5ef514d7be6f48a32cf48b2",
				"dweb:/ipfs/QmRxGsSVHvPokYvVG8k3qC44sto2CSsNubVbrj1XPLMUfM"
			]
		},
		"contracts/treasury/interfaces/ICollector.sol": {
			"keccak256": "0x8a9f70393c869e32cfcd7762b4716aa37bc7051511c62a2110b0a90526d6599a",
			"license": "AGPL-3.0",
			"urls": [
				"bzz-raw://2a337e6275edd2a00e01d856669b1b72705e39d5d8e3323e2d8f8c1bea4597f2",
				"dweb:/ipfs/QmSC41Ev28S6YQgkiNwdaaPbiz5vZrLzPirYfVe28UHMgD"
			]
		}
	},
	"version": 1
}