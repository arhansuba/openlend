{
	"id": "bdace6c78f7a09df6f8b8dff8b0db8e8",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/adapters/paraswap/BaseParaSwapSellAdapter.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0\r\npragma solidity ^0.8.10;\r\n\r\nimport {SafeERC20} from '@aave/core-v3/contracts/dependencies/openzeppelin/contracts/SafeERC20.sol';\r\nimport {SafeMath} from '@aave/core-v3/contracts/dependencies/openzeppelin/contracts/SafeMath.sol';\r\nimport {PercentageMath} from '@aave/core-v3/contracts/protocol/libraries/math/PercentageMath.sol';\r\nimport {IPoolAddressesProvider} from '@aave/core-v3/contracts/interfaces/IPoolAddressesProvider.sol';\r\nimport {IERC20Detailed} from '@aave/core-v3/contracts/dependencies/openzeppelin/contracts/IERC20Detailed.sol';\r\nimport {IParaSwapAugustus} from './interfaces/IParaSwapAugustus.sol';\r\nimport {IParaSwapAugustusRegistry} from './interfaces/IParaSwapAugustusRegistry.sol';\r\nimport {BaseParaSwapAdapter} from './BaseParaSwapAdapter.sol';\r\n\r\n/**\r\n * @title BaseParaSwapSellAdapter\r\n * @notice Implements the logic for selling tokens on ParaSwap\r\n * @author Jason Raymond Bell\r\n */\r\nabstract contract BaseParaSwapSellAdapter is BaseParaSwapAdapter {\r\n  using PercentageMath for uint256;\r\n  using SafeMath for uint256;\r\n  using SafeERC20 for IERC20Detailed;\r\n\r\n  IParaSwapAugustusRegistry public immutable AUGUSTUS_REGISTRY;\r\n\r\n  constructor(\r\n    IPoolAddressesProvider addressesProvider,\r\n    IParaSwapAugustusRegistry augustusRegistry\r\n  ) BaseParaSwapAdapter(addressesProvider) {\r\n    // Do something on Augustus registry to check the right contract was passed\r\n    require(!augustusRegistry.isValidAugustus(address(0)));\r\n    AUGUSTUS_REGISTRY = augustusRegistry;\r\n  }\r\n\r\n  /**\r\n   * @dev Swaps a token for another using ParaSwap\r\n   * @param fromAmountOffset Offset of fromAmount in Augustus calldata if it should be overwritten, otherwise 0\r\n   * @param swapCalldata Calldata for ParaSwap's AugustusSwapper contract\r\n   * @param augustus Address of ParaSwap's AugustusSwapper contract\r\n   * @param assetToSwapFrom Address of the asset to be swapped from\r\n   * @param assetToSwapTo Address of the asset to be swapped to\r\n   * @param amountToSwap Amount to be swapped\r\n   * @param minAmountToReceive Minimum amount to be received from the swap\r\n   * @return amountReceived The amount received from the swap\r\n   */\r\n  function _sellOnParaSwap(\r\n    uint256 fromAmountOffset,\r\n    bytes memory swapCalldata,\r\n    IParaSwapAugustus augustus,\r\n    IERC20Detailed assetToSwapFrom,\r\n    IERC20Detailed assetToSwapTo,\r\n    uint256 amountToSwap,\r\n    uint256 minAmountToReceive\r\n  ) internal returns (uint256 amountReceived) {\r\n    require(AUGUSTUS_REGISTRY.isValidAugustus(address(augustus)), 'INVALID_AUGUSTUS');\r\n\r\n    {\r\n      uint256 fromAssetDecimals = _getDecimals(assetToSwapFrom);\r\n      uint256 toAssetDecimals = _getDecimals(assetToSwapTo);\r\n\r\n      uint256 fromAssetPrice = _getPrice(address(assetToSwapFrom));\r\n      uint256 toAssetPrice = _getPrice(address(assetToSwapTo));\r\n\r\n      uint256 expectedMinAmountOut = amountToSwap\r\n        .mul(fromAssetPrice.mul(10 ** toAssetDecimals))\r\n        .div(toAssetPrice.mul(10 ** fromAssetDecimals))\r\n        .percentMul(PercentageMath.PERCENTAGE_FACTOR - MAX_SLIPPAGE_PERCENT);\r\n\r\n      require(expectedMinAmountOut <= minAmountToReceive, 'MIN_AMOUNT_EXCEEDS_MAX_SLIPPAGE');\r\n    }\r\n\r\n    uint256 balanceBeforeAssetFrom = assetToSwapFrom.balanceOf(address(this));\r\n    require(balanceBeforeAssetFrom >= amountToSwap, 'INSUFFICIENT_BALANCE_BEFORE_SWAP');\r\n    uint256 balanceBeforeAssetTo = assetToSwapTo.balanceOf(address(this));\r\n\r\n    address tokenTransferProxy = augustus.getTokenTransferProxy();\r\n    assetToSwapFrom.safeApprove(tokenTransferProxy, 0);\r\n    assetToSwapFrom.safeApprove(tokenTransferProxy, amountToSwap);\r\n\r\n    if (fromAmountOffset != 0) {\r\n      // Ensure 256 bit (32 bytes) fromAmount value is within bounds of the\r\n      // calldata, not overlapping with the first 4 bytes (function selector).\r\n      require(\r\n        fromAmountOffset >= 4 && fromAmountOffset <= swapCalldata.length.sub(32),\r\n        'FROM_AMOUNT_OFFSET_OUT_OF_RANGE'\r\n      );\r\n      // Overwrite the fromAmount with the correct amount for the swap.\r\n      // In memory, swapCalldata consists of a 256 bit length field, followed by\r\n      // the actual bytes data, that is why 32 is added to the byte offset.\r\n      assembly {\r\n        mstore(add(swapCalldata, add(fromAmountOffset, 32)), amountToSwap)\r\n      }\r\n    }\r\n    (bool success, ) = address(augustus).call(swapCalldata);\r\n    if (!success) {\r\n      // Copy revert reason from call\r\n      assembly {\r\n        returndatacopy(0, 0, returndatasize())\r\n        revert(0, returndatasize())\r\n      }\r\n    }\r\n    require(\r\n      assetToSwapFrom.balanceOf(address(this)) == balanceBeforeAssetFrom - amountToSwap,\r\n      'WRONG_BALANCE_AFTER_SWAP'\r\n    );\r\n    amountReceived = assetToSwapTo.balanceOf(address(this)).sub(balanceBeforeAssetTo);\r\n    require(amountReceived >= minAmountToReceive, 'INSUFFICIENT_AMOUNT_RECEIVED');\r\n\r\n    emit Swapped(address(assetToSwapFrom), address(assetToSwapTo), amountToSwap, amountReceived);\r\n  }\r\n}\r\n"
			},
			"contracts/adapters/paraswap/BaseParaSwapAdapter.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0\r\npragma solidity ^0.8.10;\r\n\r\nimport {DataTypes} from '@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol';\r\nimport {FlashLoanSimpleReceiverBase} from '@aave/core-v3/contracts/flashloan/base/FlashLoanSimpleReceiverBase.sol';\r\nimport {GPv2SafeERC20} from '@aave/core-v3/contracts/dependencies/gnosis/contracts/GPv2SafeERC20.sol';\r\nimport {IERC20} from '@aave/core-v3/contracts/dependencies/openzeppelin/contracts/IERC20.sol';\r\nimport {IERC20Detailed} from '@aave/core-v3/contracts/dependencies/openzeppelin/contracts/IERC20Detailed.sol';\r\nimport {IERC20WithPermit} from '@aave/core-v3/contracts/interfaces/IERC20WithPermit.sol';\r\nimport {IPoolAddressesProvider} from '@aave/core-v3/contracts/interfaces/IPoolAddressesProvider.sol';\r\nimport {IPriceOracleGetter} from '@aave/core-v3/contracts/interfaces/IPriceOracleGetter.sol';\r\nimport {SafeMath} from '@aave/core-v3/contracts/dependencies/openzeppelin/contracts/SafeMath.sol';\r\nimport {Ownable} from '@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol';\r\n\r\n/**\r\n * @title BaseParaSwapAdapter\r\n * @notice Utility functions for adapters using ParaSwap\r\n * @author Jason Raymond Bell\r\n */\r\nabstract contract BaseParaSwapAdapter is FlashLoanSimpleReceiverBase, Ownable {\r\n  using SafeMath for uint256;\r\n  using GPv2SafeERC20 for IERC20;\r\n  using GPv2SafeERC20 for IERC20Detailed;\r\n  using GPv2SafeERC20 for IERC20WithPermit;\r\n\r\n  struct PermitSignature {\r\n    uint256 amount;\r\n    uint256 deadline;\r\n    uint8 v;\r\n    bytes32 r;\r\n    bytes32 s;\r\n  }\r\n\r\n  // Max slippage percent allowed\r\n  uint256 public constant MAX_SLIPPAGE_PERCENT = 3000; // 30%\r\n\r\n  IPriceOracleGetter public immutable ORACLE;\r\n\r\n  event Swapped(\r\n    address indexed fromAsset,\r\n    address indexed toAsset,\r\n    uint256 fromAmount,\r\n    uint256 receivedAmount\r\n  );\r\n  event Bought(\r\n    address indexed fromAsset,\r\n    address indexed toAsset,\r\n    uint256 amountSold,\r\n    uint256 receivedAmount\r\n  );\r\n\r\n  constructor(\r\n    IPoolAddressesProvider addressesProvider\r\n  ) FlashLoanSimpleReceiverBase(addressesProvider) {\r\n    ORACLE = IPriceOracleGetter(addressesProvider.getPriceOracle());\r\n  }\r\n\r\n  /**\r\n   * @dev Get the price of the asset from the oracle denominated in eth\r\n   * @param asset address\r\n   * @return eth price for the asset\r\n   */\r\n  function _getPrice(address asset) internal view returns (uint256) {\r\n    return ORACLE.getAssetPrice(asset);\r\n  }\r\n\r\n  /**\r\n   * @dev Get the decimals of an asset\r\n   * @return number of decimals of the asset\r\n   */\r\n  function _getDecimals(IERC20Detailed asset) internal view returns (uint8) {\r\n    uint8 decimals = asset.decimals();\r\n    // Ensure 10**decimals won't overflow a uint256\r\n    require(decimals <= 77, 'TOO_MANY_DECIMALS_ON_TOKEN');\r\n    return decimals;\r\n  }\r\n\r\n  /**\r\n   * @dev Get the aToken associated to the asset\r\n   * @return address of the aToken\r\n   */\r\n  function _getReserveData(address asset) internal view returns (DataTypes.ReserveData memory) {\r\n    return POOL.getReserveData(asset);\r\n  }\r\n\r\n  function _pullATokenAndWithdraw(\r\n    address reserve,\r\n    address user,\r\n    uint256 amount,\r\n    PermitSignature memory permitSignature\r\n  ) internal {\r\n    IERC20WithPermit reserveAToken = IERC20WithPermit(\r\n      _getReserveData(address(reserve)).aTokenAddress\r\n    );\r\n    _pullATokenAndWithdraw(reserve, reserveAToken, user, amount, permitSignature);\r\n  }\r\n\r\n  /**\r\n   * @dev Pull the ATokens from the user\r\n   * @param reserve address of the asset\r\n   * @param reserveAToken address of the aToken of the reserve\r\n   * @param user address\r\n   * @param amount of tokens to be transferred to the contract\r\n   * @param permitSignature struct containing the permit signature\r\n   */\r\n  function _pullATokenAndWithdraw(\r\n    address reserve,\r\n    IERC20WithPermit reserveAToken,\r\n    address user,\r\n    uint256 amount,\r\n    PermitSignature memory permitSignature\r\n  ) internal {\r\n    // If deadline is set to zero, assume there is no signature for permit\r\n    if (permitSignature.deadline != 0) {\r\n      reserveAToken.permit(\r\n        user,\r\n        address(this),\r\n        permitSignature.amount,\r\n        permitSignature.deadline,\r\n        permitSignature.v,\r\n        permitSignature.r,\r\n        permitSignature.s\r\n      );\r\n    }\r\n\r\n    // transfer from user to adapter\r\n    reserveAToken.safeTransferFrom(user, address(this), amount);\r\n\r\n    // withdraw reserve\r\n    require(POOL.withdraw(reserve, amount, address(this)) == amount, 'UNEXPECTED_AMOUNT_WITHDRAWN');\r\n  }\r\n\r\n  /**\r\n   * @dev Emergency rescue for token stucked on this contract, as failsafe mechanism\r\n   * - Funds should never remain in this contract more time than during transactions\r\n   * - Only callable by the owner\r\n   */\r\n  function rescueTokens(IERC20 token) external onlyOwner {\r\n    token.safeTransfer(owner(), token.balanceOf(address(this)));\r\n  }\r\n}\r\n"
			},
			"contracts/adapters/paraswap/interfaces/IParaSwapAugustusRegistry.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0\r\npragma solidity ^0.8.10;\r\n\r\ninterface IParaSwapAugustusRegistry {\r\n  function isValidAugustus(address augustus) external view returns (bool);\r\n}\r\n"
			},
			"contracts/adapters/paraswap/interfaces/IParaSwapAugustus.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0\r\npragma solidity ^0.8.10;\r\n\r\ninterface IParaSwapAugustus {\r\n  function getTokenTransferProxy() external view returns (address);\r\n}\r\n"
			},
			"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/IERC20Detailed.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0\npragma solidity ^0.8.0;\n\nimport {IERC20} from './IERC20.sol';\n\ninterface IERC20Detailed is IERC20 {\n  function name() external view returns (string memory);\n\n  function symbol() external view returns (string memory);\n\n  function decimals() external view returns (uint8);\n}\n"
			},
			"@aave/core-v3/contracts/interfaces/IPoolAddressesProvider.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0\npragma solidity ^0.8.0;\n\n/**\n * @title IPoolAddressesProvider\n * @author Aave\n * @notice Defines the basic interface for a Pool Addresses Provider.\n */\ninterface IPoolAddressesProvider {\n  /**\n   * @dev Emitted when the market identifier is updated.\n   * @param oldMarketId The old id of the market\n   * @param newMarketId The new id of the market\n   */\n  event MarketIdSet(string indexed oldMarketId, string indexed newMarketId);\n\n  /**\n   * @dev Emitted when the pool is updated.\n   * @param oldAddress The old address of the Pool\n   * @param newAddress The new address of the Pool\n   */\n  event PoolUpdated(address indexed oldAddress, address indexed newAddress);\n\n  /**\n   * @dev Emitted when the pool configurator is updated.\n   * @param oldAddress The old address of the PoolConfigurator\n   * @param newAddress The new address of the PoolConfigurator\n   */\n  event PoolConfiguratorUpdated(address indexed oldAddress, address indexed newAddress);\n\n  /**\n   * @dev Emitted when the price oracle is updated.\n   * @param oldAddress The old address of the PriceOracle\n   * @param newAddress The new address of the PriceOracle\n   */\n  event PriceOracleUpdated(address indexed oldAddress, address indexed newAddress);\n\n  /**\n   * @dev Emitted when the ACL manager is updated.\n   * @param oldAddress The old address of the ACLManager\n   * @param newAddress The new address of the ACLManager\n   */\n  event ACLManagerUpdated(address indexed oldAddress, address indexed newAddress);\n\n  /**\n   * @dev Emitted when the ACL admin is updated.\n   * @param oldAddress The old address of the ACLAdmin\n   * @param newAddress The new address of the ACLAdmin\n   */\n  event ACLAdminUpdated(address indexed oldAddress, address indexed newAddress);\n\n  /**\n   * @dev Emitted when the price oracle sentinel is updated.\n   * @param oldAddress The old address of the PriceOracleSentinel\n   * @param newAddress The new address of the PriceOracleSentinel\n   */\n  event PriceOracleSentinelUpdated(address indexed oldAddress, address indexed newAddress);\n\n  /**\n   * @dev Emitted when the pool data provider is updated.\n   * @param oldAddress The old address of the PoolDataProvider\n   * @param newAddress The new address of the PoolDataProvider\n   */\n  event PoolDataProviderUpdated(address indexed oldAddress, address indexed newAddress);\n\n  /**\n   * @dev Emitted when a new proxy is created.\n   * @param id The identifier of the proxy\n   * @param proxyAddress The address of the created proxy contract\n   * @param implementationAddress The address of the implementation contract\n   */\n  event ProxyCreated(\n    bytes32 indexed id,\n    address indexed proxyAddress,\n    address indexed implementationAddress\n  );\n\n  /**\n   * @dev Emitted when a new non-proxied contract address is registered.\n   * @param id The identifier of the contract\n   * @param oldAddress The address of the old contract\n   * @param newAddress The address of the new contract\n   */\n  event AddressSet(bytes32 indexed id, address indexed oldAddress, address indexed newAddress);\n\n  /**\n   * @dev Emitted when the implementation of the proxy registered with id is updated\n   * @param id The identifier of the contract\n   * @param proxyAddress The address of the proxy contract\n   * @param oldImplementationAddress The address of the old implementation contract\n   * @param newImplementationAddress The address of the new implementation contract\n   */\n  event AddressSetAsProxy(\n    bytes32 indexed id,\n    address indexed proxyAddress,\n    address oldImplementationAddress,\n    address indexed newImplementationAddress\n  );\n\n  /**\n   * @notice Returns the id of the Aave market to which this contract points to.\n   * @return The market id\n   */\n  function getMarketId() external view returns (string memory);\n\n  /**\n   * @notice Associates an id with a specific PoolAddressesProvider.\n   * @dev This can be used to create an onchain registry of PoolAddressesProviders to\n   * identify and validate multiple Aave markets.\n   * @param newMarketId The market id\n   */\n  function setMarketId(string calldata newMarketId) external;\n\n  /**\n   * @notice Returns an address by its identifier.\n   * @dev The returned address might be an EOA or a contract, potentially proxied\n   * @dev It returns ZERO if there is no registered address with the given id\n   * @param id The id\n   * @return The address of the registered for the specified id\n   */\n  function getAddress(bytes32 id) external view returns (address);\n\n  /**\n   * @notice General function to update the implementation of a proxy registered with\n   * certain `id`. If there is no proxy registered, it will instantiate one and\n   * set as implementation the `newImplementationAddress`.\n   * @dev IMPORTANT Use this function carefully, only for ids that don't have an explicit\n   * setter function, in order to avoid unexpected consequences\n   * @param id The id\n   * @param newImplementationAddress The address of the new implementation\n   */\n  function setAddressAsProxy(bytes32 id, address newImplementationAddress) external;\n\n  /**\n   * @notice Sets an address for an id replacing the address saved in the addresses map.\n   * @dev IMPORTANT Use this function carefully, as it will do a hard replacement\n   * @param id The id\n   * @param newAddress The address to set\n   */\n  function setAddress(bytes32 id, address newAddress) external;\n\n  /**\n   * @notice Returns the address of the Pool proxy.\n   * @return The Pool proxy address\n   */\n  function getPool() external view returns (address);\n\n  /**\n   * @notice Updates the implementation of the Pool, or creates a proxy\n   * setting the new `pool` implementation when the function is called for the first time.\n   * @param newPoolImpl The new Pool implementation\n   */\n  function setPoolImpl(address newPoolImpl) external;\n\n  /**\n   * @notice Returns the address of the PoolConfigurator proxy.\n   * @return The PoolConfigurator proxy address\n   */\n  function getPoolConfigurator() external view returns (address);\n\n  /**\n   * @notice Updates the implementation of the PoolConfigurator, or creates a proxy\n   * setting the new `PoolConfigurator` implementation when the function is called for the first time.\n   * @param newPoolConfiguratorImpl The new PoolConfigurator implementation\n   */\n  function setPoolConfiguratorImpl(address newPoolConfiguratorImpl) external;\n\n  /**\n   * @notice Returns the address of the price oracle.\n   * @return The address of the PriceOracle\n   */\n  function getPriceOracle() external view returns (address);\n\n  /**\n   * @notice Updates the address of the price oracle.\n   * @param newPriceOracle The address of the new PriceOracle\n   */\n  function setPriceOracle(address newPriceOracle) external;\n\n  /**\n   * @notice Returns the address of the ACL manager.\n   * @return The address of the ACLManager\n   */\n  function getACLManager() external view returns (address);\n\n  /**\n   * @notice Updates the address of the ACL manager.\n   * @param newAclManager The address of the new ACLManager\n   */\n  function setACLManager(address newAclManager) external;\n\n  /**\n   * @notice Returns the address of the ACL admin.\n   * @return The address of the ACL admin\n   */\n  function getACLAdmin() external view returns (address);\n\n  /**\n   * @notice Updates the address of the ACL admin.\n   * @param newAclAdmin The address of the new ACL admin\n   */\n  function setACLAdmin(address newAclAdmin) external;\n\n  /**\n   * @notice Returns the address of the price oracle sentinel.\n   * @return The address of the PriceOracleSentinel\n   */\n  function getPriceOracleSentinel() external view returns (address);\n\n  /**\n   * @notice Updates the address of the price oracle sentinel.\n   * @param newPriceOracleSentinel The address of the new PriceOracleSentinel\n   */\n  function setPriceOracleSentinel(address newPriceOracleSentinel) external;\n\n  /**\n   * @notice Returns the address of the data provider.\n   * @return The address of the DataProvider\n   */\n  function getPoolDataProvider() external view returns (address);\n\n  /**\n   * @notice Updates the address of the data provider.\n   * @param newDataProvider The address of the new DataProvider\n   */\n  function setPoolDataProvider(address newDataProvider) external;\n}\n"
			},
			"@aave/core-v3/contracts/protocol/libraries/math/PercentageMath.sol": {
				"content": "// SPDX-License-Identifier: BUSL-1.1\npragma solidity ^0.8.0;\n\n/**\n * @title PercentageMath library\n * @author Aave\n * @notice Provides functions to perform percentage calculations\n * @dev Percentages are defined by default with 2 decimals of precision (100.00). The precision is indicated by PERCENTAGE_FACTOR\n * @dev Operations are rounded. If a value is >=.5, will be rounded up, otherwise rounded down.\n */\nlibrary PercentageMath {\n  // Maximum percentage factor (100.00%)\n  uint256 internal constant PERCENTAGE_FACTOR = 1e4;\n\n  // Half percentage factor (50.00%)\n  uint256 internal constant HALF_PERCENTAGE_FACTOR = 0.5e4;\n\n  /**\n   * @notice Executes a percentage multiplication\n   * @dev assembly optimized for improved gas savings, see https://twitter.com/transmissions11/status/1451131036377571328\n   * @param value The value of which the percentage needs to be calculated\n   * @param percentage The percentage of the value to be calculated\n   * @return result value percentmul percentage\n   */\n  function percentMul(uint256 value, uint256 percentage) internal pure returns (uint256 result) {\n    // to avoid overflow, value <= (type(uint256).max - HALF_PERCENTAGE_FACTOR) / percentage\n    assembly {\n      if iszero(\n        or(\n          iszero(percentage),\n          iszero(gt(value, div(sub(not(0), HALF_PERCENTAGE_FACTOR), percentage)))\n        )\n      ) {\n        revert(0, 0)\n      }\n\n      result := div(add(mul(value, percentage), HALF_PERCENTAGE_FACTOR), PERCENTAGE_FACTOR)\n    }\n  }\n\n  /**\n   * @notice Executes a percentage division\n   * @dev assembly optimized for improved gas savings, see https://twitter.com/transmissions11/status/1451131036377571328\n   * @param value The value of which the percentage needs to be calculated\n   * @param percentage The percentage of the value to be calculated\n   * @return result value percentdiv percentage\n   */\n  function percentDiv(uint256 value, uint256 percentage) internal pure returns (uint256 result) {\n    // to avoid overflow, value <= (type(uint256).max - halfPercentage) / PERCENTAGE_FACTOR\n    assembly {\n      if or(\n        iszero(percentage),\n        iszero(iszero(gt(value, div(sub(not(0), div(percentage, 2)), PERCENTAGE_FACTOR))))\n      ) {\n        revert(0, 0)\n      }\n\n      result := div(add(mul(value, PERCENTAGE_FACTOR), div(percentage, 2)), percentage)\n    }\n  }\n}\n"
			},
			"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0\npragma solidity ^0.8.0;\n\n/// @title Optimized overflow and underflow safe math operations\n/// @notice Contains methods for doing math operations that revert on overflow or underflow for minimal gas cost\nlibrary SafeMath {\n  /// @notice Returns x + y, reverts if sum overflows uint256\n  /// @param x The augend\n  /// @param y The addend\n  /// @return z The sum of x and y\n  function add(uint256 x, uint256 y) internal pure returns (uint256 z) {\n    unchecked {\n      require((z = x + y) >= x);\n    }\n  }\n\n  /// @notice Returns x - y, reverts if underflows\n  /// @param x The minuend\n  /// @param y The subtrahend\n  /// @return z The difference of x and y\n  function sub(uint256 x, uint256 y) internal pure returns (uint256 z) {\n    unchecked {\n      require((z = x - y) <= x);\n    }\n  }\n\n  /// @notice Returns x - y, reverts if underflows\n  /// @param x The minuend\n  /// @param y The subtrahend\n  /// @param message The error msg\n  /// @return z The difference of x and y\n  function sub(uint256 x, uint256 y, string memory message) internal pure returns (uint256 z) {\n    unchecked {\n      require((z = x - y) <= x, message);\n    }\n  }\n\n  /// @notice Returns x * y, reverts if overflows\n  /// @param x The multiplicand\n  /// @param y The multiplier\n  /// @return z The product of x and y\n  function mul(uint256 x, uint256 y) internal pure returns (uint256 z) {\n    unchecked {\n      require(x == 0 || (z = x * y) / x == y);\n    }\n  }\n\n  /// @notice Returns x / y, reverts if overflows - no specific check, solidity reverts on division by 0\n  /// @param x The numerator\n  /// @param y The denominator\n  /// @return z The product of x and y\n  function div(uint256 x, uint256 y) internal pure returns (uint256 z) {\n    return x / y;\n  }\n}\n"
			},
			"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport './IERC20.sol';\nimport './Address.sol';\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n  using Address for address;\n\n  function safeTransfer(IERC20 token, address to, uint256 value) internal {\n    _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n  }\n\n  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n    _callOptionalReturn(\n      token,\n      abi.encodeWithSelector(token.transferFrom.selector, from, to, value)\n    );\n  }\n\n  /**\n   * @dev Deprecated. This function has issues similar to the ones found in\n   * {IERC20-approve}, and its usage is discouraged.\n   *\n   * Whenever possible, use {safeIncreaseAllowance} and\n   * {safeDecreaseAllowance} instead.\n   */\n  function safeApprove(IERC20 token, address spender, uint256 value) internal {\n    // safeApprove should only be called when setting an initial allowance,\n    // or when resetting it to zero. To increase and decrease it, use\n    // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n    require(\n      (value == 0) || (token.allowance(address(this), spender) == 0),\n      'SafeERC20: approve from non-zero to non-zero allowance'\n    );\n    _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n  }\n\n  function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n    uint256 newAllowance = token.allowance(address(this), spender) + value;\n    _callOptionalReturn(\n      token,\n      abi.encodeWithSelector(token.approve.selector, spender, newAllowance)\n    );\n  }\n\n  function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n    unchecked {\n      uint256 oldAllowance = token.allowance(address(this), spender);\n      require(oldAllowance >= value, 'SafeERC20: decreased allowance below zero');\n      uint256 newAllowance = oldAllowance - value;\n      _callOptionalReturn(\n        token,\n        abi.encodeWithSelector(token.approve.selector, spender, newAllowance)\n      );\n    }\n  }\n\n  /**\n   * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n   * on the return value: the return value is optional (but if data is returned, it must not be false).\n   * @param token The token targeted by the call.\n   * @param data The call data (encoded using abi.encode or one of its variants).\n   */\n  function _callOptionalReturn(IERC20 token, bytes memory data) private {\n    // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n    // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\n    // the target address contains contract code and also asserts for success in the low-level call.\n\n    bytes memory returndata = address(token).functionCall(data, 'SafeERC20: low-level call failed');\n    if (returndata.length > 0) {\n      // Return data is optional\n      require(abi.decode(returndata, (bool)), 'SafeERC20: ERC20 operation did not succeed');\n    }\n  }\n}\n"
			},
			"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport './Context.sol';\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\ncontract Ownable is Context {\n  address private _owner;\n\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n  /**\n   * @dev Initializes the contract setting the deployer as the initial owner.\n   */\n  constructor() {\n    address msgSender = _msgSender();\n    _owner = msgSender;\n    emit OwnershipTransferred(address(0), msgSender);\n  }\n\n  /**\n   * @dev Returns the address of the current owner.\n   */\n  function owner() public view returns (address) {\n    return _owner;\n  }\n\n  /**\n   * @dev Throws if called by any account other than the owner.\n   */\n  modifier onlyOwner() {\n    require(_owner == _msgSender(), 'Ownable: caller is not the owner');\n    _;\n  }\n\n  /**\n   * @dev Leaves the contract without owner. It will not be possible to call\n   * `onlyOwner` functions anymore. Can only be called by the current owner.\n   *\n   * NOTE: Renouncing ownership will leave the contract without an owner,\n   * thereby removing any functionality that is only available to the owner.\n   */\n  function renounceOwnership() public virtual onlyOwner {\n    emit OwnershipTransferred(_owner, address(0));\n    _owner = address(0);\n  }\n\n  /**\n   * @dev Transfers ownership of the contract to a new account (`newOwner`).\n   * Can only be called by the current owner.\n   */\n  function transferOwnership(address newOwner) public virtual onlyOwner {\n    require(newOwner != address(0), 'Ownable: new owner is the zero address');\n    emit OwnershipTransferred(_owner, newOwner);\n    _owner = newOwner;\n  }\n}\n"
			},
			"@aave/core-v3/contracts/interfaces/IPriceOracleGetter.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0\npragma solidity ^0.8.0;\n\n/**\n * @title IPriceOracleGetter\n * @author Aave\n * @notice Interface for the Aave price oracle.\n */\ninterface IPriceOracleGetter {\n  /**\n   * @notice Returns the base currency address\n   * @dev Address 0x0 is reserved for USD as base currency.\n   * @return Returns the base currency address.\n   */\n  function BASE_CURRENCY() external view returns (address);\n\n  /**\n   * @notice Returns the base currency unit\n   * @dev 1 ether for ETH, 1e8 for USD.\n   * @return Returns the base currency unit.\n   */\n  function BASE_CURRENCY_UNIT() external view returns (uint256);\n\n  /**\n   * @notice Returns the asset price in the base currency\n   * @param asset The address of the asset\n   * @return The price of the asset\n   */\n  function getAssetPrice(address asset) external view returns (uint256);\n}\n"
			},
			"@aave/core-v3/contracts/interfaces/IERC20WithPermit.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0\npragma solidity ^0.8.0;\n\nimport {IERC20} from '../dependencies/openzeppelin/contracts/IERC20.sol';\n\n/**\n * @title IERC20WithPermit\n * @author Aave\n * @notice Interface for the permit function (EIP-2612)\n */\ninterface IERC20WithPermit is IERC20 {\n  /**\n   * @notice Allow passing a signed message to approve spending\n   * @dev implements the permit function as for\n   * https://github.com/ethereum/EIPs/blob/8a34d644aacf0f9f8f00815307fd7dd5da07655f/EIPS/eip-2612.md\n   * @param owner The owner of the funds\n   * @param spender The spender\n   * @param value The amount\n   * @param deadline The deadline timestamp, type(uint256).max for max deadline\n   * @param v Signature param\n   * @param s Signature param\n   * @param r Signature param\n   */\n  function permit(\n    address owner,\n    address spender,\n    uint256 value,\n    uint256 deadline,\n    uint8 v,\n    bytes32 r,\n    bytes32 s\n  ) external;\n}\n"
			},
			"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/IERC20.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n  /**\n   * @dev Returns the amount of tokens in existence.\n   */\n  function totalSupply() external view returns (uint256);\n\n  /**\n   * @dev Returns the amount of tokens owned by `account`.\n   */\n  function balanceOf(address account) external view returns (uint256);\n\n  /**\n   * @dev Moves `amount` tokens from the caller's account to `recipient`.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * Emits a {Transfer} event.\n   */\n  function transfer(address recipient, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Returns the remaining number of tokens that `spender` will be\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\n   * zero by default.\n   *\n   * This value changes when {approve} or {transferFrom} are called.\n   */\n  function allowance(address owner, address spender) external view returns (uint256);\n\n  /**\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\n   * that someone may use both the old and the new allowance by unfortunate\n   * transaction ordering. One possible solution to mitigate this race\n   * condition is to first reduce the spender's allowance to 0 and set the\n   * desired value afterwards:\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n   *\n   * Emits an {Approval} event.\n   */\n  function approve(address spender, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Moves `amount` tokens from `sender` to `recipient` using the\n   * allowance mechanism. `amount` is then deducted from the caller's\n   * allowance.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * Emits a {Transfer} event.\n   */\n  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\n   * another (`to`).\n   *\n   * Note that `value` may be zero.\n   */\n  event Transfer(address indexed from, address indexed to, uint256 value);\n\n  /**\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n   * a call to {approve}. `value` is the new allowance.\n   */\n  event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"@aave/core-v3/contracts/dependencies/gnosis/contracts/GPv2SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: LGPL-3.0-or-later\npragma solidity ^0.8.0;\n\nimport {IERC20} from '../../openzeppelin/contracts/IERC20.sol';\n\n/// @title Gnosis Protocol v2 Safe ERC20 Transfer Library\n/// @author Gnosis Developers\n/// @dev Gas-efficient version of Openzeppelin's SafeERC20 contract.\nlibrary GPv2SafeERC20 {\n  /// @dev Wrapper around a call to the ERC20 function `transfer` that reverts\n  /// also when the token returns `false`.\n  function safeTransfer(IERC20 token, address to, uint256 value) internal {\n    bytes4 selector_ = token.transfer.selector;\n\n    // solhint-disable-next-line no-inline-assembly\n    assembly {\n      let freeMemoryPointer := mload(0x40)\n      mstore(freeMemoryPointer, selector_)\n      mstore(add(freeMemoryPointer, 4), and(to, 0xffffffffffffffffffffffffffffffffffffffff))\n      mstore(add(freeMemoryPointer, 36), value)\n\n      if iszero(call(gas(), token, 0, freeMemoryPointer, 68, 0, 0)) {\n        returndatacopy(0, 0, returndatasize())\n        revert(0, returndatasize())\n      }\n    }\n\n    require(getLastTransferResult(token), 'GPv2: failed transfer');\n  }\n\n  /// @dev Wrapper around a call to the ERC20 function `transferFrom` that\n  /// reverts also when the token returns `false`.\n  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n    bytes4 selector_ = token.transferFrom.selector;\n\n    // solhint-disable-next-line no-inline-assembly\n    assembly {\n      let freeMemoryPointer := mload(0x40)\n      mstore(freeMemoryPointer, selector_)\n      mstore(add(freeMemoryPointer, 4), and(from, 0xffffffffffffffffffffffffffffffffffffffff))\n      mstore(add(freeMemoryPointer, 36), and(to, 0xffffffffffffffffffffffffffffffffffffffff))\n      mstore(add(freeMemoryPointer, 68), value)\n\n      if iszero(call(gas(), token, 0, freeMemoryPointer, 100, 0, 0)) {\n        returndatacopy(0, 0, returndatasize())\n        revert(0, returndatasize())\n      }\n    }\n\n    require(getLastTransferResult(token), 'GPv2: failed transferFrom');\n  }\n\n  /// @dev Verifies that the last return was a successful `transfer*` call.\n  /// This is done by checking that the return data is either empty, or\n  /// is a valid ABI encoded boolean.\n  function getLastTransferResult(IERC20 token) private view returns (bool success) {\n    // NOTE: Inspecting previous return data requires assembly. Note that\n    // we write the return data to memory 0 in the case where the return\n    // data size is 32, this is OK since the first 64 bytes of memory are\n    // reserved by Solidy as a scratch space that can be used within\n    // assembly blocks.\n    // <https://docs.soliditylang.org/en/v0.7.6/internals/layout_in_memory.html>\n    // solhint-disable-next-line no-inline-assembly\n    assembly {\n      /// @dev Revert with an ABI encoded Solidity error with a message\n      /// that fits into 32-bytes.\n      ///\n      /// An ABI encoded Solidity error has the following memory layout:\n      ///\n      /// ------------+----------------------------------\n      ///  byte range | value\n      /// ------------+----------------------------------\n      ///  0x00..0x04 |        selector(\"Error(string)\")\n      ///  0x04..0x24 |      string offset (always 0x20)\n      ///  0x24..0x44 |                    string length\n      ///  0x44..0x64 | string value, padded to 32-bytes\n      function revertWithMessage(length, message) {\n        mstore(0x00, '\\x08\\xc3\\x79\\xa0')\n        mstore(0x04, 0x20)\n        mstore(0x24, length)\n        mstore(0x44, message)\n        revert(0x00, 0x64)\n      }\n\n      switch returndatasize()\n      // Non-standard ERC20 transfer without return.\n      case 0 {\n        // NOTE: When the return data size is 0, verify that there\n        // is code at the address. This is done in order to maintain\n        // compatibility with Solidity calling conventions.\n        // <https://docs.soliditylang.org/en/v0.7.6/control-structures.html#external-function-calls>\n        if iszero(extcodesize(token)) {\n          revertWithMessage(20, 'GPv2: not a contract')\n        }\n\n        success := 1\n      }\n      // Standard ERC20 transfer returning boolean success value.\n      case 32 {\n        returndatacopy(0, 0, returndatasize())\n\n        // NOTE: For ABI encoding v1, any non-zero value is accepted\n        // as `true` for a boolean. In order to stay compatible with\n        // OpenZeppelin's `SafeERC20` library which is known to work\n        // with the existing ERC20 implementation we care about,\n        // make sure we return success for any non-zero return value\n        // from the `transfer*` call.\n        success := iszero(iszero(mload(0)))\n      }\n      default {\n        revertWithMessage(31, 'GPv2: malformed transfer result')\n      }\n    }\n  }\n}\n"
			},
			"@aave/core-v3/contracts/flashloan/base/FlashLoanSimpleReceiverBase.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0\npragma solidity ^0.8.0;\n\nimport {IFlashLoanSimpleReceiver} from '../interfaces/IFlashLoanSimpleReceiver.sol';\nimport {IPoolAddressesProvider} from '../../interfaces/IPoolAddressesProvider.sol';\nimport {IPool} from '../../interfaces/IPool.sol';\n\n/**\n * @title FlashLoanSimpleReceiverBase\n * @author Aave\n * @notice Base contract to develop a flashloan-receiver contract.\n */\nabstract contract FlashLoanSimpleReceiverBase is IFlashLoanSimpleReceiver {\n  IPoolAddressesProvider public immutable override ADDRESSES_PROVIDER;\n  IPool public immutable override POOL;\n\n  constructor(IPoolAddressesProvider provider) {\n    ADDRESSES_PROVIDER = provider;\n    POOL = IPool(provider.getPool());\n  }\n}\n"
			},
			"@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol": {
				"content": "// SPDX-License-Identifier: BUSL-1.1\npragma solidity ^0.8.0;\n\nlibrary DataTypes {\n  struct ReserveData {\n    //stores the reserve configuration\n    ReserveConfigurationMap configuration;\n    //the liquidity index. Expressed in ray\n    uint128 liquidityIndex;\n    //the current supply rate. Expressed in ray\n    uint128 currentLiquidityRate;\n    //variable borrow index. Expressed in ray\n    uint128 variableBorrowIndex;\n    //the current variable borrow rate. Expressed in ray\n    uint128 currentVariableBorrowRate;\n    //the current stable borrow rate. Expressed in ray\n    uint128 currentStableBorrowRate;\n    //timestamp of last update\n    uint40 lastUpdateTimestamp;\n    //the id of the reserve. Represents the position in the list of the active reserves\n    uint16 id;\n    //aToken address\n    address aTokenAddress;\n    //stableDebtToken address\n    address stableDebtTokenAddress;\n    //variableDebtToken address\n    address variableDebtTokenAddress;\n    //address of the interest rate strategy\n    address interestRateStrategyAddress;\n    //the current treasury balance, scaled\n    uint128 accruedToTreasury;\n    //the outstanding unbacked aTokens minted through the bridging feature\n    uint128 unbacked;\n    //the outstanding debt borrowed against this asset in isolation mode\n    uint128 isolationModeTotalDebt;\n  }\n\n  struct ReserveConfigurationMap {\n    //bit 0-15: LTV\n    //bit 16-31: Liq. threshold\n    //bit 32-47: Liq. bonus\n    //bit 48-55: Decimals\n    //bit 56: reserve is active\n    //bit 57: reserve is frozen\n    //bit 58: borrowing is enabled\n    //bit 59: stable rate borrowing enabled\n    //bit 60: asset is paused\n    //bit 61: borrowing in isolation mode is enabled\n    //bit 62: siloed borrowing enabled\n    //bit 63: flashloaning enabled\n    //bit 64-79: reserve factor\n    //bit 80-115 borrow cap in whole tokens, borrowCap == 0 => no cap\n    //bit 116-151 supply cap in whole tokens, supplyCap == 0 => no cap\n    //bit 152-167 liquidation protocol fee\n    //bit 168-175 eMode category\n    //bit 176-211 unbacked mint cap in whole tokens, unbackedMintCap == 0 => minting disabled\n    //bit 212-251 debt ceiling for isolation mode with (ReserveConfiguration::DEBT_CEILING_DECIMALS) decimals\n    //bit 252-255 unused\n\n    uint256 data;\n  }\n\n  struct UserConfigurationMap {\n    /**\n     * @dev Bitmap of the users collaterals and borrows. It is divided in pairs of bits, one pair per asset.\n     * The first bit indicates if an asset is used as collateral by the user, the second whether an\n     * asset is borrowed by the user.\n     */\n    uint256 data;\n  }\n\n  struct EModeCategory {\n    // each eMode category has a custom ltv and liquidation threshold\n    uint16 ltv;\n    uint16 liquidationThreshold;\n    uint16 liquidationBonus;\n    // each eMode category may or may not have a custom oracle to override the individual assets price oracles\n    address priceSource;\n    string label;\n  }\n\n  enum InterestRateMode {NONE, STABLE, VARIABLE}\n\n  struct ReserveCache {\n    uint256 currScaledVariableDebt;\n    uint256 nextScaledVariableDebt;\n    uint256 currPrincipalStableDebt;\n    uint256 currAvgStableBorrowRate;\n    uint256 currTotalStableDebt;\n    uint256 nextAvgStableBorrowRate;\n    uint256 nextTotalStableDebt;\n    uint256 currLiquidityIndex;\n    uint256 nextLiquidityIndex;\n    uint256 currVariableBorrowIndex;\n    uint256 nextVariableBorrowIndex;\n    uint256 currLiquidityRate;\n    uint256 currVariableBorrowRate;\n    uint256 reserveFactor;\n    ReserveConfigurationMap reserveConfiguration;\n    address aTokenAddress;\n    address stableDebtTokenAddress;\n    address variableDebtTokenAddress;\n    uint40 reserveLastUpdateTimestamp;\n    uint40 stableDebtLastUpdateTimestamp;\n  }\n\n  struct ExecuteLiquidationCallParams {\n    uint256 reservesCount;\n    uint256 debtToCover;\n    address collateralAsset;\n    address debtAsset;\n    address user;\n    bool receiveAToken;\n    address priceOracle;\n    uint8 userEModeCategory;\n    address priceOracleSentinel;\n  }\n\n  struct ExecuteSupplyParams {\n    address asset;\n    uint256 amount;\n    address onBehalfOf;\n    uint16 referralCode;\n  }\n\n  struct ExecuteBorrowParams {\n    address asset;\n    address user;\n    address onBehalfOf;\n    uint256 amount;\n    InterestRateMode interestRateMode;\n    uint16 referralCode;\n    bool releaseUnderlying;\n    uint256 maxStableRateBorrowSizePercent;\n    uint256 reservesCount;\n    address oracle;\n    uint8 userEModeCategory;\n    address priceOracleSentinel;\n  }\n\n  struct ExecuteRepayParams {\n    address asset;\n    uint256 amount;\n    InterestRateMode interestRateMode;\n    address onBehalfOf;\n    bool useATokens;\n  }\n\n  struct ExecuteWithdrawParams {\n    address asset;\n    uint256 amount;\n    address to;\n    uint256 reservesCount;\n    address oracle;\n    uint8 userEModeCategory;\n  }\n\n  struct ExecuteSetUserEModeParams {\n    uint256 reservesCount;\n    address oracle;\n    uint8 categoryId;\n  }\n\n  struct FinalizeTransferParams {\n    address asset;\n    address from;\n    address to;\n    uint256 amount;\n    uint256 balanceFromBefore;\n    uint256 balanceToBefore;\n    uint256 reservesCount;\n    address oracle;\n    uint8 fromEModeCategory;\n  }\n\n  struct FlashloanParams {\n    address receiverAddress;\n    address[] assets;\n    uint256[] amounts;\n    uint256[] interestRateModes;\n    address onBehalfOf;\n    bytes params;\n    uint16 referralCode;\n    uint256 flashLoanPremiumToProtocol;\n    uint256 flashLoanPremiumTotal;\n    uint256 maxStableRateBorrowSizePercent;\n    uint256 reservesCount;\n    address addressesProvider;\n    uint8 userEModeCategory;\n    bool isAuthorizedFlashBorrower;\n  }\n\n  struct FlashloanSimpleParams {\n    address receiverAddress;\n    address asset;\n    uint256 amount;\n    bytes params;\n    uint16 referralCode;\n    uint256 flashLoanPremiumToProtocol;\n    uint256 flashLoanPremiumTotal;\n  }\n\n  struct FlashLoanRepaymentParams {\n    uint256 amount;\n    uint256 totalPremium;\n    uint256 flashLoanPremiumToProtocol;\n    address asset;\n    address receiverAddress;\n    uint16 referralCode;\n  }\n\n  struct CalculateUserAccountDataParams {\n    UserConfigurationMap userConfig;\n    uint256 reservesCount;\n    address user;\n    address oracle;\n    uint8 userEModeCategory;\n  }\n\n  struct ValidateBorrowParams {\n    ReserveCache reserveCache;\n    UserConfigurationMap userConfig;\n    address asset;\n    address userAddress;\n    uint256 amount;\n    InterestRateMode interestRateMode;\n    uint256 maxStableLoanPercent;\n    uint256 reservesCount;\n    address oracle;\n    uint8 userEModeCategory;\n    address priceOracleSentinel;\n    bool isolationModeActive;\n    address isolationModeCollateralAddress;\n    uint256 isolationModeDebtCeiling;\n  }\n\n  struct ValidateLiquidationCallParams {\n    ReserveCache debtReserveCache;\n    uint256 totalDebt;\n    uint256 healthFactor;\n    address priceOracleSentinel;\n  }\n\n  struct CalculateInterestRatesParams {\n    uint256 unbacked;\n    uint256 liquidityAdded;\n    uint256 liquidityTaken;\n    uint256 totalStableDebt;\n    uint256 totalVariableDebt;\n    uint256 averageStableBorrowRate;\n    uint256 reserveFactor;\n    address reserve;\n    address aToken;\n  }\n\n  struct InitReserveParams {\n    address asset;\n    address aTokenAddress;\n    address stableDebtAddress;\n    address variableDebtAddress;\n    address interestRateStrategyAddress;\n    uint16 reservesCount;\n    uint16 maxNumberReserves;\n  }\n}\n"
			},
			"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Address.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n  /**\n   * @dev Returns true if `account` is a contract.\n   *\n   * [IMPORTANT]\n   * ====\n   * It is unsafe to assume that an address for which this function returns\n   * false is an externally-owned account (EOA) and not a contract.\n   *\n   * Among others, `isContract` will return false for the following\n   * types of addresses:\n   *\n   *  - an externally-owned account\n   *  - a contract in construction\n   *  - an address where a contract will be created\n   *  - an address where a contract lived, but was destroyed\n   * ====\n   */\n  function isContract(address account) internal view returns (bool) {\n    // This method relies on extcodesize, which returns 0 for contracts in\n    // construction, since the code is only stored at the end of the\n    // constructor execution.\n\n    uint256 size;\n    assembly {\n      size := extcodesize(account)\n    }\n    return size > 0;\n  }\n\n  /**\n   * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n   * `recipient`, forwarding all available gas and reverting on errors.\n   *\n   * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n   * of certain opcodes, possibly making contracts go over the 2300 gas limit\n   * imposed by `transfer`, making them unable to receive funds via\n   * `transfer`. {sendValue} removes this limitation.\n   *\n   * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n   *\n   * IMPORTANT: because control is transferred to `recipient`, care must be\n   * taken to not create reentrancy vulnerabilities. Consider using\n   * {ReentrancyGuard} or the\n   * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n   */\n  function sendValue(address payable recipient, uint256 amount) internal {\n    require(address(this).balance >= amount, 'Address: insufficient balance');\n\n    (bool success, ) = recipient.call{value: amount}('');\n    require(success, 'Address: unable to send value, recipient may have reverted');\n  }\n\n  /**\n   * @dev Performs a Solidity function call using a low level `call`. A\n   * plain `call` is an unsafe replacement for a function call: use this\n   * function instead.\n   *\n   * If `target` reverts with a revert reason, it is bubbled up by this\n   * function (like regular Solidity function calls).\n   *\n   * Returns the raw returned data. To convert to the expected return value,\n   * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n   *\n   * Requirements:\n   *\n   * - `target` must be a contract.\n   * - calling `target` with `data` must not revert.\n   *\n   * _Available since v3.1._\n   */\n  function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n    return functionCall(target, data, 'Address: low-level call failed');\n  }\n\n  /**\n   * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n   * `errorMessage` as a fallback revert reason when `target` reverts.\n   *\n   * _Available since v3.1._\n   */\n  function functionCall(\n    address target,\n    bytes memory data,\n    string memory errorMessage\n  ) internal returns (bytes memory) {\n    return functionCallWithValue(target, data, 0, errorMessage);\n  }\n\n  /**\n   * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n   * but also transferring `value` wei to `target`.\n   *\n   * Requirements:\n   *\n   * - the calling contract must have an ETH balance of at least `value`.\n   * - the called Solidity function must be `payable`.\n   *\n   * _Available since v3.1._\n   */\n  function functionCallWithValue(\n    address target,\n    bytes memory data,\n    uint256 value\n  ) internal returns (bytes memory) {\n    return functionCallWithValue(target, data, value, 'Address: low-level call with value failed');\n  }\n\n  /**\n   * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n   * with `errorMessage` as a fallback revert reason when `target` reverts.\n   *\n   * _Available since v3.1._\n   */\n  function functionCallWithValue(\n    address target,\n    bytes memory data,\n    uint256 value,\n    string memory errorMessage\n  ) internal returns (bytes memory) {\n    require(address(this).balance >= value, 'Address: insufficient balance for call');\n    require(isContract(target), 'Address: call to non-contract');\n\n    (bool success, bytes memory returndata) = target.call{value: value}(data);\n    return verifyCallResult(success, returndata, errorMessage);\n  }\n\n  /**\n   * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n   * but performing a static call.\n   *\n   * _Available since v3.3._\n   */\n  function functionStaticCall(\n    address target,\n    bytes memory data\n  ) internal view returns (bytes memory) {\n    return functionStaticCall(target, data, 'Address: low-level static call failed');\n  }\n\n  /**\n   * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n   * but performing a static call.\n   *\n   * _Available since v3.3._\n   */\n  function functionStaticCall(\n    address target,\n    bytes memory data,\n    string memory errorMessage\n  ) internal view returns (bytes memory) {\n    require(isContract(target), 'Address: static call to non-contract');\n\n    (bool success, bytes memory returndata) = target.staticcall(data);\n    return verifyCallResult(success, returndata, errorMessage);\n  }\n\n  /**\n   * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n   * but performing a delegate call.\n   *\n   * _Available since v3.4._\n   */\n  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n    return functionDelegateCall(target, data, 'Address: low-level delegate call failed');\n  }\n\n  /**\n   * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n   * but performing a delegate call.\n   *\n   * _Available since v3.4._\n   */\n  function functionDelegateCall(\n    address target,\n    bytes memory data,\n    string memory errorMessage\n  ) internal returns (bytes memory) {\n    require(isContract(target), 'Address: delegate call to non-contract');\n\n    (bool success, bytes memory returndata) = target.delegatecall(data);\n    return verifyCallResult(success, returndata, errorMessage);\n  }\n\n  /**\n   * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n   * revert reason using the provided one.\n   *\n   * _Available since v4.3._\n   */\n  function verifyCallResult(\n    bool success,\n    bytes memory returndata,\n    string memory errorMessage\n  ) internal pure returns (bytes memory) {\n    if (success) {\n      return returndata;\n    } else {\n      // Look for revert reason and bubble it up if present\n      if (returndata.length > 0) {\n        // The easiest way to bubble the revert reason is using memory via assembly\n\n        assembly {\n          let returndata_size := mload(returndata)\n          revert(add(32, returndata), returndata_size)\n        }\n      } else {\n        revert(errorMessage);\n      }\n    }\n  }\n}\n"
			},
			"@aave/core-v3/contracts/interfaces/IPool.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0\npragma solidity ^0.8.0;\n\nimport {IPoolAddressesProvider} from './IPoolAddressesProvider.sol';\nimport {DataTypes} from '../protocol/libraries/types/DataTypes.sol';\n\n/**\n * @title IPool\n * @author Aave\n * @notice Defines the basic interface for an Aave Pool.\n */\ninterface IPool {\n  /**\n   * @dev Emitted on mintUnbacked()\n   * @param reserve The address of the underlying asset of the reserve\n   * @param user The address initiating the supply\n   * @param onBehalfOf The beneficiary of the supplied assets, receiving the aTokens\n   * @param amount The amount of supplied assets\n   * @param referralCode The referral code used\n   */\n  event MintUnbacked(\n    address indexed reserve,\n    address user,\n    address indexed onBehalfOf,\n    uint256 amount,\n    uint16 indexed referralCode\n  );\n\n  /**\n   * @dev Emitted on backUnbacked()\n   * @param reserve The address of the underlying asset of the reserve\n   * @param backer The address paying for the backing\n   * @param amount The amount added as backing\n   * @param fee The amount paid in fees\n   */\n  event BackUnbacked(address indexed reserve, address indexed backer, uint256 amount, uint256 fee);\n\n  /**\n   * @dev Emitted on supply()\n   * @param reserve The address of the underlying asset of the reserve\n   * @param user The address initiating the supply\n   * @param onBehalfOf The beneficiary of the supply, receiving the aTokens\n   * @param amount The amount supplied\n   * @param referralCode The referral code used\n   */\n  event Supply(\n    address indexed reserve,\n    address user,\n    address indexed onBehalfOf,\n    uint256 amount,\n    uint16 indexed referralCode\n  );\n\n  /**\n   * @dev Emitted on withdraw()\n   * @param reserve The address of the underlying asset being withdrawn\n   * @param user The address initiating the withdrawal, owner of aTokens\n   * @param to The address that will receive the underlying\n   * @param amount The amount to be withdrawn\n   */\n  event Withdraw(address indexed reserve, address indexed user, address indexed to, uint256 amount);\n\n  /**\n   * @dev Emitted on borrow() and flashLoan() when debt needs to be opened\n   * @param reserve The address of the underlying asset being borrowed\n   * @param user The address of the user initiating the borrow(), receiving the funds on borrow() or just\n   * initiator of the transaction on flashLoan()\n   * @param onBehalfOf The address that will be getting the debt\n   * @param amount The amount borrowed out\n   * @param interestRateMode The rate mode: 1 for Stable, 2 for Variable\n   * @param borrowRate The numeric rate at which the user has borrowed, expressed in ray\n   * @param referralCode The referral code used\n   */\n  event Borrow(\n    address indexed reserve,\n    address user,\n    address indexed onBehalfOf,\n    uint256 amount,\n    DataTypes.InterestRateMode interestRateMode,\n    uint256 borrowRate,\n    uint16 indexed referralCode\n  );\n\n  /**\n   * @dev Emitted on repay()\n   * @param reserve The address of the underlying asset of the reserve\n   * @param user The beneficiary of the repayment, getting his debt reduced\n   * @param repayer The address of the user initiating the repay(), providing the funds\n   * @param amount The amount repaid\n   * @param useATokens True if the repayment is done using aTokens, `false` if done with underlying asset directly\n   */\n  event Repay(\n    address indexed reserve,\n    address indexed user,\n    address indexed repayer,\n    uint256 amount,\n    bool useATokens\n  );\n\n  /**\n   * @dev Emitted on swapBorrowRateMode()\n   * @param reserve The address of the underlying asset of the reserve\n   * @param user The address of the user swapping his rate mode\n   * @param interestRateMode The current interest rate mode of the position being swapped: 1 for Stable, 2 for Variable\n   */\n  event SwapBorrowRateMode(\n    address indexed reserve,\n    address indexed user,\n    DataTypes.InterestRateMode interestRateMode\n  );\n\n  /**\n   * @dev Emitted on borrow(), repay() and liquidationCall() when using isolated assets\n   * @param asset The address of the underlying asset of the reserve\n   * @param totalDebt The total isolation mode debt for the reserve\n   */\n  event IsolationModeTotalDebtUpdated(address indexed asset, uint256 totalDebt);\n\n  /**\n   * @dev Emitted when the user selects a certain asset category for eMode\n   * @param user The address of the user\n   * @param categoryId The category id\n   */\n  event UserEModeSet(address indexed user, uint8 categoryId);\n\n  /**\n   * @dev Emitted on setUserUseReserveAsCollateral()\n   * @param reserve The address of the underlying asset of the reserve\n   * @param user The address of the user enabling the usage as collateral\n   */\n  event ReserveUsedAsCollateralEnabled(address indexed reserve, address indexed user);\n\n  /**\n   * @dev Emitted on setUserUseReserveAsCollateral()\n   * @param reserve The address of the underlying asset of the reserve\n   * @param user The address of the user enabling the usage as collateral\n   */\n  event ReserveUsedAsCollateralDisabled(address indexed reserve, address indexed user);\n\n  /**\n   * @dev Emitted on rebalanceStableBorrowRate()\n   * @param reserve The address of the underlying asset of the reserve\n   * @param user The address of the user for which the rebalance has been executed\n   */\n  event RebalanceStableBorrowRate(address indexed reserve, address indexed user);\n\n  /**\n   * @dev Emitted on flashLoan()\n   * @param target The address of the flash loan receiver contract\n   * @param initiator The address initiating the flash loan\n   * @param asset The address of the asset being flash borrowed\n   * @param amount The amount flash borrowed\n   * @param interestRateMode The flashloan mode: 0 for regular flashloan, 1 for Stable debt, 2 for Variable debt\n   * @param premium The fee flash borrowed\n   * @param referralCode The referral code used\n   */\n  event FlashLoan(\n    address indexed target,\n    address initiator,\n    address indexed asset,\n    uint256 amount,\n    DataTypes.InterestRateMode interestRateMode,\n    uint256 premium,\n    uint16 indexed referralCode\n  );\n\n  /**\n   * @dev Emitted when a borrower is liquidated.\n   * @param collateralAsset The address of the underlying asset used as collateral, to receive as result of the liquidation\n   * @param debtAsset The address of the underlying borrowed asset to be repaid with the liquidation\n   * @param user The address of the borrower getting liquidated\n   * @param debtToCover The debt amount of borrowed `asset` the liquidator wants to cover\n   * @param liquidatedCollateralAmount The amount of collateral received by the liquidator\n   * @param liquidator The address of the liquidator\n   * @param receiveAToken True if the liquidators wants to receive the collateral aTokens, `false` if he wants\n   * to receive the underlying collateral asset directly\n   */\n  event LiquidationCall(\n    address indexed collateralAsset,\n    address indexed debtAsset,\n    address indexed user,\n    uint256 debtToCover,\n    uint256 liquidatedCollateralAmount,\n    address liquidator,\n    bool receiveAToken\n  );\n\n  /**\n   * @dev Emitted when the state of a reserve is updated.\n   * @param reserve The address of the underlying asset of the reserve\n   * @param liquidityRate The next liquidity rate\n   * @param stableBorrowRate The next stable borrow rate\n   * @param variableBorrowRate The next variable borrow rate\n   * @param liquidityIndex The next liquidity index\n   * @param variableBorrowIndex The next variable borrow index\n   */\n  event ReserveDataUpdated(\n    address indexed reserve,\n    uint256 liquidityRate,\n    uint256 stableBorrowRate,\n    uint256 variableBorrowRate,\n    uint256 liquidityIndex,\n    uint256 variableBorrowIndex\n  );\n\n  /**\n   * @dev Emitted when the protocol treasury receives minted aTokens from the accrued interest.\n   * @param reserve The address of the reserve\n   * @param amountMinted The amount minted to the treasury\n   */\n  event MintedToTreasury(address indexed reserve, uint256 amountMinted);\n\n  /**\n   * @notice Mints an `amount` of aTokens to the `onBehalfOf`\n   * @param asset The address of the underlying asset to mint\n   * @param amount The amount to mint\n   * @param onBehalfOf The address that will receive the aTokens\n   * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   *   0 if the action is executed directly by the user, without any middle-man\n   */\n  function mintUnbacked(\n    address asset,\n    uint256 amount,\n    address onBehalfOf,\n    uint16 referralCode\n  ) external;\n\n  /**\n   * @notice Back the current unbacked underlying with `amount` and pay `fee`.\n   * @param asset The address of the underlying asset to back\n   * @param amount The amount to back\n   * @param fee The amount paid in fees\n   * @return The backed amount\n   */\n  function backUnbacked(address asset, uint256 amount, uint256 fee) external returns (uint256);\n\n  /**\n   * @notice Supplies an `amount` of underlying asset into the reserve, receiving in return overlying aTokens.\n   * - E.g. User supplies 100 USDC and gets in return 100 aUSDC\n   * @param asset The address of the underlying asset to supply\n   * @param amount The amount to be supplied\n   * @param onBehalfOf The address that will receive the aTokens, same as msg.sender if the user\n   *   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens\n   *   is a different wallet\n   * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   *   0 if the action is executed directly by the user, without any middle-man\n   */\n  function supply(address asset, uint256 amount, address onBehalfOf, uint16 referralCode) external;\n\n  /**\n   * @notice Supply with transfer approval of asset to be supplied done via permit function\n   * see: https://eips.ethereum.org/EIPS/eip-2612 and https://eips.ethereum.org/EIPS/eip-713\n   * @param asset The address of the underlying asset to supply\n   * @param amount The amount to be supplied\n   * @param onBehalfOf The address that will receive the aTokens, same as msg.sender if the user\n   *   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens\n   *   is a different wallet\n   * @param deadline The deadline timestamp that the permit is valid\n   * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   *   0 if the action is executed directly by the user, without any middle-man\n   * @param permitV The V parameter of ERC712 permit sig\n   * @param permitR The R parameter of ERC712 permit sig\n   * @param permitS The S parameter of ERC712 permit sig\n   */\n  function supplyWithPermit(\n    address asset,\n    uint256 amount,\n    address onBehalfOf,\n    uint16 referralCode,\n    uint256 deadline,\n    uint8 permitV,\n    bytes32 permitR,\n    bytes32 permitS\n  ) external;\n\n  /**\n   * @notice Withdraws an `amount` of underlying asset from the reserve, burning the equivalent aTokens owned\n   * E.g. User has 100 aUSDC, calls withdraw() and receives 100 USDC, burning the 100 aUSDC\n   * @param asset The address of the underlying asset to withdraw\n   * @param amount The underlying amount to be withdrawn\n   *   - Send the value type(uint256).max in order to withdraw the whole aToken balance\n   * @param to The address that will receive the underlying, same as msg.sender if the user\n   *   wants to receive it on his own wallet, or a different address if the beneficiary is a\n   *   different wallet\n   * @return The final amount withdrawn\n   */\n  function withdraw(address asset, uint256 amount, address to) external returns (uint256);\n\n  /**\n   * @notice Allows users to borrow a specific `amount` of the reserve underlying asset, provided that the borrower\n   * already supplied enough collateral, or he was given enough allowance by a credit delegator on the\n   * corresponding debt token (StableDebtToken or VariableDebtToken)\n   * - E.g. User borrows 100 USDC passing as `onBehalfOf` his own address, receiving the 100 USDC in his wallet\n   *   and 100 stable/variable debt tokens, depending on the `interestRateMode`\n   * @param asset The address of the underlying asset to borrow\n   * @param amount The amount to be borrowed\n   * @param interestRateMode The interest rate mode at which the user wants to borrow: 1 for Stable, 2 for Variable\n   * @param referralCode The code used to register the integrator originating the operation, for potential rewards.\n   *   0 if the action is executed directly by the user, without any middle-man\n   * @param onBehalfOf The address of the user who will receive the debt. Should be the address of the borrower itself\n   * calling the function if he wants to borrow against his own collateral, or the address of the credit delegator\n   * if he has been given credit delegation allowance\n   */\n  function borrow(\n    address asset,\n    uint256 amount,\n    uint256 interestRateMode,\n    uint16 referralCode,\n    address onBehalfOf\n  ) external;\n\n  /**\n   * @notice Repays a borrowed `amount` on a specific reserve, burning the equivalent debt tokens owned\n   * - E.g. User repays 100 USDC, burning 100 variable/stable debt tokens of the `onBehalfOf` address\n   * @param asset The address of the borrowed underlying asset previously borrowed\n   * @param amount The amount to repay\n   * - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\n   * @param interestRateMode The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\n   * @param onBehalfOf The address of the user who will get his debt reduced/removed. Should be the address of the\n   * user calling the function if he wants to reduce/remove his own debt, or the address of any other\n   * other borrower whose debt should be removed\n   * @return The final amount repaid\n   */\n  function repay(\n    address asset,\n    uint256 amount,\n    uint256 interestRateMode,\n    address onBehalfOf\n  ) external returns (uint256);\n\n  /**\n   * @notice Repay with transfer approval of asset to be repaid done via permit function\n   * see: https://eips.ethereum.org/EIPS/eip-2612 and https://eips.ethereum.org/EIPS/eip-713\n   * @param asset The address of the borrowed underlying asset previously borrowed\n   * @param amount The amount to repay\n   * - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\n   * @param interestRateMode The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\n   * @param onBehalfOf Address of the user who will get his debt reduced/removed. Should be the address of the\n   * user calling the function if he wants to reduce/remove his own debt, or the address of any other\n   * other borrower whose debt should be removed\n   * @param deadline The deadline timestamp that the permit is valid\n   * @param permitV The V parameter of ERC712 permit sig\n   * @param permitR The R parameter of ERC712 permit sig\n   * @param permitS The S parameter of ERC712 permit sig\n   * @return The final amount repaid\n   */\n  function repayWithPermit(\n    address asset,\n    uint256 amount,\n    uint256 interestRateMode,\n    address onBehalfOf,\n    uint256 deadline,\n    uint8 permitV,\n    bytes32 permitR,\n    bytes32 permitS\n  ) external returns (uint256);\n\n  /**\n   * @notice Repays a borrowed `amount` on a specific reserve using the reserve aTokens, burning the\n   * equivalent debt tokens\n   * - E.g. User repays 100 USDC using 100 aUSDC, burning 100 variable/stable debt tokens\n   * @dev  Passing uint256.max as amount will clean up any residual aToken dust balance, if the user aToken\n   * balance is not enough to cover the whole debt\n   * @param asset The address of the borrowed underlying asset previously borrowed\n   * @param amount The amount to repay\n   * - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\n   * @param interestRateMode The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\n   * @return The final amount repaid\n   */\n  function repayWithATokens(\n    address asset,\n    uint256 amount,\n    uint256 interestRateMode\n  ) external returns (uint256);\n\n  /**\n   * @notice Allows a borrower to swap his debt between stable and variable mode, or vice versa\n   * @param asset The address of the underlying asset borrowed\n   * @param interestRateMode The current interest rate mode of the position being swapped: 1 for Stable, 2 for Variable\n   */\n  function swapBorrowRateMode(address asset, uint256 interestRateMode) external;\n\n  /**\n   * @notice Rebalances the stable interest rate of a user to the current stable rate defined on the reserve.\n   * - Users can be rebalanced if the following conditions are satisfied:\n   *     1. Usage ratio is above 95%\n   *     2. the current supply APY is below REBALANCE_UP_THRESHOLD * maxVariableBorrowRate, which means that too\n   *        much has been borrowed at a stable rate and suppliers are not earning enough\n   * @param asset The address of the underlying asset borrowed\n   * @param user The address of the user to be rebalanced\n   */\n  function rebalanceStableBorrowRate(address asset, address user) external;\n\n  /**\n   * @notice Allows suppliers to enable/disable a specific supplied asset as collateral\n   * @param asset The address of the underlying asset supplied\n   * @param useAsCollateral True if the user wants to use the supply as collateral, false otherwise\n   */\n  function setUserUseReserveAsCollateral(address asset, bool useAsCollateral) external;\n\n  /**\n   * @notice Function to liquidate a non-healthy position collateral-wise, with Health Factor below 1\n   * - The caller (liquidator) covers `debtToCover` amount of debt of the user getting liquidated, and receives\n   *   a proportionally amount of the `collateralAsset` plus a bonus to cover market risk\n   * @param collateralAsset The address of the underlying asset used as collateral, to receive as result of the liquidation\n   * @param debtAsset The address of the underlying borrowed asset to be repaid with the liquidation\n   * @param user The address of the borrower getting liquidated\n   * @param debtToCover The debt amount of borrowed `asset` the liquidator wants to cover\n   * @param receiveAToken True if the liquidators wants to receive the collateral aTokens, `false` if he wants\n   * to receive the underlying collateral asset directly\n   */\n  function liquidationCall(\n    address collateralAsset,\n    address debtAsset,\n    address user,\n    uint256 debtToCover,\n    bool receiveAToken\n  ) external;\n\n  /**\n   * @notice Allows smartcontracts to access the liquidity of the pool within one transaction,\n   * as long as the amount taken plus a fee is returned.\n   * @dev IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept\n   * into consideration. For further details please visit https://docs.aave.com/developers/\n   * @param receiverAddress The address of the contract receiving the funds, implementing IFlashLoanReceiver interface\n   * @param assets The addresses of the assets being flash-borrowed\n   * @param amounts The amounts of the assets being flash-borrowed\n   * @param interestRateModes Types of the debt to open if the flash loan is not returned:\n   *   0 -> Don't open any debt, just revert if funds can't be transferred from the receiver\n   *   1 -> Open debt at stable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\n   *   2 -> Open debt at variable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\n   * @param onBehalfOf The address  that will receive the debt in the case of using on `modes` 1 or 2\n   * @param params Variadic packed params to pass to the receiver as extra information\n   * @param referralCode The code used to register the integrator originating the operation, for potential rewards.\n   *   0 if the action is executed directly by the user, without any middle-man\n   */\n  function flashLoan(\n    address receiverAddress,\n    address[] calldata assets,\n    uint256[] calldata amounts,\n    uint256[] calldata interestRateModes,\n    address onBehalfOf,\n    bytes calldata params,\n    uint16 referralCode\n  ) external;\n\n  /**\n   * @notice Allows smartcontracts to access the liquidity of the pool within one transaction,\n   * as long as the amount taken plus a fee is returned.\n   * @dev IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept\n   * into consideration. For further details please visit https://docs.aave.com/developers/\n   * @param receiverAddress The address of the contract receiving the funds, implementing IFlashLoanSimpleReceiver interface\n   * @param asset The address of the asset being flash-borrowed\n   * @param amount The amount of the asset being flash-borrowed\n   * @param params Variadic packed params to pass to the receiver as extra information\n   * @param referralCode The code used to register the integrator originating the operation, for potential rewards.\n   *   0 if the action is executed directly by the user, without any middle-man\n   */\n  function flashLoanSimple(\n    address receiverAddress,\n    address asset,\n    uint256 amount,\n    bytes calldata params,\n    uint16 referralCode\n  ) external;\n\n  /**\n   * @notice Returns the user account data across all the reserves\n   * @param user The address of the user\n   * @return totalCollateralBase The total collateral of the user in the base currency used by the price feed\n   * @return totalDebtBase The total debt of the user in the base currency used by the price feed\n   * @return availableBorrowsBase The borrowing power left of the user in the base currency used by the price feed\n   * @return currentLiquidationThreshold The liquidation threshold of the user\n   * @return ltv The loan to value of The user\n   * @return healthFactor The current health factor of the user\n   */\n  function getUserAccountData(\n    address user\n  )\n    external\n    view\n    returns (\n      uint256 totalCollateralBase,\n      uint256 totalDebtBase,\n      uint256 availableBorrowsBase,\n      uint256 currentLiquidationThreshold,\n      uint256 ltv,\n      uint256 healthFactor\n    );\n\n  /**\n   * @notice Initializes a reserve, activating it, assigning an aToken and debt tokens and an\n   * interest rate strategy\n   * @dev Only callable by the PoolConfigurator contract\n   * @param asset The address of the underlying asset of the reserve\n   * @param aTokenAddress The address of the aToken that will be assigned to the reserve\n   * @param stableDebtAddress The address of the StableDebtToken that will be assigned to the reserve\n   * @param variableDebtAddress The address of the VariableDebtToken that will be assigned to the reserve\n   * @param interestRateStrategyAddress The address of the interest rate strategy contract\n   */\n  function initReserve(\n    address asset,\n    address aTokenAddress,\n    address stableDebtAddress,\n    address variableDebtAddress,\n    address interestRateStrategyAddress\n  ) external;\n\n  /**\n   * @notice Drop a reserve\n   * @dev Only callable by the PoolConfigurator contract\n   * @param asset The address of the underlying asset of the reserve\n   */\n  function dropReserve(address asset) external;\n\n  /**\n   * @notice Updates the address of the interest rate strategy contract\n   * @dev Only callable by the PoolConfigurator contract\n   * @param asset The address of the underlying asset of the reserve\n   * @param rateStrategyAddress The address of the interest rate strategy contract\n   */\n  function setReserveInterestRateStrategyAddress(\n    address asset,\n    address rateStrategyAddress\n  ) external;\n\n  /**\n   * @notice Sets the configuration bitmap of the reserve as a whole\n   * @dev Only callable by the PoolConfigurator contract\n   * @param asset The address of the underlying asset of the reserve\n   * @param configuration The new configuration bitmap\n   */\n  function setConfiguration(\n    address asset,\n    DataTypes.ReserveConfigurationMap calldata configuration\n  ) external;\n\n  /**\n   * @notice Returns the configuration of the reserve\n   * @param asset The address of the underlying asset of the reserve\n   * @return The configuration of the reserve\n   */\n  function getConfiguration(\n    address asset\n  ) external view returns (DataTypes.ReserveConfigurationMap memory);\n\n  /**\n   * @notice Returns the configuration of the user across all the reserves\n   * @param user The user address\n   * @return The configuration of the user\n   */\n  function getUserConfiguration(\n    address user\n  ) external view returns (DataTypes.UserConfigurationMap memory);\n\n  /**\n   * @notice Returns the normalized income of the reserve\n   * @param asset The address of the underlying asset of the reserve\n   * @return The reserve's normalized income\n   */\n  function getReserveNormalizedIncome(address asset) external view returns (uint256);\n\n  /**\n   * @notice Returns the normalized variable debt per unit of asset\n   * @dev WARNING: This function is intended to be used primarily by the protocol itself to get a\n   * \"dynamic\" variable index based on time, current stored index and virtual rate at the current\n   * moment (approx. a borrower would get if opening a position). This means that is always used in\n   * combination with variable debt supply/balances.\n   * If using this function externally, consider that is possible to have an increasing normalized\n   * variable debt that is not equivalent to how the variable debt index would be updated in storage\n   * (e.g. only updates with non-zero variable debt supply)\n   * @param asset The address of the underlying asset of the reserve\n   * @return The reserve normalized variable debt\n   */\n  function getReserveNormalizedVariableDebt(address asset) external view returns (uint256);\n\n  /**\n   * @notice Returns the state and configuration of the reserve\n   * @param asset The address of the underlying asset of the reserve\n   * @return The state and configuration data of the reserve\n   */\n  function getReserveData(address asset) external view returns (DataTypes.ReserveData memory);\n\n  /**\n   * @notice Validates and finalizes an aToken transfer\n   * @dev Only callable by the overlying aToken of the `asset`\n   * @param asset The address of the underlying asset of the aToken\n   * @param from The user from which the aTokens are transferred\n   * @param to The user receiving the aTokens\n   * @param amount The amount being transferred/withdrawn\n   * @param balanceFromBefore The aToken balance of the `from` user before the transfer\n   * @param balanceToBefore The aToken balance of the `to` user before the transfer\n   */\n  function finalizeTransfer(\n    address asset,\n    address from,\n    address to,\n    uint256 amount,\n    uint256 balanceFromBefore,\n    uint256 balanceToBefore\n  ) external;\n\n  /**\n   * @notice Returns the list of the underlying assets of all the initialized reserves\n   * @dev It does not include dropped reserves\n   * @return The addresses of the underlying assets of the initialized reserves\n   */\n  function getReservesList() external view returns (address[] memory);\n\n  /**\n   * @notice Returns the address of the underlying asset of a reserve by the reserve id as stored in the DataTypes.ReserveData struct\n   * @param id The id of the reserve as stored in the DataTypes.ReserveData struct\n   * @return The address of the reserve associated with id\n   */\n  function getReserveAddressById(uint16 id) external view returns (address);\n\n  /**\n   * @notice Returns the PoolAddressesProvider connected to this contract\n   * @return The address of the PoolAddressesProvider\n   */\n  function ADDRESSES_PROVIDER() external view returns (IPoolAddressesProvider);\n\n  /**\n   * @notice Updates the protocol fee on the bridging\n   * @param bridgeProtocolFee The part of the premium sent to the protocol treasury\n   */\n  function updateBridgeProtocolFee(uint256 bridgeProtocolFee) external;\n\n  /**\n   * @notice Updates flash loan premiums. Flash loan premium consists of two parts:\n   * - A part is sent to aToken holders as extra, one time accumulated interest\n   * - A part is collected by the protocol treasury\n   * @dev The total premium is calculated on the total borrowed amount\n   * @dev The premium to protocol is calculated on the total premium, being a percentage of `flashLoanPremiumTotal`\n   * @dev Only callable by the PoolConfigurator contract\n   * @param flashLoanPremiumTotal The total premium, expressed in bps\n   * @param flashLoanPremiumToProtocol The part of the premium sent to the protocol treasury, expressed in bps\n   */\n  function updateFlashloanPremiums(\n    uint128 flashLoanPremiumTotal,\n    uint128 flashLoanPremiumToProtocol\n  ) external;\n\n  /**\n   * @notice Configures a new category for the eMode.\n   * @dev In eMode, the protocol allows very high borrowing power to borrow assets of the same category.\n   * The category 0 is reserved as it's the default for volatile assets\n   * @param id The id of the category\n   * @param config The configuration of the category\n   */\n  function configureEModeCategory(uint8 id, DataTypes.EModeCategory memory config) external;\n\n  /**\n   * @notice Returns the data of an eMode category\n   * @param id The id of the category\n   * @return The configuration data of the category\n   */\n  function getEModeCategoryData(uint8 id) external view returns (DataTypes.EModeCategory memory);\n\n  /**\n   * @notice Allows a user to use the protocol in eMode\n   * @param categoryId The id of the category\n   */\n  function setUserEMode(uint8 categoryId) external;\n\n  /**\n   * @notice Returns the eMode the user is using\n   * @param user The address of the user\n   * @return The eMode id\n   */\n  function getUserEMode(address user) external view returns (uint256);\n\n  /**\n   * @notice Resets the isolation mode total debt of the given asset to zero\n   * @dev It requires the given asset has zero debt ceiling\n   * @param asset The address of the underlying asset to reset the isolationModeTotalDebt\n   */\n  function resetIsolationModeTotalDebt(address asset) external;\n\n  /**\n   * @notice Returns the percentage of available liquidity that can be borrowed at once at stable rate\n   * @return The percentage of available liquidity to borrow, expressed in bps\n   */\n  function MAX_STABLE_RATE_BORROW_SIZE_PERCENT() external view returns (uint256);\n\n  /**\n   * @notice Returns the total fee on flash loans\n   * @return The total fee on flashloans\n   */\n  function FLASHLOAN_PREMIUM_TOTAL() external view returns (uint128);\n\n  /**\n   * @notice Returns the part of the bridge fees sent to protocol\n   * @return The bridge fee sent to the protocol treasury\n   */\n  function BRIDGE_PROTOCOL_FEE() external view returns (uint256);\n\n  /**\n   * @notice Returns the part of the flashloan fees sent to protocol\n   * @return The flashloan fee sent to the protocol treasury\n   */\n  function FLASHLOAN_PREMIUM_TO_PROTOCOL() external view returns (uint128);\n\n  /**\n   * @notice Returns the maximum number of reserves supported to be listed in this Pool\n   * @return The maximum number of reserves supported\n   */\n  function MAX_NUMBER_RESERVES() external view returns (uint16);\n\n  /**\n   * @notice Mints the assets accrued through the reserve factor to the treasury in the form of aTokens\n   * @param assets The list of reserves for which the minting needs to be executed\n   */\n  function mintToTreasury(address[] calldata assets) external;\n\n  /**\n   * @notice Rescue and transfer tokens locked in this contract\n   * @param token The address of the token\n   * @param to The address of the recipient\n   * @param amount The amount of token to transfer\n   */\n  function rescueTokens(address token, address to, uint256 amount) external;\n\n  /**\n   * @notice Supplies an `amount` of underlying asset into the reserve, receiving in return overlying aTokens.\n   * - E.g. User supplies 100 USDC and gets in return 100 aUSDC\n   * @dev Deprecated: Use the `supply` function instead\n   * @param asset The address of the underlying asset to supply\n   * @param amount The amount to be supplied\n   * @param onBehalfOf The address that will receive the aTokens, same as msg.sender if the user\n   *   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens\n   *   is a different wallet\n   * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   *   0 if the action is executed directly by the user, without any middle-man\n   */\n  function deposit(address asset, uint256 amount, address onBehalfOf, uint16 referralCode) external;\n}\n"
			},
			"@aave/core-v3/contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0\npragma solidity ^0.8.0;\n\nimport {IPoolAddressesProvider} from '../../interfaces/IPoolAddressesProvider.sol';\nimport {IPool} from '../../interfaces/IPool.sol';\n\n/**\n * @title IFlashLoanSimpleReceiver\n * @author Aave\n * @notice Defines the basic interface of a flashloan-receiver contract.\n * @dev Implement this interface to develop a flashloan-compatible flashLoanReceiver contract\n */\ninterface IFlashLoanSimpleReceiver {\n  /**\n   * @notice Executes an operation after receiving the flash-borrowed asset\n   * @dev Ensure that the contract can return the debt + premium, e.g., has\n   *      enough funds to repay and has approved the Pool to pull the total amount\n   * @param asset The address of the flash-borrowed asset\n   * @param amount The amount of the flash-borrowed asset\n   * @param premium The fee of the flash-borrowed asset\n   * @param initiator The address of the flashloan initiator\n   * @param params The byte-encoded params passed when initiating the flashloan\n   * @return True if the execution of the operation succeeds, false otherwise\n   */\n  function executeOperation(\n    address asset,\n    uint256 amount,\n    uint256 premium,\n    address initiator,\n    bytes calldata params\n  ) external returns (bool);\n\n  function ADDRESSES_PROVIDER() external view returns (IPoolAddressesProvider);\n\n  function POOL() external view returns (IPool);\n}\n"
			},
			"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n  function _msgSender() internal view virtual returns (address payable) {\n    return payable(msg.sender);\n  }\n\n  function _msgData() internal view virtual returns (bytes memory) {\n    this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n    return msg.data;\n  }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@aave/core-v3/contracts/dependencies/gnosis/contracts/GPv2SafeERC20.sol": {
				"GPv2SafeERC20": {
					"abi": [],
					"devdoc": {
						"author": "Gnosis Developers",
						"details": "Gas-efficient version of Openzeppelin's SafeERC20 contract.",
						"kind": "dev",
						"methods": {},
						"title": "Gnosis Protocol v2 Safe ERC20 Transfer Library",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@aave/core-v3/contracts/dependencies/gnosis/contracts/GPv2SafeERC20.sol\":293:4724  library GPv2SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@aave/core-v3/contracts/dependencies/gnosis/contracts/GPv2SafeERC20.sol\":293:4724  library GPv2SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202f4c33345085f5bd705ee6fd9814dba12a20e35fab853a3ec43392e7a6e706a764736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212202f4c33345085f5bd705ee6fd9814dba12a20e35fab853a3ec43392e7a6e706a764736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F 0x4C CALLER CALLVALUE POP DUP6 CREATE2 0xBD PUSH17 0x5EE6FD9814DBA12A20E35FAB853A3EC433 SWAP3 0xE7 0xA6 0xE7 MOD 0xA7 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "293:4431:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212202f4c33345085f5bd705ee6fd9814dba12a20e35fab853a3ec43392e7a6e706a764736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F 0x4C CALLER CALLVALUE POP DUP6 CREATE2 0xBD PUSH17 0x5EE6FD9814DBA12A20E35FAB853A3EC433 SWAP3 0xE7 0xA6 0xE7 MOD 0xA7 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "293:4431:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"getLastTransferResult(contract IERC20)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 293,
									"end": 4724,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 293,
									"end": 4724,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 293,
									"end": 4724,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 293,
									"end": 4724,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 293,
									"end": 4724,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 293,
									"end": 4724,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 293,
									"end": 4724,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 293,
									"end": 4724,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 293,
									"end": 4724,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 293,
									"end": 4724,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 293,
									"end": 4724,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 293,
									"end": 4724,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 293,
									"end": 4724,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 293,
									"end": 4724,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 293,
									"end": 4724,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 293,
									"end": 4724,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 293,
									"end": 4724,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 293,
									"end": 4724,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 293,
									"end": 4724,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 293,
									"end": 4724,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 293,
									"end": 4724,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 293,
									"end": 4724,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 293,
									"end": 4724,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 293,
									"end": 4724,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 293,
									"end": 4724,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 293,
									"end": 4724,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 293,
									"end": 4724,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 293,
									"end": 4724,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 293,
									"end": 4724,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 293,
									"end": 4724,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 293,
									"end": 4724,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 293,
									"end": 4724,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 293,
									"end": 4724,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 293,
									"end": 4724,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 293,
									"end": 4724,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202f4c33345085f5bd705ee6fd9814dba12a20e35fab853a3ec43392e7a6e706a764736f6c634300081a0033",
									".code": [
										{
											"begin": 293,
											"end": 4724,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 293,
											"end": 4724,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 293,
											"end": 4724,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 293,
											"end": 4724,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 293,
											"end": 4724,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 293,
											"end": 4724,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 293,
											"end": 4724,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 293,
											"end": 4724,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 293,
											"end": 4724,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"@aave/core-v3/contracts/dependencies/gnosis/contracts/GPv2SafeERC20.sol",
								"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Address.sol",
								"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Context.sol",
								"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/IERC20.sol",
								"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/IERC20Detailed.sol",
								"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol",
								"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/SafeERC20.sol",
								"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/SafeMath.sol",
								"@aave/core-v3/contracts/flashloan/base/FlashLoanSimpleReceiverBase.sol",
								"@aave/core-v3/contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol",
								"@aave/core-v3/contracts/interfaces/IERC20WithPermit.sol",
								"@aave/core-v3/contracts/interfaces/IPool.sol",
								"@aave/core-v3/contracts/interfaces/IPoolAddressesProvider.sol",
								"@aave/core-v3/contracts/interfaces/IPriceOracleGetter.sol",
								"@aave/core-v3/contracts/protocol/libraries/math/PercentageMath.sol",
								"@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol",
								"contracts/adapters/paraswap/BaseParaSwapAdapter.sol",
								"contracts/adapters/paraswap/BaseParaSwapSellAdapter.sol",
								"contracts/adapters/paraswap/interfaces/IParaSwapAugustus.sol",
								"contracts/adapters/paraswap/interfaces/IParaSwapAugustusRegistry.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Gnosis Developers\",\"details\":\"Gas-efficient version of Openzeppelin's SafeERC20 contract.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Gnosis Protocol v2 Safe ERC20 Transfer Library\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@aave/core-v3/contracts/dependencies/gnosis/contracts/GPv2SafeERC20.sol\":\"GPv2SafeERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@aave/core-v3/contracts/dependencies/gnosis/contracts/GPv2SafeERC20.sol\":{\"keccak256\":\"0xb18337187a2a6c4e64c61f8e4e06f0e932a69bb8f33688943bf50d7f4198e44b\",\"license\":\"LGPL-3.0-or-later\",\"urls\":[\"bzz-raw://38c0769720d226d41fb5a0f504a0b9434ca266acb15d1de9bbc08f1a5c8a7bbc\",\"dweb:/ipfs/QmeskcXDL7cbMXbjEdAdbUamKmjqYKBwRfheFZmm9mpBKJ\"]},\"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/IERC20.sol\":{\"keccak256\":\"0xf57d62241e553696a1324d225663ba2e1a51db0a51ca236d0c1b009d89b6284c\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://d327db93b636790909aa137124f30a856ac1631cb79c476aa188f9627fda8d03\",\"dweb:/ipfs/QmaxpmEoBFioeNYmpxJemyZ7aYF2nX1NKW1XDqREm7i6es\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Address.sol\":179:7380  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Address.sol\":179:7380  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122014359f8554c49961e322f3b2dc118236cdb8e871c98057a54f537275c418618364736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122014359f8554c49961e322f3b2dc118236cdb8e871c98057a54f537275c418618364736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EQ CALLDATALOAD SWAP16 DUP6 SLOAD 0xC4 SWAP10 PUSH2 0xE322 RETURN 0xB2 0xDC GT DUP3 CALLDATASIZE 0xCD 0xB8 0xE8 PUSH18 0xC98057A54F537275C418618364736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "179:7201:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122014359f8554c49961e322f3b2dc118236cdb8e871c98057a54f537275c418618364736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EQ CALLDATALOAD SWAP16 DUP6 SLOAD 0xC4 SWAP10 PUSH2 0xE322 RETURN 0xB2 0xDC GT DUP3 CALLDATASIZE 0xCD 0xB8 0xE8 PUSH18 0xC98057A54F537275C418618364736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "179:7201:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 179,
									"end": 7380,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 179,
									"end": 7380,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 179,
									"end": 7380,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 179,
									"end": 7380,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 179,
									"end": 7380,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 179,
									"end": 7380,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 179,
									"end": 7380,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 179,
									"end": 7380,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 179,
									"end": 7380,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 179,
									"end": 7380,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7380,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 179,
									"end": 7380,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 179,
									"end": 7380,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 179,
									"end": 7380,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 179,
									"end": 7380,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 179,
									"end": 7380,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 179,
									"end": 7380,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7380,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 179,
									"end": 7380,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7380,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 179,
									"end": 7380,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 179,
									"end": 7380,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 179,
									"end": 7380,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7380,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 179,
									"end": 7380,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 179,
									"end": 7380,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 179,
									"end": 7380,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 179,
									"end": 7380,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7380,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 179,
									"end": 7380,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 179,
									"end": 7380,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 179,
									"end": 7380,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 179,
									"end": 7380,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 179,
									"end": 7380,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 179,
									"end": 7380,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122014359f8554c49961e322f3b2dc118236cdb8e871c98057a54f537275c418618364736f6c634300081a0033",
									".code": [
										{
											"begin": 179,
											"end": 7380,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 179,
											"end": 7380,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 179,
											"end": 7380,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 179,
											"end": 7380,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 179,
											"end": 7380,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 179,
											"end": 7380,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 179,
											"end": 7380,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 179,
											"end": 7380,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 179,
											"end": 7380,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"@aave/core-v3/contracts/dependencies/gnosis/contracts/GPv2SafeERC20.sol",
								"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Address.sol",
								"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Context.sol",
								"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/IERC20.sol",
								"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/IERC20Detailed.sol",
								"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol",
								"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/SafeERC20.sol",
								"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/SafeMath.sol",
								"@aave/core-v3/contracts/flashloan/base/FlashLoanSimpleReceiverBase.sol",
								"@aave/core-v3/contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol",
								"@aave/core-v3/contracts/interfaces/IERC20WithPermit.sol",
								"@aave/core-v3/contracts/interfaces/IPool.sol",
								"@aave/core-v3/contracts/interfaces/IPoolAddressesProvider.sol",
								"@aave/core-v3/contracts/interfaces/IPriceOracleGetter.sol",
								"@aave/core-v3/contracts/protocol/libraries/math/PercentageMath.sol",
								"@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol",
								"contracts/adapters/paraswap/BaseParaSwapAdapter.sol",
								"contracts/adapters/paraswap/BaseParaSwapSellAdapter.sol",
								"contracts/adapters/paraswap/interfaces/IParaSwapAugustus.sol",
								"contracts/adapters/paraswap/interfaces/IParaSwapAugustusRegistry.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Address.sol\":\"Address\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Address.sol\":{\"keccak256\":\"0x4ce20476966f73ba3c0aeb85b602b6ecc4e715f5bd9524d1c6286819282c76c5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b856247f6c2fe07d0d293ed4b493a7ec37fa2dd8de7c69b446482ca49532fecd\",\"dweb:/ipfs/QmSYTbb8cMjrQ1dtgfLUEektidnT9Wjaxqz7HWU28QTEgS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Context.sol\":{\"keccak256\":\"0xc0df5ebb2c3d8b4509464c40a88cc51e5e5f5e4a26fafc909330e9bb2658f641\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc2690f871399de8f14e4cd8ae9b57a67e135afa28ac4be76594eaf4ecd8e244\",\"dweb:/ipfs/Qmb9gKAnQBciUknb3ysnfDpWAdYXGJm51NzFYWNkXwoAZg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/IERC20.sol\":{\"keccak256\":\"0xf57d62241e553696a1324d225663ba2e1a51db0a51ca236d0c1b009d89b6284c\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://d327db93b636790909aa137124f30a856ac1631cb79c476aa188f9627fda8d03\",\"dweb:/ipfs/QmaxpmEoBFioeNYmpxJemyZ7aYF2nX1NKW1XDqREm7i6es\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/IERC20Detailed.sol": {
				"IERC20Detailed": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/IERC20Detailed.sol\":\"IERC20Detailed\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/IERC20.sol\":{\"keccak256\":\"0xf57d62241e553696a1324d225663ba2e1a51db0a51ca236d0c1b009d89b6284c\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://d327db93b636790909aa137124f30a856ac1631cb79c476aa188f9627fda8d03\",\"dweb:/ipfs/QmaxpmEoBFioeNYmpxJemyZ7aYF2nX1NKW1XDqREm7i6es\"]},\"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/IERC20Detailed.sol\":{\"keccak256\":\"0x9365cd885dc1ed7aed1364ae4dedf8e4660100cba0437061013f64c5002b385a\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://ddc639d67c82e15f76b08588e8ad2ee87eaff6bb9cba5c0e5b08e242c3c4ac00\",\"dweb:/ipfs/QmY1D9WcH3nmg2VVfqSUkEX6Zrkmkmx8oi2pJAvw5BABi7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol\":578:2103  contract Ownable is Context {... */\n  mstore(0x40, 0x80)\n    /* \"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol\":815:950  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol\":835:852  address msgSender */\n  0x00\n    /* \"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol\":855:867  _msgSender() */\n  tag_4\n    /* \"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol\":855:865  _msgSender */\n  shl(0x20, tag_5)\n    /* \"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol\":855:867  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_4:\n    /* \"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol\":835:867  address msgSender = _msgSender() */\n  swap1\n  pop\n    /* \"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol\":882:891  msgSender */\n  dup1\n    /* \"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol\":873:879  _owner */\n  0x00\n  dup1\n    /* \"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol\":873:891  _owner = msgSender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol\":935:944  msgSender */\n  dup1\n    /* \"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol\":902:945  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol\":931:932  0 */\n  0x00\n    /* \"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol\":902:945  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol\":829:950  {... */\n  pop\n    /* \"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol\":578:2103  contract Ownable is Context {... */\n  jump(tag_6)\n    /* \"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Context.sol\":587:694  function _msgSender() internal view virtual returns (address payable) {... */\ntag_5:\n    /* \"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Context.sol\":640:655  address payable */\n  0x00\n    /* \"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Context.sol\":678:688  msg.sender */\n  caller\n    /* \"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Context.sol\":663:689  return payable(msg.sender) */\n  swap1\n  pop\n    /* \"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Context.sol\":587:694  function _msgSender() internal view virtual returns (address payable) {... */\n  swap1\n  jump\t// out\n    /* \"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol\":578:2103  contract Ownable is Context {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol\":578:2103  contract Ownable is Context {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1601:1736  function renounceOwnership() public virtual onlyOwner {... */\n    tag_3:\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      stop\n        /* \"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1018:1089  function owner() public view returns (address) {... */\n    tag_4:\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1875:2101  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_5:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      stop\n        /* \"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1601:1736  function renounceOwnership() public virtual onlyOwner {... */\n    tag_7:\n        /* \"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1214:1226  _msgSender() */\n      tag_17\n        /* \"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1214:1224  _msgSender */\n      tag_18\n        /* \"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1214:1226  _msgSender() */\n      jump\t// in\n    tag_17:\n        /* \"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1204:1226  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1204:1210  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1204:1226  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1196:1263  require(_owner == _msgSender(), 'Ownable: caller is not the owner') */\n      tag_19\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_20\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_19:\n        /* \"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1703:1704  0 */\n      0x00\n        /* \"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1666:1706  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1687:1693  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1666:1706  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1729:1730  0 */\n      0x00\n        /* \"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1712:1718  _owner */\n      dup1\n      0x00\n        /* \"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1712:1731  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1601:1736  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1018:1089  function owner() public view returns (address) {... */\n    tag_9:\n        /* \"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1056:1063  address */\n      0x00\n        /* \"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1078:1084  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1071:1084  return _owner */\n      swap1\n      pop\n        /* \"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1018:1089  function owner() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1875:2101  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_15:\n        /* \"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1214:1226  _msgSender() */\n      tag_25\n        /* \"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1214:1224  _msgSender */\n      tag_18\n        /* \"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1214:1226  _msgSender() */\n      jump\t// in\n    tag_25:\n        /* \"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1204:1226  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1204:1210  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1204:1226  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1196:1263  require(_owner == _msgSender(), 'Ownable: caller is not the owner') */\n      tag_26\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_27\n      swap1\n      tag_21\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_26:\n        /* \"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1979:1980  0 */\n      0x00\n        /* \"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1959:1981  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1959:1967  newOwner */\n      dup2\n        /* \"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1959:1981  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1951:2024  require(newOwner != address(0), 'Ownable: new owner is the zero address') */\n      tag_29\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_30\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_29:\n        /* \"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol\":2064:2072  newOwner */\n      dup1\n        /* \"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol\":2035:2073  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol\":2056:2062  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol\":2035:2073  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol\":2088:2096  newOwner */\n      dup1\n        /* \"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol\":2079:2085  _owner */\n      0x00\n      dup1\n        /* \"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol\":2079:2096  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol\":1875:2101  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Context.sol\":587:694  function _msgSender() internal view virtual returns (address payable) {... */\n    tag_18:\n        /* \"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Context.sol\":640:655  address payable */\n      0x00\n        /* \"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Context.sol\":678:688  msg.sender */\n      caller\n        /* \"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Context.sol\":663:689  return payable(msg.sender) */\n      swap1\n      pop\n        /* \"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Context.sol\":587:694  function _msgSender() internal view virtual returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_33:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_34:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_49\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_33\n      jump\t// in\n    tag_49:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:359   */\n    tag_35:\n        /* \"#utility.yul\":328:352   */\n      tag_51\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":328:352   */\n      tag_34\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":323:326   */\n      dup3\n        /* \"#utility.yul\":316:353   */\n      mstore\n        /* \"#utility.yul\":241:359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":365:587   */\n    tag_11:\n        /* \"#utility.yul\":458:462   */\n      0x00\n        /* \"#utility.yul\":496:498   */\n      0x20\n        /* \"#utility.yul\":485:494   */\n      dup3\n        /* \"#utility.yul\":481:499   */\n      add\n        /* \"#utility.yul\":473:499   */\n      swap1\n      pop\n        /* \"#utility.yul\":509:580   */\n      tag_53\n        /* \"#utility.yul\":577:578   */\n      0x00\n        /* \"#utility.yul\":566:575   */\n      dup4\n        /* \"#utility.yul\":562:579   */\n      add\n        /* \"#utility.yul\":553:559   */\n      dup5\n        /* \"#utility.yul\":509:580   */\n      tag_35\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":365:587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":674:791   */\n    tag_37:\n        /* \"#utility.yul\":783:784   */\n      0x00\n        /* \"#utility.yul\":780:781   */\n      dup1\n        /* \"#utility.yul\":773:785   */\n      revert\n        /* \"#utility.yul\":920:1042   */\n    tag_39:\n        /* \"#utility.yul\":993:1017   */\n      tag_58\n        /* \"#utility.yul\":1011:1016   */\n      dup2\n        /* \"#utility.yul\":993:1017   */\n      tag_34\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":986:991   */\n      dup2\n        /* \"#utility.yul\":983:1018   */\n      eq\n        /* \"#utility.yul\":973:1036   */\n      tag_59\n      jumpi\n        /* \"#utility.yul\":1032:1033   */\n      0x00\n        /* \"#utility.yul\":1029:1030   */\n      dup1\n        /* \"#utility.yul\":1022:1034   */\n      revert\n        /* \"#utility.yul\":973:1036   */\n    tag_59:\n        /* \"#utility.yul\":920:1042   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1048:1187   */\n    tag_40:\n        /* \"#utility.yul\":1094:1099   */\n      0x00\n        /* \"#utility.yul\":1132:1138   */\n      dup2\n        /* \"#utility.yul\":1119:1139   */\n      calldataload\n        /* \"#utility.yul\":1110:1139   */\n      swap1\n      pop\n        /* \"#utility.yul\":1148:1181   */\n      tag_61\n        /* \"#utility.yul\":1175:1180   */\n      dup2\n        /* \"#utility.yul\":1148:1181   */\n      tag_39\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":1048:1187   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1193:1522   */\n    tag_14:\n        /* \"#utility.yul\":1252:1258   */\n      0x00\n        /* \"#utility.yul\":1301:1303   */\n      0x20\n        /* \"#utility.yul\":1289:1298   */\n      dup3\n        /* \"#utility.yul\":1280:1287   */\n      dup5\n        /* \"#utility.yul\":1276:1299   */\n      sub\n        /* \"#utility.yul\":1272:1304   */\n      slt\n        /* \"#utility.yul\":1269:1388   */\n      iszero\n      tag_63\n      jumpi\n        /* \"#utility.yul\":1307:1386   */\n      tag_64\n      tag_37\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":1269:1388   */\n    tag_63:\n        /* \"#utility.yul\":1427:1428   */\n      0x00\n        /* \"#utility.yul\":1452:1505   */\n      tag_65\n        /* \"#utility.yul\":1497:1504   */\n      dup5\n        /* \"#utility.yul\":1488:1494   */\n      dup3\n        /* \"#utility.yul\":1477:1486   */\n      dup6\n        /* \"#utility.yul\":1473:1495   */\n      add\n        /* \"#utility.yul\":1452:1505   */\n      tag_40\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":1442:1505   */\n      swap2\n      pop\n        /* \"#utility.yul\":1398:1515   */\n      pop\n        /* \"#utility.yul\":1193:1522   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1528:1697   */\n    tag_41:\n        /* \"#utility.yul\":1612:1623   */\n      0x00\n        /* \"#utility.yul\":1646:1652   */\n      dup3\n        /* \"#utility.yul\":1641:1644   */\n      dup3\n        /* \"#utility.yul\":1634:1653   */\n      mstore\n        /* \"#utility.yul\":1686:1690   */\n      0x20\n        /* \"#utility.yul\":1681:1684   */\n      dup3\n        /* \"#utility.yul\":1677:1691   */\n      add\n        /* \"#utility.yul\":1662:1691   */\n      swap1\n      pop\n        /* \"#utility.yul\":1528:1697   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1703:1885   */\n    tag_42:\n        /* \"#utility.yul\":1843:1877   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":1839:1840   */\n      0x00\n        /* \"#utility.yul\":1831:1837   */\n      dup3\n        /* \"#utility.yul\":1827:1841   */\n      add\n        /* \"#utility.yul\":1820:1878   */\n      mstore\n        /* \"#utility.yul\":1703:1885   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1891:2257   */\n    tag_43:\n        /* \"#utility.yul\":2033:2036   */\n      0x00\n        /* \"#utility.yul\":2054:2121   */\n      tag_69\n        /* \"#utility.yul\":2118:2120   */\n      0x20\n        /* \"#utility.yul\":2113:2116   */\n      dup4\n        /* \"#utility.yul\":2054:2121   */\n      tag_41\n      jump\t// in\n    tag_69:\n        /* \"#utility.yul\":2047:2121   */\n      swap2\n      pop\n        /* \"#utility.yul\":2130:2223   */\n      tag_70\n        /* \"#utility.yul\":2219:2222   */\n      dup3\n        /* \"#utility.yul\":2130:2223   */\n      tag_42\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":2248:2250   */\n      0x20\n        /* \"#utility.yul\":2243:2246   */\n      dup3\n        /* \"#utility.yul\":2239:2251   */\n      add\n        /* \"#utility.yul\":2232:2251   */\n      swap1\n      pop\n        /* \"#utility.yul\":1891:2257   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2263:2682   */\n    tag_21:\n        /* \"#utility.yul\":2429:2433   */\n      0x00\n        /* \"#utility.yul\":2467:2469   */\n      0x20\n        /* \"#utility.yul\":2456:2465   */\n      dup3\n        /* \"#utility.yul\":2452:2470   */\n      add\n        /* \"#utility.yul\":2444:2470   */\n      swap1\n      pop\n        /* \"#utility.yul\":2516:2525   */\n      dup2\n        /* \"#utility.yul\":2510:2514   */\n      dup2\n        /* \"#utility.yul\":2506:2526   */\n      sub\n        /* \"#utility.yul\":2502:2503   */\n      0x00\n        /* \"#utility.yul\":2491:2500   */\n      dup4\n        /* \"#utility.yul\":2487:2504   */\n      add\n        /* \"#utility.yul\":2480:2527   */\n      mstore\n        /* \"#utility.yul\":2544:2675   */\n      tag_72\n        /* \"#utility.yul\":2670:2674   */\n      dup2\n        /* \"#utility.yul\":2544:2675   */\n      tag_43\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":2536:2675   */\n      swap1\n      pop\n        /* \"#utility.yul\":2263:2682   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2688:2913   */\n    tag_44:\n        /* \"#utility.yul\":2828:2862   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":2824:2825   */\n      0x00\n        /* \"#utility.yul\":2816:2822   */\n      dup3\n        /* \"#utility.yul\":2812:2826   */\n      add\n        /* \"#utility.yul\":2805:2863   */\n      mstore\n        /* \"#utility.yul\":2897:2905   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2892:2894   */\n      0x20\n        /* \"#utility.yul\":2884:2890   */\n      dup3\n        /* \"#utility.yul\":2880:2895   */\n      add\n        /* \"#utility.yul\":2873:2906   */\n      mstore\n        /* \"#utility.yul\":2688:2913   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2919:3285   */\n    tag_45:\n        /* \"#utility.yul\":3061:3064   */\n      0x00\n        /* \"#utility.yul\":3082:3149   */\n      tag_75\n        /* \"#utility.yul\":3146:3148   */\n      0x26\n        /* \"#utility.yul\":3141:3144   */\n      dup4\n        /* \"#utility.yul\":3082:3149   */\n      tag_41\n      jump\t// in\n    tag_75:\n        /* \"#utility.yul\":3075:3149   */\n      swap2\n      pop\n        /* \"#utility.yul\":3158:3251   */\n      tag_76\n        /* \"#utility.yul\":3247:3250   */\n      dup3\n        /* \"#utility.yul\":3158:3251   */\n      tag_44\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":3276:3278   */\n      0x40\n        /* \"#utility.yul\":3271:3274   */\n      dup3\n        /* \"#utility.yul\":3267:3279   */\n      add\n        /* \"#utility.yul\":3260:3279   */\n      swap1\n      pop\n        /* \"#utility.yul\":2919:3285   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3291:3710   */\n    tag_31:\n        /* \"#utility.yul\":3457:3461   */\n      0x00\n        /* \"#utility.yul\":3495:3497   */\n      0x20\n        /* \"#utility.yul\":3484:3493   */\n      dup3\n        /* \"#utility.yul\":3480:3498   */\n      add\n        /* \"#utility.yul\":3472:3498   */\n      swap1\n      pop\n        /* \"#utility.yul\":3544:3553   */\n      dup2\n        /* \"#utility.yul\":3538:3542   */\n      dup2\n        /* \"#utility.yul\":3534:3554   */\n      sub\n        /* \"#utility.yul\":3530:3531   */\n      0x00\n        /* \"#utility.yul\":3519:3528   */\n      dup4\n        /* \"#utility.yul\":3515:3532   */\n      add\n        /* \"#utility.yul\":3508:3555   */\n      mstore\n        /* \"#utility.yul\":3572:3703   */\n      tag_78\n        /* \"#utility.yul\":3698:3702   */\n      dup2\n        /* \"#utility.yul\":3572:3703   */\n      tag_45\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":3564:3703   */\n      swap1\n      pop\n        /* \"#utility.yul\":3291:3710   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220c10ba62e2e6825ff3c591bb17b2fc7782bbd94f11c5f0dfdc4ba3966fc677e4764736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_529": {
									"entryPoint": null,
									"id": 529,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_381": {
									"entryPoint": 188,
									"id": 381,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b505f601c60bc60201b60201c565b9050805f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff165f73ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35060c3565b5f33905090565b6105ad806100d05f395ff3fe608060405234801561000f575f80fd5b506004361061003f575f3560e01c8063715018a6146100435780638da5cb5b1461004d578063f2fde38b1461006b575b5f80fd5b61004b610087565b005b6100556101d5565b60405161006291906103ff565b60405180910390f35b61008560048036038101906100809190610446565b6101fc565b005b61008f6103b9565b73ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461011b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610112906104cb565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35f805f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6102046103b9565b73ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610290576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610287906104cb565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036102fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102f590610559565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3805f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6103e9826103c0565b9050919050565b6103f9816103df565b82525050565b5f6020820190506104125f8301846103f0565b92915050565b5f80fd5b610425816103df565b811461042f575f80fd5b50565b5f813590506104408161041c565b92915050565b5f6020828403121561045b5761045a610418565b5b5f61046884828501610432565b91505092915050565b5f82825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65725f82015250565b5f6104b5602083610471565b91506104c082610481565b602082019050919050565b5f6020820190508181035f8301526104e2816104a9565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f20615f8201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b5f610543602683610471565b915061054e826104e9565b604082019050919050565b5f6020820190508181035f83015261057081610537565b905091905056fea2646970667358221220c10ba62e2e6825ff3c591bb17b2fc7782bbd94f11c5f0dfdc4ba3966fc677e4764736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 PUSH1 0x1C PUSH1 0xBC PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0xC3 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x5AD DUP1 PUSH2 0xD0 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6B JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x4B PUSH2 0x87 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x55 PUSH2 0x1D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62 SWAP2 SWAP1 PUSH2 0x3FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x85 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x80 SWAP2 SWAP1 PUSH2 0x446 JUMP JUMPDEST PUSH2 0x1FC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x8F PUSH2 0x3B9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x112 SWAP1 PUSH2 0x4CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH0 DUP1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x204 PUSH2 0x3B9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x290 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x287 SWAP1 PUSH2 0x4CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2FE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F5 SWAP1 PUSH2 0x559 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x3E9 DUP3 PUSH2 0x3C0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3F9 DUP2 PUSH2 0x3DF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x412 PUSH0 DUP4 ADD DUP5 PUSH2 0x3F0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x425 DUP2 PUSH2 0x3DF JUMP JUMPDEST DUP2 EQ PUSH2 0x42F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x440 DUP2 PUSH2 0x41C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x45B JUMPI PUSH2 0x45A PUSH2 0x418 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x468 DUP5 DUP3 DUP6 ADD PUSH2 0x432 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x4B5 PUSH1 0x20 DUP4 PUSH2 0x471 JUMP JUMPDEST SWAP2 POP PUSH2 0x4C0 DUP3 PUSH2 0x481 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x4E2 DUP2 PUSH2 0x4A9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x543 PUSH1 0x26 DUP4 PUSH2 0x471 JUMP JUMPDEST SWAP2 POP PUSH2 0x54E DUP3 PUSH2 0x4E9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x570 DUP2 PUSH2 0x537 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC1 SIGNEXTEND 0xA6 0x2E 0x2E PUSH9 0x25FF3C591BB17B2FC7 PUSH25 0x2BBD94F11C5F0DFDC4BA3966FC677E4764736F6C634300081A STOP CALLER ",
							"sourceMap": "578:1525:5:-:0;;;815:135;;;;;;;;;;835:17;855:12;:10;;;:12;;:::i;:::-;835:32;;882:9;873:6;;:18;;;;;;;;;;;;;;;;;;935:9;902:43;;931:1;902:43;;;;;;;;;;;;829:121;578:1525;;587:107:2;640:15;678:10;663:26;;587:107;:::o;578:1525:5:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_msgSender_381": {
									"entryPoint": 953,
									"id": 381,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_538": {
									"entryPoint": 469,
									"id": 538,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_573": {
									"entryPoint": 135,
									"id": 573,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_601": {
									"entryPoint": 508,
									"id": 601,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 1074,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1094,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1008,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1335,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1193,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1023,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1369,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1227,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1137,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 991,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 960,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1048,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 1257,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 1153,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1052,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3713:20",
										"nodeType": "YulBlock",
										"src": "0:3713:20",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:20",
													"nodeType": "YulBlock",
													"src": "52:81:20",
													"statements": [
														{
															"nativeSrc": "62:65:20",
															"nodeType": "YulAssignment",
															"src": "62:65:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:20",
																		"nodeType": "YulLiteral",
																		"src": "84:42:20",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:20"
																},
																"nativeSrc": "73:54:20",
																"nodeType": "YulFunctionCall",
																"src": "73:54:20"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:20",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:20"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:20",
														"nodeType": "YulTypedName",
														"src": "34:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:20",
														"nodeType": "YulTypedName",
														"src": "44:7:20",
														"type": ""
													}
												],
												"src": "7:126:20"
											},
											{
												"body": {
													"nativeSrc": "184:51:20",
													"nodeType": "YulBlock",
													"src": "184:51:20",
													"statements": [
														{
															"nativeSrc": "194:35:20",
															"nodeType": "YulAssignment",
															"src": "194:35:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "223:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:20"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "205:17:20",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:20"
																},
																"nativeSrc": "205:24:20",
																"nodeType": "YulFunctionCall",
																"src": "205:24:20"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "194:7:20",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:20"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "139:96:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "166:5:20",
														"nodeType": "YulTypedName",
														"src": "166:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "176:7:20",
														"nodeType": "YulTypedName",
														"src": "176:7:20",
														"type": ""
													}
												],
												"src": "139:96:20"
											},
											{
												"body": {
													"nativeSrc": "306:53:20",
													"nodeType": "YulBlock",
													"src": "306:53:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "323:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "346:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:20"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "328:17:20",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:20"
																		},
																		"nativeSrc": "328:24:20",
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "316:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:20"
																},
																"nativeSrc": "316:37:20",
																"nodeType": "YulFunctionCall",
																"src": "316:37:20"
															},
															"nativeSrc": "316:37:20",
															"nodeType": "YulExpressionStatement",
															"src": "316:37:20"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "241:118:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "294:5:20",
														"nodeType": "YulTypedName",
														"src": "294:5:20",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "301:3:20",
														"nodeType": "YulTypedName",
														"src": "301:3:20",
														"type": ""
													}
												],
												"src": "241:118:20"
											},
											{
												"body": {
													"nativeSrc": "463:124:20",
													"nodeType": "YulBlock",
													"src": "463:124:20",
													"statements": [
														{
															"nativeSrc": "473:26:20",
															"nodeType": "YulAssignment",
															"src": "473:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "485:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "496:2:20",
																		"nodeType": "YulLiteral",
																		"src": "496:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "481:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:20"
																},
																"nativeSrc": "481:18:20",
																"nodeType": "YulFunctionCall",
																"src": "481:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "473:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "553:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "566:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "577:1:20",
																				"nodeType": "YulLiteral",
																				"src": "577:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "562:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:20"
																		},
																		"nativeSrc": "562:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "509:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:20"
																},
																"nativeSrc": "509:71:20",
																"nodeType": "YulFunctionCall",
																"src": "509:71:20"
															},
															"nativeSrc": "509:71:20",
															"nodeType": "YulExpressionStatement",
															"src": "509:71:20"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "365:222:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "435:9:20",
														"nodeType": "YulTypedName",
														"src": "435:9:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "447:6:20",
														"nodeType": "YulTypedName",
														"src": "447:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "458:4:20",
														"nodeType": "YulTypedName",
														"src": "458:4:20",
														"type": ""
													}
												],
												"src": "365:222:20"
											},
											{
												"body": {
													"nativeSrc": "633:35:20",
													"nodeType": "YulBlock",
													"src": "633:35:20",
													"statements": [
														{
															"nativeSrc": "643:19:20",
															"nodeType": "YulAssignment",
															"src": "643:19:20",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "659:2:20",
																		"nodeType": "YulLiteral",
																		"src": "659:2:20",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "653:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "653:5:20"
																},
																"nativeSrc": "653:9:20",
																"nodeType": "YulFunctionCall",
																"src": "653:9:20"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "643:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "643:6:20"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "593:75:20",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "626:6:20",
														"nodeType": "YulTypedName",
														"src": "626:6:20",
														"type": ""
													}
												],
												"src": "593:75:20"
											},
											{
												"body": {
													"nativeSrc": "763:28:20",
													"nodeType": "YulBlock",
													"src": "763:28:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "780:1:20",
																		"nodeType": "YulLiteral",
																		"src": "780:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "783:1:20",
																		"nodeType": "YulLiteral",
																		"src": "783:1:20",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "773:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "773:6:20"
																},
																"nativeSrc": "773:12:20",
																"nodeType": "YulFunctionCall",
																"src": "773:12:20"
															},
															"nativeSrc": "773:12:20",
															"nodeType": "YulExpressionStatement",
															"src": "773:12:20"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "674:117:20",
												"nodeType": "YulFunctionDefinition",
												"src": "674:117:20"
											},
											{
												"body": {
													"nativeSrc": "886:28:20",
													"nodeType": "YulBlock",
													"src": "886:28:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "903:1:20",
																		"nodeType": "YulLiteral",
																		"src": "903:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "906:1:20",
																		"nodeType": "YulLiteral",
																		"src": "906:1:20",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "896:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "896:6:20"
																},
																"nativeSrc": "896:12:20",
																"nodeType": "YulFunctionCall",
																"src": "896:12:20"
															},
															"nativeSrc": "896:12:20",
															"nodeType": "YulExpressionStatement",
															"src": "896:12:20"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "797:117:20",
												"nodeType": "YulFunctionDefinition",
												"src": "797:117:20"
											},
											{
												"body": {
													"nativeSrc": "963:79:20",
													"nodeType": "YulBlock",
													"src": "963:79:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "1020:16:20",
																"nodeType": "YulBlock",
																"src": "1020:16:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1029:1:20",
																					"nodeType": "YulLiteral",
																					"src": "1029:1:20",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1032:1:20",
																					"nodeType": "YulLiteral",
																					"src": "1032:1:20",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1022:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "1022:6:20"
																			},
																			"nativeSrc": "1022:12:20",
																			"nodeType": "YulFunctionCall",
																			"src": "1022:12:20"
																		},
																		"nativeSrc": "1022:12:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "1022:12:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "986:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "986:5:20"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1011:5:20",
																						"nodeType": "YulIdentifier",
																						"src": "1011:5:20"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "993:17:20",
																					"nodeType": "YulIdentifier",
																					"src": "993:17:20"
																				},
																				"nativeSrc": "993:24:20",
																				"nodeType": "YulFunctionCall",
																				"src": "993:24:20"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "983:2:20",
																			"nodeType": "YulIdentifier",
																			"src": "983:2:20"
																		},
																		"nativeSrc": "983:35:20",
																		"nodeType": "YulFunctionCall",
																		"src": "983:35:20"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "976:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "976:6:20"
																},
																"nativeSrc": "976:43:20",
																"nodeType": "YulFunctionCall",
																"src": "976:43:20"
															},
															"nativeSrc": "973:63:20",
															"nodeType": "YulIf",
															"src": "973:63:20"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "920:122:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "956:5:20",
														"nodeType": "YulTypedName",
														"src": "956:5:20",
														"type": ""
													}
												],
												"src": "920:122:20"
											},
											{
												"body": {
													"nativeSrc": "1100:87:20",
													"nodeType": "YulBlock",
													"src": "1100:87:20",
													"statements": [
														{
															"nativeSrc": "1110:29:20",
															"nodeType": "YulAssignment",
															"src": "1110:29:20",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1132:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "1132:6:20"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1119:12:20",
																	"nodeType": "YulIdentifier",
																	"src": "1119:12:20"
																},
																"nativeSrc": "1119:20:20",
																"nodeType": "YulFunctionCall",
																"src": "1119:20:20"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1110:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "1110:5:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1175:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "1175:5:20"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1148:26:20",
																	"nodeType": "YulIdentifier",
																	"src": "1148:26:20"
																},
																"nativeSrc": "1148:33:20",
																"nodeType": "YulFunctionCall",
																"src": "1148:33:20"
															},
															"nativeSrc": "1148:33:20",
															"nodeType": "YulExpressionStatement",
															"src": "1148:33:20"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1048:139:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1078:6:20",
														"nodeType": "YulTypedName",
														"src": "1078:6:20",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1086:3:20",
														"nodeType": "YulTypedName",
														"src": "1086:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1094:5:20",
														"nodeType": "YulTypedName",
														"src": "1094:5:20",
														"type": ""
													}
												],
												"src": "1048:139:20"
											},
											{
												"body": {
													"nativeSrc": "1259:263:20",
													"nodeType": "YulBlock",
													"src": "1259:263:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "1305:83:20",
																"nodeType": "YulBlock",
																"src": "1305:83:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1307:77:20",
																				"nodeType": "YulIdentifier",
																				"src": "1307:77:20"
																			},
																			"nativeSrc": "1307:79:20",
																			"nodeType": "YulFunctionCall",
																			"src": "1307:79:20"
																		},
																		"nativeSrc": "1307:79:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "1307:79:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1280:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "1280:7:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1289:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "1289:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1276:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "1276:3:20"
																		},
																		"nativeSrc": "1276:23:20",
																		"nodeType": "YulFunctionCall",
																		"src": "1276:23:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1301:2:20",
																		"nodeType": "YulLiteral",
																		"src": "1301:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1272:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:20"
																},
																"nativeSrc": "1272:32:20",
																"nodeType": "YulFunctionCall",
																"src": "1272:32:20"
															},
															"nativeSrc": "1269:119:20",
															"nodeType": "YulIf",
															"src": "1269:119:20"
														},
														{
															"nativeSrc": "1398:117:20",
															"nodeType": "YulBlock",
															"src": "1398:117:20",
															"statements": [
																{
																	"nativeSrc": "1413:15:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1413:15:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1427:1:20",
																		"nodeType": "YulLiteral",
																		"src": "1427:1:20",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1417:6:20",
																			"nodeType": "YulTypedName",
																			"src": "1417:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1442:63:20",
																	"nodeType": "YulAssignment",
																	"src": "1442:63:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1477:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "1477:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1488:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "1488:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1473:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "1473:3:20"
																				},
																				"nativeSrc": "1473:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "1473:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1497:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "1497:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1452:20:20",
																			"nodeType": "YulIdentifier",
																			"src": "1452:20:20"
																		},
																		"nativeSrc": "1452:53:20",
																		"nodeType": "YulFunctionCall",
																		"src": "1452:53:20"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1442:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "1442:6:20"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1193:329:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1229:9:20",
														"nodeType": "YulTypedName",
														"src": "1229:9:20",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1240:7:20",
														"nodeType": "YulTypedName",
														"src": "1240:7:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1252:6:20",
														"nodeType": "YulTypedName",
														"src": "1252:6:20",
														"type": ""
													}
												],
												"src": "1193:329:20"
											},
											{
												"body": {
													"nativeSrc": "1624:73:20",
													"nodeType": "YulBlock",
													"src": "1624:73:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1641:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "1641:3:20"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1646:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "1646:6:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1634:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "1634:6:20"
																},
																"nativeSrc": "1634:19:20",
																"nodeType": "YulFunctionCall",
																"src": "1634:19:20"
															},
															"nativeSrc": "1634:19:20",
															"nodeType": "YulExpressionStatement",
															"src": "1634:19:20"
														},
														{
															"nativeSrc": "1662:29:20",
															"nodeType": "YulAssignment",
															"src": "1662:29:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1681:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "1681:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1686:4:20",
																		"nodeType": "YulLiteral",
																		"src": "1686:4:20",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1677:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "1677:3:20"
																},
																"nativeSrc": "1677:14:20",
																"nodeType": "YulFunctionCall",
																"src": "1677:14:20"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1662:11:20",
																	"nodeType": "YulIdentifier",
																	"src": "1662:11:20"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1528:169:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1596:3:20",
														"nodeType": "YulTypedName",
														"src": "1596:3:20",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1601:6:20",
														"nodeType": "YulTypedName",
														"src": "1601:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1612:11:20",
														"nodeType": "YulTypedName",
														"src": "1612:11:20",
														"type": ""
													}
												],
												"src": "1528:169:20"
											},
											{
												"body": {
													"nativeSrc": "1809:76:20",
													"nodeType": "YulBlock",
													"src": "1809:76:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "1831:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "1831:6:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1839:1:20",
																				"nodeType": "YulLiteral",
																				"src": "1839:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1827:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "1827:3:20"
																		},
																		"nativeSrc": "1827:14:20",
																		"nodeType": "YulFunctionCall",
																		"src": "1827:14:20"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nativeSrc": "1843:34:20",
																		"nodeType": "YulLiteral",
																		"src": "1843:34:20",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1820:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "1820:6:20"
																},
																"nativeSrc": "1820:58:20",
																"nodeType": "YulFunctionCall",
																"src": "1820:58:20"
															},
															"nativeSrc": "1820:58:20",
															"nodeType": "YulExpressionStatement",
															"src": "1820:58:20"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nativeSrc": "1703:182:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "1801:6:20",
														"nodeType": "YulTypedName",
														"src": "1801:6:20",
														"type": ""
													}
												],
												"src": "1703:182:20"
											},
											{
												"body": {
													"nativeSrc": "2037:220:20",
													"nodeType": "YulBlock",
													"src": "2037:220:20",
													"statements": [
														{
															"nativeSrc": "2047:74:20",
															"nodeType": "YulAssignment",
															"src": "2047:74:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2113:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "2113:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2118:2:20",
																		"nodeType": "YulLiteral",
																		"src": "2118:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2054:58:20",
																	"nodeType": "YulIdentifier",
																	"src": "2054:58:20"
																},
																"nativeSrc": "2054:67:20",
																"nodeType": "YulFunctionCall",
																"src": "2054:67:20"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2047:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "2047:3:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2219:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "2219:3:20"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nativeSrc": "2130:88:20",
																	"nodeType": "YulIdentifier",
																	"src": "2130:88:20"
																},
																"nativeSrc": "2130:93:20",
																"nodeType": "YulFunctionCall",
																"src": "2130:93:20"
															},
															"nativeSrc": "2130:93:20",
															"nodeType": "YulExpressionStatement",
															"src": "2130:93:20"
														},
														{
															"nativeSrc": "2232:19:20",
															"nodeType": "YulAssignment",
															"src": "2232:19:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2243:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "2243:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2248:2:20",
																		"nodeType": "YulLiteral",
																		"src": "2248:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2239:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "2239:3:20"
																},
																"nativeSrc": "2239:12:20",
																"nodeType": "YulFunctionCall",
																"src": "2239:12:20"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2232:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "2232:3:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "1891:366:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2025:3:20",
														"nodeType": "YulTypedName",
														"src": "2025:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2033:3:20",
														"nodeType": "YulTypedName",
														"src": "2033:3:20",
														"type": ""
													}
												],
												"src": "1891:366:20"
											},
											{
												"body": {
													"nativeSrc": "2434:248:20",
													"nodeType": "YulBlock",
													"src": "2434:248:20",
													"statements": [
														{
															"nativeSrc": "2444:26:20",
															"nodeType": "YulAssignment",
															"src": "2444:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2456:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "2456:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2467:2:20",
																		"nodeType": "YulLiteral",
																		"src": "2467:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2452:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "2452:3:20"
																},
																"nativeSrc": "2452:18:20",
																"nodeType": "YulFunctionCall",
																"src": "2452:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2444:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "2444:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2491:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "2491:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2502:1:20",
																				"nodeType": "YulLiteral",
																				"src": "2502:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2487:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "2487:3:20"
																		},
																		"nativeSrc": "2487:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "2487:17:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2510:4:20",
																				"nodeType": "YulIdentifier",
																				"src": "2510:4:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2516:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "2516:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2506:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "2506:3:20"
																		},
																		"nativeSrc": "2506:20:20",
																		"nodeType": "YulFunctionCall",
																		"src": "2506:20:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2480:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "2480:6:20"
																},
																"nativeSrc": "2480:47:20",
																"nodeType": "YulFunctionCall",
																"src": "2480:47:20"
															},
															"nativeSrc": "2480:47:20",
															"nodeType": "YulExpressionStatement",
															"src": "2480:47:20"
														},
														{
															"nativeSrc": "2536:139:20",
															"nodeType": "YulAssignment",
															"src": "2536:139:20",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "2670:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "2670:4:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2544:124:20",
																	"nodeType": "YulIdentifier",
																	"src": "2544:124:20"
																},
																"nativeSrc": "2544:131:20",
																"nodeType": "YulFunctionCall",
																"src": "2544:131:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2536:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "2536:4:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2263:419:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2414:9:20",
														"nodeType": "YulTypedName",
														"src": "2414:9:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2429:4:20",
														"nodeType": "YulTypedName",
														"src": "2429:4:20",
														"type": ""
													}
												],
												"src": "2263:419:20"
											},
											{
												"body": {
													"nativeSrc": "2794:119:20",
													"nodeType": "YulBlock",
													"src": "2794:119:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "2816:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "2816:6:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2824:1:20",
																				"nodeType": "YulLiteral",
																				"src": "2824:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2812:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "2812:3:20"
																		},
																		"nativeSrc": "2812:14:20",
																		"nodeType": "YulFunctionCall",
																		"src": "2812:14:20"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nativeSrc": "2828:34:20",
																		"nodeType": "YulLiteral",
																		"src": "2828:34:20",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2805:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "2805:6:20"
																},
																"nativeSrc": "2805:58:20",
																"nodeType": "YulFunctionCall",
																"src": "2805:58:20"
															},
															"nativeSrc": "2805:58:20",
															"nodeType": "YulExpressionStatement",
															"src": "2805:58:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "2884:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "2884:6:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2892:2:20",
																				"nodeType": "YulLiteral",
																				"src": "2892:2:20",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2880:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "2880:3:20"
																		},
																		"nativeSrc": "2880:15:20",
																		"nodeType": "YulFunctionCall",
																		"src": "2880:15:20"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nativeSrc": "2897:8:20",
																		"nodeType": "YulLiteral",
																		"src": "2897:8:20",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2873:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "2873:6:20"
																},
																"nativeSrc": "2873:33:20",
																"nodeType": "YulFunctionCall",
																"src": "2873:33:20"
															},
															"nativeSrc": "2873:33:20",
															"nodeType": "YulExpressionStatement",
															"src": "2873:33:20"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nativeSrc": "2688:225:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "2786:6:20",
														"nodeType": "YulTypedName",
														"src": "2786:6:20",
														"type": ""
													}
												],
												"src": "2688:225:20"
											},
											{
												"body": {
													"nativeSrc": "3065:220:20",
													"nodeType": "YulBlock",
													"src": "3065:220:20",
													"statements": [
														{
															"nativeSrc": "3075:74:20",
															"nodeType": "YulAssignment",
															"src": "3075:74:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3141:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "3141:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3146:2:20",
																		"nodeType": "YulLiteral",
																		"src": "3146:2:20",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3082:58:20",
																	"nodeType": "YulIdentifier",
																	"src": "3082:58:20"
																},
																"nativeSrc": "3082:67:20",
																"nodeType": "YulFunctionCall",
																"src": "3082:67:20"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3075:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "3075:3:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3247:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "3247:3:20"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nativeSrc": "3158:88:20",
																	"nodeType": "YulIdentifier",
																	"src": "3158:88:20"
																},
																"nativeSrc": "3158:93:20",
																"nodeType": "YulFunctionCall",
																"src": "3158:93:20"
															},
															"nativeSrc": "3158:93:20",
															"nodeType": "YulExpressionStatement",
															"src": "3158:93:20"
														},
														{
															"nativeSrc": "3260:19:20",
															"nodeType": "YulAssignment",
															"src": "3260:19:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3271:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "3271:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3276:2:20",
																		"nodeType": "YulLiteral",
																		"src": "3276:2:20",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3267:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "3267:3:20"
																},
																"nativeSrc": "3267:12:20",
																"nodeType": "YulFunctionCall",
																"src": "3267:12:20"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3260:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "3260:3:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2919:366:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3053:3:20",
														"nodeType": "YulTypedName",
														"src": "3053:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3061:3:20",
														"nodeType": "YulTypedName",
														"src": "3061:3:20",
														"type": ""
													}
												],
												"src": "2919:366:20"
											},
											{
												"body": {
													"nativeSrc": "3462:248:20",
													"nodeType": "YulBlock",
													"src": "3462:248:20",
													"statements": [
														{
															"nativeSrc": "3472:26:20",
															"nodeType": "YulAssignment",
															"src": "3472:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3484:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "3484:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3495:2:20",
																		"nodeType": "YulLiteral",
																		"src": "3495:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3480:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "3480:3:20"
																},
																"nativeSrc": "3480:18:20",
																"nodeType": "YulFunctionCall",
																"src": "3480:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3472:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "3472:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3519:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "3519:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3530:1:20",
																				"nodeType": "YulLiteral",
																				"src": "3530:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3515:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "3515:3:20"
																		},
																		"nativeSrc": "3515:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "3515:17:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "3538:4:20",
																				"nodeType": "YulIdentifier",
																				"src": "3538:4:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3544:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "3544:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3534:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "3534:3:20"
																		},
																		"nativeSrc": "3534:20:20",
																		"nodeType": "YulFunctionCall",
																		"src": "3534:20:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3508:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "3508:6:20"
																},
																"nativeSrc": "3508:47:20",
																"nodeType": "YulFunctionCall",
																"src": "3508:47:20"
															},
															"nativeSrc": "3508:47:20",
															"nodeType": "YulExpressionStatement",
															"src": "3508:47:20"
														},
														{
															"nativeSrc": "3564:139:20",
															"nodeType": "YulAssignment",
															"src": "3564:139:20",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "3698:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "3698:4:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3572:124:20",
																	"nodeType": "YulIdentifier",
																	"src": "3572:124:20"
																},
																"nativeSrc": "3572:131:20",
																"nodeType": "YulFunctionCall",
																"src": "3572:131:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3564:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "3564:4:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3291:419:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3442:9:20",
														"nodeType": "YulTypedName",
														"src": "3442:9:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3457:4:20",
														"nodeType": "YulTypedName",
														"src": "3457:4:20",
														"type": ""
													}
												],
												"src": "3291:419:20"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 20,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061003f575f3560e01c8063715018a6146100435780638da5cb5b1461004d578063f2fde38b1461006b575b5f80fd5b61004b610087565b005b6100556101d5565b60405161006291906103ff565b60405180910390f35b61008560048036038101906100809190610446565b6101fc565b005b61008f6103b9565b73ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461011b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610112906104cb565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35f805f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6102046103b9565b73ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610290576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610287906104cb565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036102fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102f590610559565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3805f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6103e9826103c0565b9050919050565b6103f9816103df565b82525050565b5f6020820190506104125f8301846103f0565b92915050565b5f80fd5b610425816103df565b811461042f575f80fd5b50565b5f813590506104408161041c565b92915050565b5f6020828403121561045b5761045a610418565b5b5f61046884828501610432565b91505092915050565b5f82825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65725f82015250565b5f6104b5602083610471565b91506104c082610481565b602082019050919050565b5f6020820190508181035f8301526104e2816104a9565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f20615f8201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b5f610543602683610471565b915061054e826104e9565b604082019050919050565b5f6020820190508181035f83015261057081610537565b905091905056fea2646970667358221220c10ba62e2e6825ff3c591bb17b2fc7782bbd94f11c5f0dfdc4ba3966fc677e4764736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6B JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x4B PUSH2 0x87 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x55 PUSH2 0x1D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62 SWAP2 SWAP1 PUSH2 0x3FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x85 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x80 SWAP2 SWAP1 PUSH2 0x446 JUMP JUMPDEST PUSH2 0x1FC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x8F PUSH2 0x3B9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x112 SWAP1 PUSH2 0x4CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH0 DUP1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x204 PUSH2 0x3B9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x290 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x287 SWAP1 PUSH2 0x4CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2FE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F5 SWAP1 PUSH2 0x559 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x3E9 DUP3 PUSH2 0x3C0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3F9 DUP2 PUSH2 0x3DF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x412 PUSH0 DUP4 ADD DUP5 PUSH2 0x3F0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x425 DUP2 PUSH2 0x3DF JUMP JUMPDEST DUP2 EQ PUSH2 0x42F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x440 DUP2 PUSH2 0x41C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x45B JUMPI PUSH2 0x45A PUSH2 0x418 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x468 DUP5 DUP3 DUP6 ADD PUSH2 0x432 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x4B5 PUSH1 0x20 DUP4 PUSH2 0x471 JUMP JUMPDEST SWAP2 POP PUSH2 0x4C0 DUP3 PUSH2 0x481 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x4E2 DUP2 PUSH2 0x4A9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x543 PUSH1 0x26 DUP4 PUSH2 0x471 JUMP JUMPDEST SWAP2 POP PUSH2 0x54E DUP3 PUSH2 0x4E9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x570 DUP2 PUSH2 0x537 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC1 SIGNEXTEND 0xA6 0x2E 0x2E PUSH9 0x25FF3C591BB17B2FC7 PUSH25 0x2BBD94F11C5F0DFDC4BA3966FC677E4764736F6C634300081A STOP CALLER ",
							"sourceMap": "578:1525:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1601:135;;;:::i;:::-;;1018:71;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1875:226;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1601:135;1214:12;:10;:12::i;:::-;1204:22;;:6;;;;;;;;;;:22;;;1196:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;1703:1:::1;1666:40;;1687:6;::::0;::::1;;;;;;;;1666:40;;;;;;;;;;;;1729:1;1712:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;1601:135::o:0;1018:71::-;1056:7;1078:6;;;;;;;;;;;1071:13;;1018:71;:::o;1875:226::-;1214:12;:10;:12::i;:::-;1204:22;;:6;;;;;;;;;;:22;;;1196:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;1979:1:::1;1959:22;;:8;:22;;::::0;1951:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2064:8;2035:38;;2056:6;::::0;::::1;;;;;;;;2035:38;;;;;;;;;;;;2088:8;2079:6;::::0;:17:::1;;;;;;;;;;;;;;;;;;1875:226:::0;:::o;587:107:2:-;640:15;678:10;663:26;;587:107;:::o;7:126:20:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;674:117::-;783:1;780;773:12;920:122;993:24;1011:5;993:24;:::i;:::-;986:5;983:35;973:63;;1032:1;1029;1022:12;973:63;920:122;:::o;1048:139::-;1094:5;1132:6;1119:20;1110:29;;1148:33;1175:5;1148:33;:::i;:::-;1048:139;;;;:::o;1193:329::-;1252:6;1301:2;1289:9;1280:7;1276:23;1272:32;1269:119;;;1307:79;;:::i;:::-;1269:119;1427:1;1452:53;1497:7;1488:6;1477:9;1473:22;1452:53;:::i;:::-;1442:63;;1398:117;1193:329;;;;:::o;1528:169::-;1612:11;1646:6;1641:3;1634:19;1686:4;1681:3;1677:14;1662:29;;1528:169;;;;:::o;1703:182::-;1843:34;1839:1;1831:6;1827:14;1820:58;1703:182;:::o;1891:366::-;2033:3;2054:67;2118:2;2113:3;2054:67;:::i;:::-;2047:74;;2130:93;2219:3;2130:93;:::i;:::-;2248:2;2243:3;2239:12;2232:19;;1891:366;;;:::o;2263:419::-;2429:4;2467:2;2456:9;2452:18;2444:26;;2516:9;2510:4;2506:20;2502:1;2491:9;2487:17;2480:47;2544:131;2670:4;2544:131;:::i;:::-;2536:139;;2263:419;;;:::o;2688:225::-;2828:34;2824:1;2816:6;2812:14;2805:58;2897:8;2892:2;2884:6;2880:15;2873:33;2688:225;:::o;2919:366::-;3061:3;3082:67;3146:2;3141:3;3082:67;:::i;:::-;3075:74;;3158:93;3247:3;3158:93;:::i;:::-;3276:2;3271:3;3267:12;3260:19;;2919:366;;;:::o;3291:419::-;3457:4;3495:2;3484:9;3480:18;3472:26;;3544:9;3538:4;3534:20;3530:1;3519:9;3515:17;3508:47;3572:131;3698:4;3572:131;:::i;:::-;3564:139;;3291:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "290600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"owner()": "2515",
								"renounceOwnership()": "30262",
								"transferOwnership(address)": "30648"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 578,
									"end": 2103,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 578,
									"end": 2103,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 578,
									"end": 2103,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 815,
									"end": 950,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 815,
									"end": 950,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 815,
									"end": 950,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 815,
									"end": 950,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 815,
									"end": 950,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 815,
									"end": 950,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 815,
									"end": 950,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 815,
									"end": 950,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 815,
									"end": 950,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 815,
									"end": 950,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 815,
									"end": 950,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 835,
									"end": 852,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 855,
									"end": 867,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 855,
									"end": 865,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 855,
									"end": 865,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 855,
									"end": 865,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 855,
									"end": 867,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 855,
									"end": 867,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 855,
									"end": 867,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 855,
									"end": 867,
									"name": "tag",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 855,
									"end": 867,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 835,
									"end": 867,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 835,
									"end": 867,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 882,
									"end": 891,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 873,
									"end": 879,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 873,
									"end": 879,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 873,
									"end": 891,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 873,
									"end": 891,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 873,
									"end": 891,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 873,
									"end": 891,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 873,
									"end": 891,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 873,
									"end": 891,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 873,
									"end": 891,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 873,
									"end": 891,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 873,
									"end": 891,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 873,
									"end": 891,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 873,
									"end": 891,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 873,
									"end": 891,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 873,
									"end": 891,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 873,
									"end": 891,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 873,
									"end": 891,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 873,
									"end": 891,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 873,
									"end": 891,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 873,
									"end": 891,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 935,
									"end": 944,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 902,
									"end": 945,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 902,
									"end": 945,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 931,
									"end": 932,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 902,
									"end": 945,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 902,
									"end": 945,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 902,
									"end": 945,
									"name": "PUSH",
									"source": 5,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 902,
									"end": 945,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 902,
									"end": 945,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 902,
									"end": 945,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 902,
									"end": 945,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 902,
									"end": 945,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 902,
									"end": 945,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 902,
									"end": 945,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 902,
									"end": 945,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 902,
									"end": 945,
									"name": "LOG3",
									"source": 5
								},
								{
									"begin": 829,
									"end": 950,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 578,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 578,
									"end": 2103,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 587,
									"end": 694,
									"name": "tag",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 587,
									"end": 694,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 640,
									"end": 655,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 678,
									"end": 688,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 663,
									"end": 689,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 663,
									"end": 689,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 587,
									"end": 694,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 587,
									"end": 694,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 578,
									"end": 2103,
									"name": "tag",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 578,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 578,
									"end": 2103,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 578,
									"end": 2103,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 578,
									"end": 2103,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 578,
									"end": 2103,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 578,
									"end": 2103,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 578,
									"end": 2103,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 578,
									"end": 2103,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c10ba62e2e6825ff3c591bb17b2fc7782bbd94f11c5f0dfdc4ba3966fc677e4764736f6c634300081a0033",
									".code": [
										{
											"begin": 578,
											"end": 2103,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 578,
											"end": 2103,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 578,
											"end": 2103,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 578,
											"end": 2103,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 578,
											"end": 2103,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 578,
											"end": 2103,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 578,
											"end": 2103,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 578,
											"end": 2103,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 578,
											"end": 2103,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 578,
											"end": 2103,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 578,
											"end": 2103,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 578,
											"end": 2103,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 578,
											"end": 2103,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 578,
											"end": 2103,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 578,
											"end": 2103,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 578,
											"end": 2103,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 578,
											"end": 2103,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 578,
											"end": 2103,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 578,
											"end": 2103,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 578,
											"end": 2103,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 578,
											"end": 2103,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 578,
											"end": 2103,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 578,
											"end": 2103,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 578,
											"end": 2103,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 578,
											"end": 2103,
											"name": "PUSH",
											"source": 5,
											"value": "715018A6"
										},
										{
											"begin": 578,
											"end": 2103,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 578,
											"end": 2103,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 578,
											"end": 2103,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 578,
											"end": 2103,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 578,
											"end": 2103,
											"name": "PUSH",
											"source": 5,
											"value": "8DA5CB5B"
										},
										{
											"begin": 578,
											"end": 2103,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 578,
											"end": 2103,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 578,
											"end": 2103,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 578,
											"end": 2103,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 578,
											"end": 2103,
											"name": "PUSH",
											"source": 5,
											"value": "F2FDE38B"
										},
										{
											"begin": 578,
											"end": 2103,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 578,
											"end": 2103,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 578,
											"end": 2103,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 578,
											"end": 2103,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 578,
											"end": 2103,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 578,
											"end": 2103,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 578,
											"end": 2103,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 578,
											"end": 2103,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1601,
											"end": 1736,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1601,
											"end": 1736,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1601,
											"end": 1736,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 1601,
											"end": 1736,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 1601,
											"end": 1736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1601,
											"end": 1736,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 1601,
											"end": 1736,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1601,
											"end": 1736,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 1018,
											"end": 1089,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1018,
											"end": 1089,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1018,
											"end": 1089,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 1018,
											"end": 1089,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 1018,
											"end": 1089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1018,
											"end": 1089,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 1018,
											"end": 1089,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1018,
											"end": 1089,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1018,
											"end": 1089,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1018,
											"end": 1089,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 1018,
											"end": 1089,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1018,
											"end": 1089,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1018,
											"end": 1089,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 1018,
											"end": 1089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1018,
											"end": 1089,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 1018,
											"end": 1089,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1018,
											"end": 1089,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1018,
											"end": 1089,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1018,
											"end": 1089,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1018,
											"end": 1089,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1018,
											"end": 1089,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1018,
											"end": 1089,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1018,
											"end": 1089,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1875,
											"end": 2101,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 1875,
											"end": 2101,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1875,
											"end": 2101,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 1875,
											"end": 2101,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1875,
											"end": 2101,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1875,
											"end": 2101,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1875,
											"end": 2101,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1875,
											"end": 2101,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1875,
											"end": 2101,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1875,
											"end": 2101,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1875,
											"end": 2101,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 1875,
											"end": 2101,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1875,
											"end": 2101,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1875,
											"end": 2101,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 1875,
											"end": 2101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1875,
											"end": 2101,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 1875,
											"end": 2101,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1875,
											"end": 2101,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 1875,
											"end": 2101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1875,
											"end": 2101,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 1875,
											"end": 2101,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1875,
											"end": 2101,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 1601,
											"end": 1736,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 1601,
											"end": 1736,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1214,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 1214,
											"end": 1224,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 1214,
											"end": 1226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1214,
											"end": 1226,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 1214,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1204,
											"end": 1226,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1204,
											"end": 1226,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1204,
											"end": 1210,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1204,
											"end": 1210,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1204,
											"end": 1210,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1204,
											"end": 1210,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1204,
											"end": 1210,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1204,
											"end": 1210,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1204,
											"end": 1210,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1204,
											"end": 1210,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1204,
											"end": 1210,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1204,
											"end": 1210,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1204,
											"end": 1226,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1204,
											"end": 1226,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1204,
											"end": 1226,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1196,
											"end": 1263,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 1196,
											"end": 1263,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1196,
											"end": 1263,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1196,
											"end": 1263,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1196,
											"end": 1263,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1196,
											"end": 1263,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1196,
											"end": 1263,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1196,
											"end": 1263,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1196,
											"end": 1263,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1196,
											"end": 1263,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1196,
											"end": 1263,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1196,
											"end": 1263,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 1196,
											"end": 1263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1196,
											"end": 1263,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1196,
											"end": 1263,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1196,
											"end": 1263,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1196,
											"end": 1263,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1196,
											"end": 1263,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1196,
											"end": 1263,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1196,
											"end": 1263,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1196,
											"end": 1263,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1196,
											"end": 1263,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1196,
											"end": 1263,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 1196,
											"end": 1263,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1703,
											"end": 1704,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1666,
											"end": 1706,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1666,
											"end": 1706,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1687,
											"end": 1693,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1687,
											"end": 1693,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1687,
											"end": 1693,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1687,
											"end": 1693,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1687,
											"end": 1693,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1687,
											"end": 1693,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1687,
											"end": 1693,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1687,
											"end": 1693,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1687,
											"end": 1693,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1687,
											"end": 1693,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1666,
											"end": 1706,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1666,
											"end": 1706,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1666,
											"end": 1706,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1666,
											"end": 1706,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1666,
											"end": 1706,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1666,
											"end": 1706,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1666,
											"end": 1706,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1666,
											"end": 1706,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1666,
											"end": 1706,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1666,
											"end": 1706,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1666,
											"end": 1706,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1666,
											"end": 1706,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 1729,
											"end": 1730,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1712,
											"end": 1718,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1712,
											"end": 1718,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1712,
											"end": 1731,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1712,
											"end": 1731,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1712,
											"end": 1731,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1712,
											"end": 1731,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1712,
											"end": 1731,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1712,
											"end": 1731,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1712,
											"end": 1731,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1712,
											"end": 1731,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1712,
											"end": 1731,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1712,
											"end": 1731,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1712,
											"end": 1731,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1712,
											"end": 1731,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1712,
											"end": 1731,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1712,
											"end": 1731,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1712,
											"end": 1731,
											"modifierDepth": 1,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 1712,
											"end": 1731,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1712,
											"end": 1731,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1712,
											"end": 1731,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1601,
											"end": 1736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1018,
											"end": 1089,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 1018,
											"end": 1089,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1056,
											"end": 1063,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1078,
											"end": 1084,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1078,
											"end": 1084,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1078,
											"end": 1084,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1078,
											"end": 1084,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1078,
											"end": 1084,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1078,
											"end": 1084,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1078,
											"end": 1084,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1078,
											"end": 1084,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1078,
											"end": 1084,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1078,
											"end": 1084,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1078,
											"end": 1084,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1071,
											"end": 1084,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1071,
											"end": 1084,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1018,
											"end": 1089,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1018,
											"end": 1089,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1875,
											"end": 2101,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 1875,
											"end": 2101,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1214,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 1214,
											"end": 1224,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 1214,
											"end": 1226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1214,
											"end": 1226,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 1214,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1204,
											"end": 1226,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1204,
											"end": 1226,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1204,
											"end": 1210,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1204,
											"end": 1210,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1204,
											"end": 1210,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1204,
											"end": 1210,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1204,
											"end": 1210,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1204,
											"end": 1210,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1204,
											"end": 1210,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1204,
											"end": 1210,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1204,
											"end": 1210,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1204,
											"end": 1210,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1204,
											"end": 1226,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1204,
											"end": 1226,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1204,
											"end": 1226,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1196,
											"end": 1263,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 1196,
											"end": 1263,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1196,
											"end": 1263,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1196,
											"end": 1263,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1196,
											"end": 1263,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1196,
											"end": 1263,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1196,
											"end": 1263,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1196,
											"end": 1263,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1196,
											"end": 1263,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1196,
											"end": 1263,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 1196,
											"end": 1263,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1196,
											"end": 1263,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 1196,
											"end": 1263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1196,
											"end": 1263,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 1196,
											"end": 1263,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1196,
											"end": 1263,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1196,
											"end": 1263,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1196,
											"end": 1263,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1196,
											"end": 1263,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1196,
											"end": 1263,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1196,
											"end": 1263,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1196,
											"end": 1263,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1196,
											"end": 1263,
											"name": "tag",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 1196,
											"end": 1263,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1979,
											"end": 1980,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1959,
											"end": 1981,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1959,
											"end": 1981,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1959,
											"end": 1967,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1959,
											"end": 1981,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1959,
											"end": 1981,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1959,
											"end": 1981,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 2024,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 1951,
											"end": 2024,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 2024,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1951,
											"end": 2024,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 2024,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1951,
											"end": 2024,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 2024,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 2024,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1951,
											"end": 2024,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 2024,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 1951,
											"end": 2024,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 2024,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 1951,
											"end": 2024,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 2024,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 1951,
											"end": 2024,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 2024,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1951,
											"end": 2024,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 2024,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 2024,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 2024,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 2024,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 2024,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 2024,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 1951,
											"end": 2024,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2064,
											"end": 2072,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2035,
											"end": 2073,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2035,
											"end": 2073,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2056,
											"end": 2062,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2056,
											"end": 2062,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2056,
											"end": 2062,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2056,
											"end": 2062,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2056,
											"end": 2062,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2056,
											"end": 2062,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 2056,
											"end": 2062,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2056,
											"end": 2062,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2056,
											"end": 2062,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2056,
											"end": 2062,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2035,
											"end": 2073,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2035,
											"end": 2073,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2035,
											"end": 2073,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2035,
											"end": 2073,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2035,
											"end": 2073,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2035,
											"end": 2073,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2035,
											"end": 2073,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2035,
											"end": 2073,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2035,
											"end": 2073,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2035,
											"end": 2073,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2035,
											"end": 2073,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2035,
											"end": 2073,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 2088,
											"end": 2096,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2079,
											"end": 2085,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2079,
											"end": 2085,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2079,
											"end": 2096,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2079,
											"end": 2096,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 2079,
											"end": 2096,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2079,
											"end": 2096,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2079,
											"end": 2096,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2079,
											"end": 2096,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2079,
											"end": 2096,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2079,
											"end": 2096,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2079,
											"end": 2096,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2079,
											"end": 2096,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2079,
											"end": 2096,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2079,
											"end": 2096,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2079,
											"end": 2096,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2079,
											"end": 2096,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2079,
											"end": 2096,
											"modifierDepth": 1,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 2079,
											"end": 2096,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2079,
											"end": 2096,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2079,
											"end": 2096,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1875,
											"end": 2101,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1875,
											"end": 2101,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 587,
											"end": 694,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 587,
											"end": 694,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 640,
											"end": 655,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 678,
											"end": 688,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 663,
											"end": 689,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 663,
											"end": 689,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 587,
											"end": 694,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 587,
											"end": 694,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 20,
											"value": "33"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 20,
											"value": "34"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "49"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "33"
										},
										{
											"begin": 205,
											"end": 229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 20,
											"value": "49"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 139,
											"end": 235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 241,
											"end": 359,
											"name": "tag",
											"source": 20,
											"value": "35"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "51"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "34"
										},
										{
											"begin": 328,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 20,
											"value": "51"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 316,
											"end": 353,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 241,
											"end": 359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 365,
											"end": 587,
											"name": "tag",
											"source": 20,
											"value": "11"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 458,
											"end": 462,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 498,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 494,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 481,
											"end": 499,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 473,
											"end": 499,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 473,
											"end": 499,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "53"
										},
										{
											"begin": 577,
											"end": 578,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 575,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 562,
											"end": 579,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 553,
											"end": 559,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "35"
										},
										{
											"begin": 509,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 509,
											"end": 580,
											"name": "tag",
											"source": 20,
											"value": "53"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 365,
											"end": 587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 674,
											"end": 791,
											"name": "tag",
											"source": 20,
											"value": "37"
										},
										{
											"begin": 674,
											"end": 791,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 783,
											"end": 784,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 781,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 773,
											"end": 785,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 920,
											"end": 1042,
											"name": "tag",
											"source": 20,
											"value": "39"
										},
										{
											"begin": 920,
											"end": 1042,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 993,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "58"
										},
										{
											"begin": 1011,
											"end": 1016,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 993,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "34"
										},
										{
											"begin": 993,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 993,
											"end": 1017,
											"name": "tag",
											"source": 20,
											"value": "58"
										},
										{
											"begin": 993,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 986,
											"end": 991,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 983,
											"end": 1018,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "59"
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1032,
											"end": 1033,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1029,
											"end": 1030,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1022,
											"end": 1034,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "tag",
											"source": 20,
											"value": "59"
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 920,
											"end": 1042,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 920,
											"end": 1042,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "tag",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1094,
											"end": 1099,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1132,
											"end": 1138,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1119,
											"end": 1139,
											"name": "CALLDATALOAD",
											"source": 20
										},
										{
											"begin": 1110,
											"end": 1139,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1110,
											"end": 1139,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1148,
											"end": 1181,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "61"
										},
										{
											"begin": 1175,
											"end": 1180,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1148,
											"end": 1181,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "39"
										},
										{
											"begin": 1148,
											"end": 1181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1148,
											"end": 1181,
											"name": "tag",
											"source": 20,
											"value": "61"
										},
										{
											"begin": 1148,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1048,
											"end": 1187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "tag",
											"source": 20,
											"value": "14"
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1252,
											"end": 1258,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1303,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1298,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 1280,
											"end": 1287,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 1276,
											"end": 1299,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 1272,
											"end": 1304,
											"name": "SLT",
											"source": 20
										},
										{
											"begin": 1269,
											"end": 1388,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 1269,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "63"
										},
										{
											"begin": 1269,
											"end": 1388,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1307,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "64"
										},
										{
											"begin": 1307,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "37"
										},
										{
											"begin": 1307,
											"end": 1386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1307,
											"end": 1386,
											"name": "tag",
											"source": 20,
											"value": "64"
										},
										{
											"begin": 1307,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1269,
											"end": 1388,
											"name": "tag",
											"source": 20,
											"value": "63"
										},
										{
											"begin": 1269,
											"end": 1388,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1427,
											"end": 1428,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1452,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "65"
										},
										{
											"begin": 1497,
											"end": 1504,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 1488,
											"end": 1494,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 1477,
											"end": 1486,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 1473,
											"end": 1495,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1452,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 1452,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1452,
											"end": 1505,
											"name": "tag",
											"source": 20,
											"value": "65"
										},
										{
											"begin": 1452,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1442,
											"end": 1505,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 1442,
											"end": 1505,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1398,
											"end": 1515,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1193,
											"end": 1522,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1528,
											"end": 1697,
											"name": "tag",
											"source": 20,
											"value": "41"
										},
										{
											"begin": 1528,
											"end": 1697,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1612,
											"end": 1623,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1652,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 1641,
											"end": 1644,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 1634,
											"end": 1653,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 1686,
											"end": 1690,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 1681,
											"end": 1684,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 1677,
											"end": 1691,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1662,
											"end": 1691,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1662,
											"end": 1691,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1528,
											"end": 1697,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 1528,
											"end": 1697,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 1528,
											"end": 1697,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1528,
											"end": 1697,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1528,
											"end": 1697,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1703,
											"end": 1885,
											"name": "tag",
											"source": 20,
											"value": "42"
										},
										{
											"begin": 1703,
											"end": 1885,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1843,
											"end": 1877,
											"name": "PUSH",
											"source": 20,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1839,
											"end": 1840,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1831,
											"end": 1837,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 1827,
											"end": 1841,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1820,
											"end": 1878,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 1703,
											"end": 1885,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1703,
											"end": 1885,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1891,
											"end": 2257,
											"name": "tag",
											"source": 20,
											"value": "43"
										},
										{
											"begin": 1891,
											"end": 2257,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2033,
											"end": 2036,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2054,
											"end": 2121,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "69"
										},
										{
											"begin": 2118,
											"end": 2120,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 2113,
											"end": 2116,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 2054,
											"end": 2121,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "41"
										},
										{
											"begin": 2054,
											"end": 2121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2054,
											"end": 2121,
											"name": "tag",
											"source": 20,
											"value": "69"
										},
										{
											"begin": 2054,
											"end": 2121,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2047,
											"end": 2121,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 2047,
											"end": 2121,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2130,
											"end": 2223,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "70"
										},
										{
											"begin": 2219,
											"end": 2222,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 2130,
											"end": 2223,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "42"
										},
										{
											"begin": 2130,
											"end": 2223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2130,
											"end": 2223,
											"name": "tag",
											"source": 20,
											"value": "70"
										},
										{
											"begin": 2130,
											"end": 2223,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2248,
											"end": 2250,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 2243,
											"end": 2246,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 2239,
											"end": 2251,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2232,
											"end": 2251,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2232,
											"end": 2251,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1891,
											"end": 2257,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 1891,
											"end": 2257,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1891,
											"end": 2257,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1891,
											"end": 2257,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2263,
											"end": 2682,
											"name": "tag",
											"source": 20,
											"value": "21"
										},
										{
											"begin": 2263,
											"end": 2682,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2429,
											"end": 2433,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2467,
											"end": 2469,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 2456,
											"end": 2465,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 2452,
											"end": 2470,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2444,
											"end": 2470,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2444,
											"end": 2470,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2516,
											"end": 2525,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2510,
											"end": 2514,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2506,
											"end": 2526,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 2502,
											"end": 2503,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2491,
											"end": 2500,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 2487,
											"end": 2504,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2480,
											"end": 2527,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 2544,
											"end": 2675,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "72"
										},
										{
											"begin": 2670,
											"end": 2674,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2544,
											"end": 2675,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "43"
										},
										{
											"begin": 2544,
											"end": 2675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2544,
											"end": 2675,
											"name": "tag",
											"source": 20,
											"value": "72"
										},
										{
											"begin": 2544,
											"end": 2675,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2536,
											"end": 2675,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2536,
											"end": 2675,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2263,
											"end": 2682,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 2263,
											"end": 2682,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2263,
											"end": 2682,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2263,
											"end": 2682,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2688,
											"end": 2913,
											"name": "tag",
											"source": 20,
											"value": "44"
										},
										{
											"begin": 2688,
											"end": 2913,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2828,
											"end": 2862,
											"name": "PUSH",
											"source": 20,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 2824,
											"end": 2825,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2816,
											"end": 2822,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 2812,
											"end": 2826,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2805,
											"end": 2863,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 2897,
											"end": 2905,
											"name": "PUSH",
											"source": 20,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2892,
											"end": 2894,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 2884,
											"end": 2890,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 2880,
											"end": 2895,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2873,
											"end": 2906,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 2688,
											"end": 2913,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2688,
											"end": 2913,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2919,
											"end": 3285,
											"name": "tag",
											"source": 20,
											"value": "45"
										},
										{
											"begin": 2919,
											"end": 3285,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3061,
											"end": 3064,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3082,
											"end": 3149,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "75"
										},
										{
											"begin": 3146,
											"end": 3148,
											"name": "PUSH",
											"source": 20,
											"value": "26"
										},
										{
											"begin": 3141,
											"end": 3144,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 3082,
											"end": 3149,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "41"
										},
										{
											"begin": 3082,
											"end": 3149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3082,
											"end": 3149,
											"name": "tag",
											"source": 20,
											"value": "75"
										},
										{
											"begin": 3082,
											"end": 3149,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3075,
											"end": 3149,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 3075,
											"end": 3149,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3158,
											"end": 3251,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "76"
										},
										{
											"begin": 3247,
											"end": 3250,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 3158,
											"end": 3251,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "44"
										},
										{
											"begin": 3158,
											"end": 3251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3158,
											"end": 3251,
											"name": "tag",
											"source": 20,
											"value": "76"
										},
										{
											"begin": 3158,
											"end": 3251,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3276,
											"end": 3278,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 3271,
											"end": 3274,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 3267,
											"end": 3279,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3260,
											"end": 3279,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3260,
											"end": 3279,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2919,
											"end": 3285,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 2919,
											"end": 3285,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2919,
											"end": 3285,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2919,
											"end": 3285,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3291,
											"end": 3710,
											"name": "tag",
											"source": 20,
											"value": "31"
										},
										{
											"begin": 3291,
											"end": 3710,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3457,
											"end": 3461,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3495,
											"end": 3497,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 3484,
											"end": 3493,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 3480,
											"end": 3498,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3472,
											"end": 3498,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3472,
											"end": 3498,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3544,
											"end": 3553,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3538,
											"end": 3542,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3534,
											"end": 3554,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 3530,
											"end": 3531,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3519,
											"end": 3528,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 3515,
											"end": 3532,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3508,
											"end": 3555,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 3572,
											"end": 3703,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "78"
										},
										{
											"begin": 3698,
											"end": 3702,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3572,
											"end": 3703,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "45"
										},
										{
											"begin": 3572,
											"end": 3703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3572,
											"end": 3703,
											"name": "tag",
											"source": 20,
											"value": "78"
										},
										{
											"begin": 3572,
											"end": 3703,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3564,
											"end": 3703,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3564,
											"end": 3703,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3291,
											"end": 3710,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 3291,
											"end": 3710,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3291,
											"end": 3710,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3291,
											"end": 3710,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										}
									]
								}
							},
							"sourceList": [
								"@aave/core-v3/contracts/dependencies/gnosis/contracts/GPv2SafeERC20.sol",
								"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Address.sol",
								"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Context.sol",
								"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/IERC20.sol",
								"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/IERC20Detailed.sol",
								"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol",
								"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/SafeERC20.sol",
								"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/SafeMath.sol",
								"@aave/core-v3/contracts/flashloan/base/FlashLoanSimpleReceiverBase.sol",
								"@aave/core-v3/contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol",
								"@aave/core-v3/contracts/interfaces/IERC20WithPermit.sol",
								"@aave/core-v3/contracts/interfaces/IPool.sol",
								"@aave/core-v3/contracts/interfaces/IPoolAddressesProvider.sol",
								"@aave/core-v3/contracts/interfaces/IPriceOracleGetter.sol",
								"@aave/core-v3/contracts/protocol/libraries/math/PercentageMath.sol",
								"@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol",
								"contracts/adapters/paraswap/BaseParaSwapAdapter.sol",
								"contracts/adapters/paraswap/BaseParaSwapSellAdapter.sol",
								"contracts/adapters/paraswap/interfaces/IParaSwapAugustus.sol",
								"contracts/adapters/paraswap/interfaces/IParaSwapAugustusRegistry.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Context.sol\":{\"keccak256\":\"0xc0df5ebb2c3d8b4509464c40a88cc51e5e5f5e4a26fafc909330e9bb2658f641\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc2690f871399de8f14e4cd8ae9b57a67e135afa28ac4be76594eaf4ecd8e244\",\"dweb:/ipfs/Qmb9gKAnQBciUknb3ysnfDpWAdYXGJm51NzFYWNkXwoAZg\"]},\"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol\":{\"keccak256\":\"0x3ce185c4f579e32006f8893dbfdc1b5d878c0e2cafd1508f7ceb081698bc81f9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://de40129c2380570ce2e883210452f0dc0913788e66be6690084be3d9f8def73f\",\"dweb:/ipfs/QmVAEtQHTYDPheoDniWaVNyRcWwfu3ccmUCxFXuzxHEwFT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 501,
								"contract": "@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/SafeERC20.sol\":631:3631  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/SafeERC20.sol\":631:3631  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122012d4dd29b742c65f4c4fabe53257398393e84a6311737fe3cf29f9317d9102b764736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122012d4dd29b742c65f4c4fabe53257398393e84a6311737fe3cf29f9317d9102b764736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLT 0xD4 0xDD 0x29 0xB7 TIMESTAMP 0xC6 PUSH0 0x4C 0x4F 0xAB 0xE5 ORIGIN JUMPI CODECOPY DUP4 SWAP4 0xE8 BLOBBASEFEE PUSH4 0x11737FE3 0xCF 0x29 0xF9 BALANCE PUSH30 0x9102B764736F6C634300081A003300000000000000000000000000000000 ",
							"sourceMap": "631:3000:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122012d4dd29b742c65f4c4fabe53257398393e84a6311737fe3cf29f9317d9102b764736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLT 0xD4 0xDD 0x29 0xB7 TIMESTAMP 0xC6 PUSH0 0x4C 0x4F 0xAB 0xE5 ORIGIN JUMPI CODECOPY DUP4 SWAP4 0xE8 BLOBBASEFEE PUSH4 0x11737FE3 0xCF 0x29 0xF9 BALANCE PUSH30 0x9102B764736F6C634300081A003300000000000000000000000000000000 ",
							"sourceMap": "631:3000:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 631,
									"end": 3631,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 631,
									"end": 3631,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 631,
									"end": 3631,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 631,
									"end": 3631,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 631,
									"end": 3631,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 631,
									"end": 3631,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 631,
									"end": 3631,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 631,
									"end": 3631,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 631,
									"end": 3631,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 631,
									"end": 3631,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 631,
									"end": 3631,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 631,
									"end": 3631,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 631,
									"end": 3631,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 631,
									"end": 3631,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 631,
									"end": 3631,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 631,
									"end": 3631,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 631,
									"end": 3631,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 631,
									"end": 3631,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 631,
									"end": 3631,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 631,
									"end": 3631,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 631,
									"end": 3631,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 631,
									"end": 3631,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 631,
									"end": 3631,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 631,
									"end": 3631,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 631,
									"end": 3631,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 631,
									"end": 3631,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 631,
									"end": 3631,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 631,
									"end": 3631,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 631,
									"end": 3631,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 631,
									"end": 3631,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 631,
									"end": 3631,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 631,
									"end": 3631,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 631,
									"end": 3631,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 631,
									"end": 3631,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 631,
									"end": 3631,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122012d4dd29b742c65f4c4fabe53257398393e84a6311737fe3cf29f9317d9102b764736f6c634300081a0033",
									".code": [
										{
											"begin": 631,
											"end": 3631,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 631,
											"end": 3631,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 631,
											"end": 3631,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 631,
											"end": 3631,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 631,
											"end": 3631,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 631,
											"end": 3631,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 631,
											"end": 3631,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 3631,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 631,
											"end": 3631,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@aave/core-v3/contracts/dependencies/gnosis/contracts/GPv2SafeERC20.sol",
								"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Address.sol",
								"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Context.sol",
								"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/IERC20.sol",
								"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/IERC20Detailed.sol",
								"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol",
								"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/SafeERC20.sol",
								"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/SafeMath.sol",
								"@aave/core-v3/contracts/flashloan/base/FlashLoanSimpleReceiverBase.sol",
								"@aave/core-v3/contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol",
								"@aave/core-v3/contracts/interfaces/IERC20WithPermit.sol",
								"@aave/core-v3/contracts/interfaces/IPool.sol",
								"@aave/core-v3/contracts/interfaces/IPoolAddressesProvider.sol",
								"@aave/core-v3/contracts/interfaces/IPriceOracleGetter.sol",
								"@aave/core-v3/contracts/protocol/libraries/math/PercentageMath.sol",
								"@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol",
								"contracts/adapters/paraswap/BaseParaSwapAdapter.sol",
								"contracts/adapters/paraswap/BaseParaSwapSellAdapter.sol",
								"contracts/adapters/paraswap/interfaces/IParaSwapAugustus.sol",
								"contracts/adapters/paraswap/interfaces/IParaSwapAugustusRegistry.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Address.sol\":{\"keccak256\":\"0x4ce20476966f73ba3c0aeb85b602b6ecc4e715f5bd9524d1c6286819282c76c5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b856247f6c2fe07d0d293ed4b493a7ec37fa2dd8de7c69b446482ca49532fecd\",\"dweb:/ipfs/QmSYTbb8cMjrQ1dtgfLUEektidnT9Wjaxqz7HWU28QTEgS\"]},\"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/IERC20.sol\":{\"keccak256\":\"0xf57d62241e553696a1324d225663ba2e1a51db0a51ca236d0c1b009d89b6284c\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://d327db93b636790909aa137124f30a856ac1631cb79c476aa188f9627fda8d03\",\"dweb:/ipfs/QmaxpmEoBFioeNYmpxJemyZ7aYF2nX1NKW1XDqREm7i6es\"]},\"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/SafeERC20.sol\":{\"keccak256\":\"0x9ada5448c24f34f934122c0e11d1a89bf9a31b7ade0dcb935bd7dcb339ef7f32\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d0208c47c8fbee6a2812e96cb7fad419d3437b49ee9749953f03ab14979d3d6f\",\"dweb:/ipfs/QmXavasrpSX5WRGST3LTsP7incRaTmtJQJ8uU3pLhmWLWG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "Optimized overflow and underflow safe math operations",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/SafeMath.sol\":240:1772  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/SafeMath.sol\":240:1772  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f83a2379ebf9c8231adf9418da02326e9a30fa6a483b2a1fda633939237483bc64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220f83a2379ebf9c8231adf9418da02326e9a30fa6a483b2a1fda633939237483bc64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF8 GASPRICE 0x23 PUSH26 0xEBF9C8231ADF9418DA02326E9A30FA6A483B2A1FDA6339392374 DUP4 0xBC PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "240:1532:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220f83a2379ebf9c8231adf9418da02326e9a30fa6a483b2a1fda633939237483bc64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF8 GASPRICE 0x23 PUSH26 0xEBF9C8231ADF9418DA02326E9A30FA6A483B2A1FDA6339392374 DUP4 0xBC PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "240:1532:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 240,
									"end": 1772,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 240,
									"end": 1772,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 240,
									"end": 1772,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 240,
									"end": 1772,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 240,
									"end": 1772,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 240,
									"end": 1772,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 240,
									"end": 1772,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 240,
									"end": 1772,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 240,
									"end": 1772,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 240,
									"end": 1772,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 240,
									"end": 1772,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 240,
									"end": 1772,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 240,
									"end": 1772,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 240,
									"end": 1772,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 240,
									"end": 1772,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 240,
									"end": 1772,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 240,
									"end": 1772,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 240,
									"end": 1772,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 240,
									"end": 1772,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 240,
									"end": 1772,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 240,
									"end": 1772,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 240,
									"end": 1772,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 240,
									"end": 1772,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 240,
									"end": 1772,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 240,
									"end": 1772,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 240,
									"end": 1772,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 240,
									"end": 1772,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 240,
									"end": 1772,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 240,
									"end": 1772,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 240,
									"end": 1772,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 240,
									"end": 1772,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 240,
									"end": 1772,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 240,
									"end": 1772,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 240,
									"end": 1772,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 240,
									"end": 1772,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f83a2379ebf9c8231adf9418da02326e9a30fa6a483b2a1fda633939237483bc64736f6c634300081a0033",
									".code": [
										{
											"begin": 240,
											"end": 1772,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 240,
											"end": 1772,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 240,
											"end": 1772,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 240,
											"end": 1772,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 240,
											"end": 1772,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 240,
											"end": 1772,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 240,
											"end": 1772,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 240,
											"end": 1772,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 240,
											"end": 1772,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@aave/core-v3/contracts/dependencies/gnosis/contracts/GPv2SafeERC20.sol",
								"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Address.sol",
								"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Context.sol",
								"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/IERC20.sol",
								"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/IERC20Detailed.sol",
								"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol",
								"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/SafeERC20.sol",
								"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/SafeMath.sol",
								"@aave/core-v3/contracts/flashloan/base/FlashLoanSimpleReceiverBase.sol",
								"@aave/core-v3/contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol",
								"@aave/core-v3/contracts/interfaces/IERC20WithPermit.sol",
								"@aave/core-v3/contracts/interfaces/IPool.sol",
								"@aave/core-v3/contracts/interfaces/IPoolAddressesProvider.sol",
								"@aave/core-v3/contracts/interfaces/IPriceOracleGetter.sol",
								"@aave/core-v3/contracts/protocol/libraries/math/PercentageMath.sol",
								"@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol",
								"contracts/adapters/paraswap/BaseParaSwapAdapter.sol",
								"contracts/adapters/paraswap/BaseParaSwapSellAdapter.sol",
								"contracts/adapters/paraswap/interfaces/IParaSwapAugustus.sol",
								"contracts/adapters/paraswap/interfaces/IParaSwapAugustusRegistry.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Optimized overflow and underflow safe math operations\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains methods for doing math operations that revert on overflow or underflow for minimal gas cost\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/SafeMath.sol\":{\"keccak256\":\"0xf1c5d8ba70a5fc3e20dbbc2aa2a2278d2535a57bc1e9abf1228ebc3068a045f0\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://275183a6783193c44497f0535e5f8473a5d1fd970bb968f2db4d7bf25c967e7b\",\"dweb:/ipfs/QmXggrHmKWkZEXN5UYkDcYWGrU428k5iYbf39apqbk3fqQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Contains methods for doing math operations that revert on overflow or underflow for minimal gas cost",
						"version": 1
					}
				}
			},
			"@aave/core-v3/contracts/flashloan/base/FlashLoanSimpleReceiverBase.sol": {
				"FlashLoanSimpleReceiverBase": {
					"abi": [
						{
							"inputs": [],
							"name": "ADDRESSES_PROVIDER",
							"outputs": [
								{
									"internalType": "contract IPoolAddressesProvider",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "POOL",
							"outputs": [
								{
									"internalType": "contract IPool",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "premium",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "initiator",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "params",
									"type": "bytes"
								}
							],
							"name": "executeOperation",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Aave",
						"kind": "dev",
						"methods": {
							"executeOperation(address,uint256,uint256,address,bytes)": {
								"details": "Ensure that the contract can return the debt + premium, e.g., has      enough funds to repay and has approved the Pool to pull the total amount",
								"params": {
									"amount": "The amount of the flash-borrowed asset",
									"asset": "The address of the flash-borrowed asset",
									"initiator": "The address of the flashloan initiator",
									"params": "The byte-encoded params passed when initiating the flashloan",
									"premium": "The fee of the flash-borrowed asset"
								},
								"returns": {
									"_0": "True if the execution of the operation succeeds, false otherwise"
								}
							}
						},
						"title": "FlashLoanSimpleReceiverBase",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"ADDRESSES_PROVIDER()": "0542975c",
							"POOL()": "7535d246",
							"executeOperation(address,uint256,uint256,address,bytes)": "1b11d0ff"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ADDRESSES_PROVIDER\",\"outputs\":[{\"internalType\":\"contract IPoolAddressesProvider\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"POOL\",\"outputs\":[{\"internalType\":\"contract IPool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"premium\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"initiator\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"name\":\"executeOperation\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Aave\",\"kind\":\"dev\",\"methods\":{\"executeOperation(address,uint256,uint256,address,bytes)\":{\"details\":\"Ensure that the contract can return the debt + premium, e.g., has      enough funds to repay and has approved the Pool to pull the total amount\",\"params\":{\"amount\":\"The amount of the flash-borrowed asset\",\"asset\":\"The address of the flash-borrowed asset\",\"initiator\":\"The address of the flashloan initiator\",\"params\":\"The byte-encoded params passed when initiating the flashloan\",\"premium\":\"The fee of the flash-borrowed asset\"},\"returns\":{\"_0\":\"True if the execution of the operation succeeds, false otherwise\"}}},\"title\":\"FlashLoanSimpleReceiverBase\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"executeOperation(address,uint256,uint256,address,bytes)\":{\"notice\":\"Executes an operation after receiving the flash-borrowed asset\"}},\"notice\":\"Base contract to develop a flashloan-receiver contract.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@aave/core-v3/contracts/flashloan/base/FlashLoanSimpleReceiverBase.sol\":\"FlashLoanSimpleReceiverBase\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@aave/core-v3/contracts/flashloan/base/FlashLoanSimpleReceiverBase.sol\":{\"keccak256\":\"0x3a04fc046c4f04c71ff230eba56e56bb718be41e4317f0c938bd287d81e384b1\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://8a02e8f6034e6536269eca55dc4e068e584a67cef530dea865d9a75e0e950ca3\",\"dweb:/ipfs/QmdwL6Wvbk8QAyThNzPkeCfmTUryUdUnkbBDSRs5eigBmj\"]},\"@aave/core-v3/contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol\":{\"keccak256\":\"0xba50a7834ddfdca3e3cfac09043f72699be42ff88925641ac30950a434b2b2ff\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://588513e813da8c9edf06bdd8912f33f5e304735e4b0145da9fb034eb46f205b5\",\"dweb:/ipfs/Qmco68eeRnTUGyZaoZ9Vu4R7xzH9x1pUwP36nUvrxnxHxg\"]},\"@aave/core-v3/contracts/interfaces/IPool.sol\":{\"keccak256\":\"0xbfd2077251c8dc766a56d45f4b03eb07f3441323e79c0f794efea3657a99747f\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://c6ff6221de0ea877932c73c0b99d3e4535f293053ae44f9f9d6b9d265e9af2f6\",\"dweb:/ipfs/QmSTaEKrhz1xNVnx4oBzWw8DenYPShVzJoP1A9GTEWkAzX\"]},\"@aave/core-v3/contracts/interfaces/IPoolAddressesProvider.sol\":{\"keccak256\":\"0x33d4308d9407b4ee2297fc4ba5acce1a96a6c658189e2778a4f6b90e032fb3b5\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://978336a2a40229ccc7749344be890862ea12e17e9fffe5bb977ba3841de07b5a\",\"dweb:/ipfs/QmScNrQfDSPg1afJmkCty6fZkETUrWTmEXWeTmHoe7mSqa\"]},\"@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol\":{\"keccak256\":\"0x771cb99fd8519c974f7e12130387c4d9a997a6e8d0ac10e4303b842fe53efa88\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://0f41689d1d58bc13678c749bae8830f5a8b19b89cd135e962bf07d483350f828\",\"dweb:/ipfs/QmQSNGDxjYGqT1GU2CZzsWUTNcAtcfkg1jDGTH516nCAfN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"executeOperation(address,uint256,uint256,address,bytes)": {
								"notice": "Executes an operation after receiving the flash-borrowed asset"
							}
						},
						"notice": "Base contract to develop a flashloan-receiver contract.",
						"version": 1
					}
				}
			},
			"@aave/core-v3/contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol": {
				"IFlashLoanSimpleReceiver": {
					"abi": [
						{
							"inputs": [],
							"name": "ADDRESSES_PROVIDER",
							"outputs": [
								{
									"internalType": "contract IPoolAddressesProvider",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "POOL",
							"outputs": [
								{
									"internalType": "contract IPool",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "premium",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "initiator",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "params",
									"type": "bytes"
								}
							],
							"name": "executeOperation",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Aave",
						"details": "Implement this interface to develop a flashloan-compatible flashLoanReceiver contract",
						"kind": "dev",
						"methods": {
							"executeOperation(address,uint256,uint256,address,bytes)": {
								"details": "Ensure that the contract can return the debt + premium, e.g., has      enough funds to repay and has approved the Pool to pull the total amount",
								"params": {
									"amount": "The amount of the flash-borrowed asset",
									"asset": "The address of the flash-borrowed asset",
									"initiator": "The address of the flashloan initiator",
									"params": "The byte-encoded params passed when initiating the flashloan",
									"premium": "The fee of the flash-borrowed asset"
								},
								"returns": {
									"_0": "True if the execution of the operation succeeds, false otherwise"
								}
							}
						},
						"title": "IFlashLoanSimpleReceiver",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"ADDRESSES_PROVIDER()": "0542975c",
							"POOL()": "7535d246",
							"executeOperation(address,uint256,uint256,address,bytes)": "1b11d0ff"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ADDRESSES_PROVIDER\",\"outputs\":[{\"internalType\":\"contract IPoolAddressesProvider\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"POOL\",\"outputs\":[{\"internalType\":\"contract IPool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"premium\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"initiator\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"name\":\"executeOperation\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Aave\",\"details\":\"Implement this interface to develop a flashloan-compatible flashLoanReceiver contract\",\"kind\":\"dev\",\"methods\":{\"executeOperation(address,uint256,uint256,address,bytes)\":{\"details\":\"Ensure that the contract can return the debt + premium, e.g., has      enough funds to repay and has approved the Pool to pull the total amount\",\"params\":{\"amount\":\"The amount of the flash-borrowed asset\",\"asset\":\"The address of the flash-borrowed asset\",\"initiator\":\"The address of the flashloan initiator\",\"params\":\"The byte-encoded params passed when initiating the flashloan\",\"premium\":\"The fee of the flash-borrowed asset\"},\"returns\":{\"_0\":\"True if the execution of the operation succeeds, false otherwise\"}}},\"title\":\"IFlashLoanSimpleReceiver\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"executeOperation(address,uint256,uint256,address,bytes)\":{\"notice\":\"Executes an operation after receiving the flash-borrowed asset\"}},\"notice\":\"Defines the basic interface of a flashloan-receiver contract.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@aave/core-v3/contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol\":\"IFlashLoanSimpleReceiver\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@aave/core-v3/contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol\":{\"keccak256\":\"0xba50a7834ddfdca3e3cfac09043f72699be42ff88925641ac30950a434b2b2ff\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://588513e813da8c9edf06bdd8912f33f5e304735e4b0145da9fb034eb46f205b5\",\"dweb:/ipfs/Qmco68eeRnTUGyZaoZ9Vu4R7xzH9x1pUwP36nUvrxnxHxg\"]},\"@aave/core-v3/contracts/interfaces/IPool.sol\":{\"keccak256\":\"0xbfd2077251c8dc766a56d45f4b03eb07f3441323e79c0f794efea3657a99747f\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://c6ff6221de0ea877932c73c0b99d3e4535f293053ae44f9f9d6b9d265e9af2f6\",\"dweb:/ipfs/QmSTaEKrhz1xNVnx4oBzWw8DenYPShVzJoP1A9GTEWkAzX\"]},\"@aave/core-v3/contracts/interfaces/IPoolAddressesProvider.sol\":{\"keccak256\":\"0x33d4308d9407b4ee2297fc4ba5acce1a96a6c658189e2778a4f6b90e032fb3b5\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://978336a2a40229ccc7749344be890862ea12e17e9fffe5bb977ba3841de07b5a\",\"dweb:/ipfs/QmScNrQfDSPg1afJmkCty6fZkETUrWTmEXWeTmHoe7mSqa\"]},\"@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol\":{\"keccak256\":\"0x771cb99fd8519c974f7e12130387c4d9a997a6e8d0ac10e4303b842fe53efa88\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://0f41689d1d58bc13678c749bae8830f5a8b19b89cd135e962bf07d483350f828\",\"dweb:/ipfs/QmQSNGDxjYGqT1GU2CZzsWUTNcAtcfkg1jDGTH516nCAfN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"executeOperation(address,uint256,uint256,address,bytes)": {
								"notice": "Executes an operation after receiving the flash-borrowed asset"
							}
						},
						"notice": "Defines the basic interface of a flashloan-receiver contract.",
						"version": 1
					}
				}
			},
			"@aave/core-v3/contracts/interfaces/IERC20WithPermit.sol": {
				"IERC20WithPermit": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Aave",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "implements the permit function as for https://github.com/ethereum/EIPs/blob/8a34d644aacf0f9f8f00815307fd7dd5da07655f/EIPS/eip-2612.md",
								"params": {
									"deadline": "The deadline timestamp, type(uint256).max for max deadline",
									"owner": "The owner of the funds",
									"r": "Signature param",
									"s": "Signature param",
									"spender": "The spender",
									"v": "Signature param",
									"value": "The amount"
								}
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"title": "IERC20WithPermit",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Aave\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"implements the permit function as for https://github.com/ethereum/EIPs/blob/8a34d644aacf0f9f8f00815307fd7dd5da07655f/EIPS/eip-2612.md\",\"params\":{\"deadline\":\"The deadline timestamp, type(uint256).max for max deadline\",\"owner\":\"The owner of the funds\",\"r\":\"Signature param\",\"s\":\"Signature param\",\"spender\":\"The spender\",\"v\":\"Signature param\",\"value\":\"The amount\"}},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"title\":\"IERC20WithPermit\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Allow passing a signed message to approve spending\"}},\"notice\":\"Interface for the permit function (EIP-2612)\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@aave/core-v3/contracts/interfaces/IERC20WithPermit.sol\":\"IERC20WithPermit\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/IERC20.sol\":{\"keccak256\":\"0xf57d62241e553696a1324d225663ba2e1a51db0a51ca236d0c1b009d89b6284c\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://d327db93b636790909aa137124f30a856ac1631cb79c476aa188f9627fda8d03\",\"dweb:/ipfs/QmaxpmEoBFioeNYmpxJemyZ7aYF2nX1NKW1XDqREm7i6es\"]},\"@aave/core-v3/contracts/interfaces/IERC20WithPermit.sol\":{\"keccak256\":\"0xfb041570f1804648f543be72cecc80ca9f65129232bacaa9247ebd11a7d9f83e\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://d46fcfc306a6f9d52dd6d17f9d344907f7fe54ad8e36b890949662f5a1c7ca55\",\"dweb:/ipfs/QmX5B4ZfmxpgF86tMhCV5DiH5pAyVanzsiCRDT8GkCfzkZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"notice": "Allow passing a signed message to approve spending"
							}
						},
						"notice": "Interface for the permit function (EIP-2612)",
						"version": 1
					}
				}
			},
			"@aave/core-v3/contracts/interfaces/IPool.sol": {
				"IPool": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "backer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "fee",
									"type": "uint256"
								}
							],
							"name": "BackUnbacked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "onBehalfOf",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "enum DataTypes.InterestRateMode",
									"name": "interestRateMode",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "borrowRate",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint16",
									"name": "referralCode",
									"type": "uint16"
								}
							],
							"name": "Borrow",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "target",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "initiator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "enum DataTypes.InterestRateMode",
									"name": "interestRateMode",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "premium",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint16",
									"name": "referralCode",
									"type": "uint16"
								}
							],
							"name": "FlashLoan",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalDebt",
									"type": "uint256"
								}
							],
							"name": "IsolationModeTotalDebtUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "collateralAsset",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "debtAsset",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "debtToCover",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "liquidatedCollateralAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "liquidator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "receiveAToken",
									"type": "bool"
								}
							],
							"name": "LiquidationCall",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "onBehalfOf",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint16",
									"name": "referralCode",
									"type": "uint16"
								}
							],
							"name": "MintUnbacked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountMinted",
									"type": "uint256"
								}
							],
							"name": "MintedToTreasury",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "RebalanceStableBorrowRate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "repayer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "useATokens",
									"type": "bool"
								}
							],
							"name": "Repay",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "liquidityRate",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "stableBorrowRate",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "variableBorrowRate",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "liquidityIndex",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "variableBorrowIndex",
									"type": "uint256"
								}
							],
							"name": "ReserveDataUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "ReserveUsedAsCollateralDisabled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "ReserveUsedAsCollateralEnabled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "onBehalfOf",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint16",
									"name": "referralCode",
									"type": "uint16"
								}
							],
							"name": "Supply",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "enum DataTypes.InterestRateMode",
									"name": "interestRateMode",
									"type": "uint8"
								}
							],
							"name": "SwapBorrowRateMode",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "categoryId",
									"type": "uint8"
								}
							],
							"name": "UserEModeSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "ADDRESSES_PROVIDER",
							"outputs": [
								{
									"internalType": "contract IPoolAddressesProvider",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "BRIDGE_PROTOCOL_FEE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "FLASHLOAN_PREMIUM_TOTAL",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "FLASHLOAN_PREMIUM_TO_PROTOCOL",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MAX_NUMBER_RESERVES",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MAX_STABLE_RATE_BORROW_SIZE_PERCENT",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "fee",
									"type": "uint256"
								}
							],
							"name": "backUnbacked",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "interestRateMode",
									"type": "uint256"
								},
								{
									"internalType": "uint16",
									"name": "referralCode",
									"type": "uint16"
								},
								{
									"internalType": "address",
									"name": "onBehalfOf",
									"type": "address"
								}
							],
							"name": "borrow",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "id",
									"type": "uint8"
								},
								{
									"components": [
										{
											"internalType": "uint16",
											"name": "ltv",
											"type": "uint16"
										},
										{
											"internalType": "uint16",
											"name": "liquidationThreshold",
											"type": "uint16"
										},
										{
											"internalType": "uint16",
											"name": "liquidationBonus",
											"type": "uint16"
										},
										{
											"internalType": "address",
											"name": "priceSource",
											"type": "address"
										},
										{
											"internalType": "string",
											"name": "label",
											"type": "string"
										}
									],
									"internalType": "struct DataTypes.EModeCategory",
									"name": "config",
									"type": "tuple"
								}
							],
							"name": "configureEModeCategory",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "onBehalfOf",
									"type": "address"
								},
								{
									"internalType": "uint16",
									"name": "referralCode",
									"type": "uint16"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								}
							],
							"name": "dropReserve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "balanceFromBefore",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "balanceToBefore",
									"type": "uint256"
								}
							],
							"name": "finalizeTransfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiverAddress",
									"type": "address"
								},
								{
									"internalType": "address[]",
									"name": "assets",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "interestRateModes",
									"type": "uint256[]"
								},
								{
									"internalType": "address",
									"name": "onBehalfOf",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "params",
									"type": "bytes"
								},
								{
									"internalType": "uint16",
									"name": "referralCode",
									"type": "uint16"
								}
							],
							"name": "flashLoan",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiverAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "params",
									"type": "bytes"
								},
								{
									"internalType": "uint16",
									"name": "referralCode",
									"type": "uint16"
								}
							],
							"name": "flashLoanSimple",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								}
							],
							"name": "getConfiguration",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "data",
											"type": "uint256"
										}
									],
									"internalType": "struct DataTypes.ReserveConfigurationMap",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "id",
									"type": "uint8"
								}
							],
							"name": "getEModeCategoryData",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint16",
											"name": "ltv",
											"type": "uint16"
										},
										{
											"internalType": "uint16",
											"name": "liquidationThreshold",
											"type": "uint16"
										},
										{
											"internalType": "uint16",
											"name": "liquidationBonus",
											"type": "uint16"
										},
										{
											"internalType": "address",
											"name": "priceSource",
											"type": "address"
										},
										{
											"internalType": "string",
											"name": "label",
											"type": "string"
										}
									],
									"internalType": "struct DataTypes.EModeCategory",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "id",
									"type": "uint16"
								}
							],
							"name": "getReserveAddressById",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								}
							],
							"name": "getReserveData",
							"outputs": [
								{
									"components": [
										{
											"components": [
												{
													"internalType": "uint256",
													"name": "data",
													"type": "uint256"
												}
											],
											"internalType": "struct DataTypes.ReserveConfigurationMap",
											"name": "configuration",
											"type": "tuple"
										},
										{
											"internalType": "uint128",
											"name": "liquidityIndex",
											"type": "uint128"
										},
										{
											"internalType": "uint128",
											"name": "currentLiquidityRate",
											"type": "uint128"
										},
										{
											"internalType": "uint128",
											"name": "variableBorrowIndex",
											"type": "uint128"
										},
										{
											"internalType": "uint128",
											"name": "currentVariableBorrowRate",
											"type": "uint128"
										},
										{
											"internalType": "uint128",
											"name": "currentStableBorrowRate",
											"type": "uint128"
										},
										{
											"internalType": "uint40",
											"name": "lastUpdateTimestamp",
											"type": "uint40"
										},
										{
											"internalType": "uint16",
											"name": "id",
											"type": "uint16"
										},
										{
											"internalType": "address",
											"name": "aTokenAddress",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "stableDebtTokenAddress",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "variableDebtTokenAddress",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "interestRateStrategyAddress",
											"type": "address"
										},
										{
											"internalType": "uint128",
											"name": "accruedToTreasury",
											"type": "uint128"
										},
										{
											"internalType": "uint128",
											"name": "unbacked",
											"type": "uint128"
										},
										{
											"internalType": "uint128",
											"name": "isolationModeTotalDebt",
											"type": "uint128"
										}
									],
									"internalType": "struct DataTypes.ReserveData",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								}
							],
							"name": "getReserveNormalizedIncome",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								}
							],
							"name": "getReserveNormalizedVariableDebt",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getReservesList",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getUserAccountData",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "totalCollateralBase",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalDebtBase",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "availableBorrowsBase",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "currentLiquidationThreshold",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "ltv",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "healthFactor",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getUserConfiguration",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "data",
											"type": "uint256"
										}
									],
									"internalType": "struct DataTypes.UserConfigurationMap",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getUserEMode",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "aTokenAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "stableDebtAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "variableDebtAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "interestRateStrategyAddress",
									"type": "address"
								}
							],
							"name": "initReserve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collateralAsset",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "debtAsset",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "debtToCover",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "receiveAToken",
									"type": "bool"
								}
							],
							"name": "liquidationCall",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "assets",
									"type": "address[]"
								}
							],
							"name": "mintToTreasury",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "onBehalfOf",
									"type": "address"
								},
								{
									"internalType": "uint16",
									"name": "referralCode",
									"type": "uint16"
								}
							],
							"name": "mintUnbacked",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "rebalanceStableBorrowRate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "interestRateMode",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "onBehalfOf",
									"type": "address"
								}
							],
							"name": "repay",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "interestRateMode",
									"type": "uint256"
								}
							],
							"name": "repayWithATokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "interestRateMode",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "onBehalfOf",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "permitV",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "permitR",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "permitS",
									"type": "bytes32"
								}
							],
							"name": "repayWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "rescueTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								}
							],
							"name": "resetIsolationModeTotalDebt",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "data",
											"type": "uint256"
										}
									],
									"internalType": "struct DataTypes.ReserveConfigurationMap",
									"name": "configuration",
									"type": "tuple"
								}
							],
							"name": "setConfiguration",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "rateStrategyAddress",
									"type": "address"
								}
							],
							"name": "setReserveInterestRateStrategyAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "categoryId",
									"type": "uint8"
								}
							],
							"name": "setUserEMode",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "useAsCollateral",
									"type": "bool"
								}
							],
							"name": "setUserUseReserveAsCollateral",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "onBehalfOf",
									"type": "address"
								},
								{
									"internalType": "uint16",
									"name": "referralCode",
									"type": "uint16"
								}
							],
							"name": "supply",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "onBehalfOf",
									"type": "address"
								},
								{
									"internalType": "uint16",
									"name": "referralCode",
									"type": "uint16"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "permitV",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "permitR",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "permitS",
									"type": "bytes32"
								}
							],
							"name": "supplyWithPermit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "interestRateMode",
									"type": "uint256"
								}
							],
							"name": "swapBorrowRateMode",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "bridgeProtocolFee",
									"type": "uint256"
								}
							],
							"name": "updateBridgeProtocolFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint128",
									"name": "flashLoanPremiumTotal",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "flashLoanPremiumToProtocol",
									"type": "uint128"
								}
							],
							"name": "updateFlashloanPremiums",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "withdraw",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Aave",
						"events": {
							"BackUnbacked(address,address,uint256,uint256)": {
								"details": "Emitted on backUnbacked()",
								"params": {
									"amount": "The amount added as backing",
									"backer": "The address paying for the backing",
									"fee": "The amount paid in fees",
									"reserve": "The address of the underlying asset of the reserve"
								}
							},
							"Borrow(address,address,address,uint256,uint8,uint256,uint16)": {
								"details": "Emitted on borrow() and flashLoan() when debt needs to be opened",
								"params": {
									"amount": "The amount borrowed out",
									"borrowRate": "The numeric rate at which the user has borrowed, expressed in ray",
									"interestRateMode": "The rate mode: 1 for Stable, 2 for Variable",
									"onBehalfOf": "The address that will be getting the debt",
									"referralCode": "The referral code used",
									"reserve": "The address of the underlying asset being borrowed",
									"user": "The address of the user initiating the borrow(), receiving the funds on borrow() or just initiator of the transaction on flashLoan()"
								}
							},
							"FlashLoan(address,address,address,uint256,uint8,uint256,uint16)": {
								"details": "Emitted on flashLoan()",
								"params": {
									"amount": "The amount flash borrowed",
									"asset": "The address of the asset being flash borrowed",
									"initiator": "The address initiating the flash loan",
									"interestRateMode": "The flashloan mode: 0 for regular flashloan, 1 for Stable debt, 2 for Variable debt",
									"premium": "The fee flash borrowed",
									"referralCode": "The referral code used",
									"target": "The address of the flash loan receiver contract"
								}
							},
							"IsolationModeTotalDebtUpdated(address,uint256)": {
								"details": "Emitted on borrow(), repay() and liquidationCall() when using isolated assets",
								"params": {
									"asset": "The address of the underlying asset of the reserve",
									"totalDebt": "The total isolation mode debt for the reserve"
								}
							},
							"LiquidationCall(address,address,address,uint256,uint256,address,bool)": {
								"details": "Emitted when a borrower is liquidated.",
								"params": {
									"collateralAsset": "The address of the underlying asset used as collateral, to receive as result of the liquidation",
									"debtAsset": "The address of the underlying borrowed asset to be repaid with the liquidation",
									"debtToCover": "The debt amount of borrowed `asset` the liquidator wants to cover",
									"liquidatedCollateralAmount": "The amount of collateral received by the liquidator",
									"liquidator": "The address of the liquidator",
									"receiveAToken": "True if the liquidators wants to receive the collateral aTokens, `false` if he wants to receive the underlying collateral asset directly",
									"user": "The address of the borrower getting liquidated"
								}
							},
							"MintUnbacked(address,address,address,uint256,uint16)": {
								"details": "Emitted on mintUnbacked()",
								"params": {
									"amount": "The amount of supplied assets",
									"onBehalfOf": "The beneficiary of the supplied assets, receiving the aTokens",
									"referralCode": "The referral code used",
									"reserve": "The address of the underlying asset of the reserve",
									"user": "The address initiating the supply"
								}
							},
							"MintedToTreasury(address,uint256)": {
								"details": "Emitted when the protocol treasury receives minted aTokens from the accrued interest.",
								"params": {
									"amountMinted": "The amount minted to the treasury",
									"reserve": "The address of the reserve"
								}
							},
							"RebalanceStableBorrowRate(address,address)": {
								"details": "Emitted on rebalanceStableBorrowRate()",
								"params": {
									"reserve": "The address of the underlying asset of the reserve",
									"user": "The address of the user for which the rebalance has been executed"
								}
							},
							"Repay(address,address,address,uint256,bool)": {
								"details": "Emitted on repay()",
								"params": {
									"amount": "The amount repaid",
									"repayer": "The address of the user initiating the repay(), providing the funds",
									"reserve": "The address of the underlying asset of the reserve",
									"useATokens": "True if the repayment is done using aTokens, `false` if done with underlying asset directly",
									"user": "The beneficiary of the repayment, getting his debt reduced"
								}
							},
							"ReserveDataUpdated(address,uint256,uint256,uint256,uint256,uint256)": {
								"details": "Emitted when the state of a reserve is updated.",
								"params": {
									"liquidityIndex": "The next liquidity index",
									"liquidityRate": "The next liquidity rate",
									"reserve": "The address of the underlying asset of the reserve",
									"stableBorrowRate": "The next stable borrow rate",
									"variableBorrowIndex": "The next variable borrow index",
									"variableBorrowRate": "The next variable borrow rate"
								}
							},
							"ReserveUsedAsCollateralDisabled(address,address)": {
								"details": "Emitted on setUserUseReserveAsCollateral()",
								"params": {
									"reserve": "The address of the underlying asset of the reserve",
									"user": "The address of the user enabling the usage as collateral"
								}
							},
							"ReserveUsedAsCollateralEnabled(address,address)": {
								"details": "Emitted on setUserUseReserveAsCollateral()",
								"params": {
									"reserve": "The address of the underlying asset of the reserve",
									"user": "The address of the user enabling the usage as collateral"
								}
							},
							"Supply(address,address,address,uint256,uint16)": {
								"details": "Emitted on supply()",
								"params": {
									"amount": "The amount supplied",
									"onBehalfOf": "The beneficiary of the supply, receiving the aTokens",
									"referralCode": "The referral code used",
									"reserve": "The address of the underlying asset of the reserve",
									"user": "The address initiating the supply"
								}
							},
							"SwapBorrowRateMode(address,address,uint8)": {
								"details": "Emitted on swapBorrowRateMode()",
								"params": {
									"interestRateMode": "The current interest rate mode of the position being swapped: 1 for Stable, 2 for Variable",
									"reserve": "The address of the underlying asset of the reserve",
									"user": "The address of the user swapping his rate mode"
								}
							},
							"UserEModeSet(address,uint8)": {
								"details": "Emitted when the user selects a certain asset category for eMode",
								"params": {
									"categoryId": "The category id",
									"user": "The address of the user"
								}
							},
							"Withdraw(address,address,address,uint256)": {
								"details": "Emitted on withdraw()",
								"params": {
									"amount": "The amount to be withdrawn",
									"reserve": "The address of the underlying asset being withdrawn",
									"to": "The address that will receive the underlying",
									"user": "The address initiating the withdrawal, owner of aTokens"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"ADDRESSES_PROVIDER()": {
								"returns": {
									"_0": "The address of the PoolAddressesProvider"
								}
							},
							"BRIDGE_PROTOCOL_FEE()": {
								"returns": {
									"_0": "The bridge fee sent to the protocol treasury"
								}
							},
							"FLASHLOAN_PREMIUM_TOTAL()": {
								"returns": {
									"_0": "The total fee on flashloans"
								}
							},
							"FLASHLOAN_PREMIUM_TO_PROTOCOL()": {
								"returns": {
									"_0": "The flashloan fee sent to the protocol treasury"
								}
							},
							"MAX_NUMBER_RESERVES()": {
								"returns": {
									"_0": "The maximum number of reserves supported"
								}
							},
							"MAX_STABLE_RATE_BORROW_SIZE_PERCENT()": {
								"returns": {
									"_0": "The percentage of available liquidity to borrow, expressed in bps"
								}
							},
							"backUnbacked(address,uint256,uint256)": {
								"params": {
									"amount": "The amount to back",
									"asset": "The address of the underlying asset to back",
									"fee": "The amount paid in fees"
								},
								"returns": {
									"_0": "The backed amount"
								}
							},
							"borrow(address,uint256,uint256,uint16,address)": {
								"params": {
									"amount": "The amount to be borrowed",
									"asset": "The address of the underlying asset to borrow",
									"interestRateMode": "The interest rate mode at which the user wants to borrow: 1 for Stable, 2 for Variable",
									"onBehalfOf": "The address of the user who will receive the debt. Should be the address of the borrower itself calling the function if he wants to borrow against his own collateral, or the address of the credit delegator if he has been given credit delegation allowance",
									"referralCode": "The code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man"
								}
							},
							"configureEModeCategory(uint8,(uint16,uint16,uint16,address,string))": {
								"details": "In eMode, the protocol allows very high borrowing power to borrow assets of the same category. The category 0 is reserved as it's the default for volatile assets",
								"params": {
									"config": "The configuration of the category",
									"id": "The id of the category"
								}
							},
							"deposit(address,uint256,address,uint16)": {
								"details": "Deprecated: Use the `supply` function instead",
								"params": {
									"amount": "The amount to be supplied",
									"asset": "The address of the underlying asset to supply",
									"onBehalfOf": "The address that will receive the aTokens, same as msg.sender if the user   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens   is a different wallet",
									"referralCode": "Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man"
								}
							},
							"dropReserve(address)": {
								"details": "Only callable by the PoolConfigurator contract",
								"params": {
									"asset": "The address of the underlying asset of the reserve"
								}
							},
							"finalizeTransfer(address,address,address,uint256,uint256,uint256)": {
								"details": "Only callable by the overlying aToken of the `asset`",
								"params": {
									"amount": "The amount being transferred/withdrawn",
									"asset": "The address of the underlying asset of the aToken",
									"balanceFromBefore": "The aToken balance of the `from` user before the transfer",
									"balanceToBefore": "The aToken balance of the `to` user before the transfer",
									"from": "The user from which the aTokens are transferred",
									"to": "The user receiving the aTokens"
								}
							},
							"flashLoan(address,address[],uint256[],uint256[],address,bytes,uint16)": {
								"details": "IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept into consideration. For further details please visit https://docs.aave.com/developers/",
								"params": {
									"amounts": "The amounts of the assets being flash-borrowed",
									"assets": "The addresses of the assets being flash-borrowed",
									"interestRateModes": "Types of the debt to open if the flash loan is not returned:   0 -> Don't open any debt, just revert if funds can't be transferred from the receiver   1 -> Open debt at stable rate for the value of the amount flash-borrowed to the `onBehalfOf` address   2 -> Open debt at variable rate for the value of the amount flash-borrowed to the `onBehalfOf` address",
									"onBehalfOf": "The address  that will receive the debt in the case of using on `modes` 1 or 2",
									"params": "Variadic packed params to pass to the receiver as extra information",
									"receiverAddress": "The address of the contract receiving the funds, implementing IFlashLoanReceiver interface",
									"referralCode": "The code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man"
								}
							},
							"flashLoanSimple(address,address,uint256,bytes,uint16)": {
								"details": "IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept into consideration. For further details please visit https://docs.aave.com/developers/",
								"params": {
									"amount": "The amount of the asset being flash-borrowed",
									"asset": "The address of the asset being flash-borrowed",
									"params": "Variadic packed params to pass to the receiver as extra information",
									"receiverAddress": "The address of the contract receiving the funds, implementing IFlashLoanSimpleReceiver interface",
									"referralCode": "The code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man"
								}
							},
							"getConfiguration(address)": {
								"params": {
									"asset": "The address of the underlying asset of the reserve"
								},
								"returns": {
									"_0": "The configuration of the reserve"
								}
							},
							"getEModeCategoryData(uint8)": {
								"params": {
									"id": "The id of the category"
								},
								"returns": {
									"_0": "The configuration data of the category"
								}
							},
							"getReserveAddressById(uint16)": {
								"params": {
									"id": "The id of the reserve as stored in the DataTypes.ReserveData struct"
								},
								"returns": {
									"_0": "The address of the reserve associated with id"
								}
							},
							"getReserveData(address)": {
								"params": {
									"asset": "The address of the underlying asset of the reserve"
								},
								"returns": {
									"_0": "The state and configuration data of the reserve"
								}
							},
							"getReserveNormalizedIncome(address)": {
								"params": {
									"asset": "The address of the underlying asset of the reserve"
								},
								"returns": {
									"_0": "The reserve's normalized income"
								}
							},
							"getReserveNormalizedVariableDebt(address)": {
								"details": "WARNING: This function is intended to be used primarily by the protocol itself to get a \"dynamic\" variable index based on time, current stored index and virtual rate at the current moment (approx. a borrower would get if opening a position). This means that is always used in combination with variable debt supply/balances. If using this function externally, consider that is possible to have an increasing normalized variable debt that is not equivalent to how the variable debt index would be updated in storage (e.g. only updates with non-zero variable debt supply)",
								"params": {
									"asset": "The address of the underlying asset of the reserve"
								},
								"returns": {
									"_0": "The reserve normalized variable debt"
								}
							},
							"getReservesList()": {
								"details": "It does not include dropped reserves",
								"returns": {
									"_0": "The addresses of the underlying assets of the initialized reserves"
								}
							},
							"getUserAccountData(address)": {
								"params": {
									"user": "The address of the user"
								},
								"returns": {
									"availableBorrowsBase": "The borrowing power left of the user in the base currency used by the price feed",
									"currentLiquidationThreshold": "The liquidation threshold of the user",
									"healthFactor": "The current health factor of the user",
									"ltv": "The loan to value of The user",
									"totalCollateralBase": "The total collateral of the user in the base currency used by the price feed",
									"totalDebtBase": "The total debt of the user in the base currency used by the price feed"
								}
							},
							"getUserConfiguration(address)": {
								"params": {
									"user": "The user address"
								},
								"returns": {
									"_0": "The configuration of the user"
								}
							},
							"getUserEMode(address)": {
								"params": {
									"user": "The address of the user"
								},
								"returns": {
									"_0": "The eMode id"
								}
							},
							"initReserve(address,address,address,address,address)": {
								"details": "Only callable by the PoolConfigurator contract",
								"params": {
									"aTokenAddress": "The address of the aToken that will be assigned to the reserve",
									"asset": "The address of the underlying asset of the reserve",
									"interestRateStrategyAddress": "The address of the interest rate strategy contract",
									"stableDebtAddress": "The address of the StableDebtToken that will be assigned to the reserve",
									"variableDebtAddress": "The address of the VariableDebtToken that will be assigned to the reserve"
								}
							},
							"liquidationCall(address,address,address,uint256,bool)": {
								"params": {
									"collateralAsset": "The address of the underlying asset used as collateral, to receive as result of the liquidation",
									"debtAsset": "The address of the underlying borrowed asset to be repaid with the liquidation",
									"debtToCover": "The debt amount of borrowed `asset` the liquidator wants to cover",
									"receiveAToken": "True if the liquidators wants to receive the collateral aTokens, `false` if he wants to receive the underlying collateral asset directly",
									"user": "The address of the borrower getting liquidated"
								}
							},
							"mintToTreasury(address[])": {
								"params": {
									"assets": "The list of reserves for which the minting needs to be executed"
								}
							},
							"mintUnbacked(address,uint256,address,uint16)": {
								"params": {
									"amount": "The amount to mint",
									"asset": "The address of the underlying asset to mint",
									"onBehalfOf": "The address that will receive the aTokens",
									"referralCode": "Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man"
								}
							},
							"rebalanceStableBorrowRate(address,address)": {
								"params": {
									"asset": "The address of the underlying asset borrowed",
									"user": "The address of the user to be rebalanced"
								}
							},
							"repay(address,uint256,uint256,address)": {
								"params": {
									"amount": "The amount to repay - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`",
									"asset": "The address of the borrowed underlying asset previously borrowed",
									"interestRateMode": "The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable",
									"onBehalfOf": "The address of the user who will get his debt reduced/removed. Should be the address of the user calling the function if he wants to reduce/remove his own debt, or the address of any other other borrower whose debt should be removed"
								},
								"returns": {
									"_0": "The final amount repaid"
								}
							},
							"repayWithATokens(address,uint256,uint256)": {
								"details": "Passing uint256.max as amount will clean up any residual aToken dust balance, if the user aToken balance is not enough to cover the whole debt",
								"params": {
									"amount": "The amount to repay - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`",
									"asset": "The address of the borrowed underlying asset previously borrowed",
									"interestRateMode": "The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable"
								},
								"returns": {
									"_0": "The final amount repaid"
								}
							},
							"repayWithPermit(address,uint256,uint256,address,uint256,uint8,bytes32,bytes32)": {
								"params": {
									"amount": "The amount to repay - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`",
									"asset": "The address of the borrowed underlying asset previously borrowed",
									"deadline": "The deadline timestamp that the permit is valid",
									"interestRateMode": "The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable",
									"onBehalfOf": "Address of the user who will get his debt reduced/removed. Should be the address of the user calling the function if he wants to reduce/remove his own debt, or the address of any other other borrower whose debt should be removed",
									"permitR": "The R parameter of ERC712 permit sig",
									"permitS": "The S parameter of ERC712 permit sig",
									"permitV": "The V parameter of ERC712 permit sig"
								},
								"returns": {
									"_0": "The final amount repaid"
								}
							},
							"rescueTokens(address,address,uint256)": {
								"params": {
									"amount": "The amount of token to transfer",
									"to": "The address of the recipient",
									"token": "The address of the token"
								}
							},
							"resetIsolationModeTotalDebt(address)": {
								"details": "It requires the given asset has zero debt ceiling",
								"params": {
									"asset": "The address of the underlying asset to reset the isolationModeTotalDebt"
								}
							},
							"setConfiguration(address,(uint256))": {
								"details": "Only callable by the PoolConfigurator contract",
								"params": {
									"asset": "The address of the underlying asset of the reserve",
									"configuration": "The new configuration bitmap"
								}
							},
							"setReserveInterestRateStrategyAddress(address,address)": {
								"details": "Only callable by the PoolConfigurator contract",
								"params": {
									"asset": "The address of the underlying asset of the reserve",
									"rateStrategyAddress": "The address of the interest rate strategy contract"
								}
							},
							"setUserEMode(uint8)": {
								"params": {
									"categoryId": "The id of the category"
								}
							},
							"setUserUseReserveAsCollateral(address,bool)": {
								"params": {
									"asset": "The address of the underlying asset supplied",
									"useAsCollateral": "True if the user wants to use the supply as collateral, false otherwise"
								}
							},
							"supply(address,uint256,address,uint16)": {
								"params": {
									"amount": "The amount to be supplied",
									"asset": "The address of the underlying asset to supply",
									"onBehalfOf": "The address that will receive the aTokens, same as msg.sender if the user   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens   is a different wallet",
									"referralCode": "Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man"
								}
							},
							"supplyWithPermit(address,uint256,address,uint16,uint256,uint8,bytes32,bytes32)": {
								"params": {
									"amount": "The amount to be supplied",
									"asset": "The address of the underlying asset to supply",
									"deadline": "The deadline timestamp that the permit is valid",
									"onBehalfOf": "The address that will receive the aTokens, same as msg.sender if the user   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens   is a different wallet",
									"permitR": "The R parameter of ERC712 permit sig",
									"permitS": "The S parameter of ERC712 permit sig",
									"permitV": "The V parameter of ERC712 permit sig",
									"referralCode": "Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man"
								}
							},
							"swapBorrowRateMode(address,uint256)": {
								"params": {
									"asset": "The address of the underlying asset borrowed",
									"interestRateMode": "The current interest rate mode of the position being swapped: 1 for Stable, 2 for Variable"
								}
							},
							"updateBridgeProtocolFee(uint256)": {
								"params": {
									"bridgeProtocolFee": "The part of the premium sent to the protocol treasury"
								}
							},
							"updateFlashloanPremiums(uint128,uint128)": {
								"details": "The total premium is calculated on the total borrowed amountThe premium to protocol is calculated on the total premium, being a percentage of `flashLoanPremiumTotal`Only callable by the PoolConfigurator contract",
								"params": {
									"flashLoanPremiumToProtocol": "The part of the premium sent to the protocol treasury, expressed in bps",
									"flashLoanPremiumTotal": "The total premium, expressed in bps"
								}
							},
							"withdraw(address,uint256,address)": {
								"params": {
									"amount": "The underlying amount to be withdrawn   - Send the value type(uint256).max in order to withdraw the whole aToken balance",
									"asset": "The address of the underlying asset to withdraw",
									"to": "The address that will receive the underlying, same as msg.sender if the user   wants to receive it on his own wallet, or a different address if the beneficiary is a   different wallet"
								},
								"returns": {
									"_0": "The final amount withdrawn"
								}
							}
						},
						"title": "IPool",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"ADDRESSES_PROVIDER()": "0542975c",
							"BRIDGE_PROTOCOL_FEE()": "272d9072",
							"FLASHLOAN_PREMIUM_TOTAL()": "074b2e43",
							"FLASHLOAN_PREMIUM_TO_PROTOCOL()": "6a99c036",
							"MAX_NUMBER_RESERVES()": "f8119d51",
							"MAX_STABLE_RATE_BORROW_SIZE_PERCENT()": "e82fec2f",
							"backUnbacked(address,uint256,uint256)": "d65dc7a1",
							"borrow(address,uint256,uint256,uint16,address)": "a415bcad",
							"configureEModeCategory(uint8,(uint16,uint16,uint16,address,string))": "d579ea7d",
							"deposit(address,uint256,address,uint16)": "e8eda9df",
							"dropReserve(address)": "63c9b860",
							"finalizeTransfer(address,address,address,uint256,uint256,uint256)": "d5ed3933",
							"flashLoan(address,address[],uint256[],uint256[],address,bytes,uint16)": "ab9c4b5d",
							"flashLoanSimple(address,address,uint256,bytes,uint16)": "42b0b77c",
							"getConfiguration(address)": "c44b11f7",
							"getEModeCategoryData(uint8)": "6c6f6ae1",
							"getReserveAddressById(uint16)": "52751797",
							"getReserveData(address)": "35ea6a75",
							"getReserveNormalizedIncome(address)": "d15e0053",
							"getReserveNormalizedVariableDebt(address)": "386497fd",
							"getReservesList()": "d1946dbc",
							"getUserAccountData(address)": "bf92857c",
							"getUserConfiguration(address)": "4417a583",
							"getUserEMode(address)": "eddf1b79",
							"initReserve(address,address,address,address,address)": "7a708e92",
							"liquidationCall(address,address,address,uint256,bool)": "00a718a9",
							"mintToTreasury(address[])": "9cd19996",
							"mintUnbacked(address,uint256,address,uint16)": "69a933a5",
							"rebalanceStableBorrowRate(address,address)": "cd112382",
							"repay(address,uint256,uint256,address)": "573ade81",
							"repayWithATokens(address,uint256,uint256)": "2dad97d4",
							"repayWithPermit(address,uint256,uint256,address,uint256,uint8,bytes32,bytes32)": "ee3e210b",
							"rescueTokens(address,address,uint256)": "cea9d26f",
							"resetIsolationModeTotalDebt(address)": "e43e88a1",
							"setConfiguration(address,(uint256))": "f51e435b",
							"setReserveInterestRateStrategyAddress(address,address)": "1d2118f9",
							"setUserEMode(uint8)": "28530a47",
							"setUserUseReserveAsCollateral(address,bool)": "5a3b74b9",
							"supply(address,uint256,address,uint16)": "617ba037",
							"supplyWithPermit(address,uint256,address,uint16,uint256,uint8,bytes32,bytes32)": "02c205f0",
							"swapBorrowRateMode(address,uint256)": "94ba89a2",
							"updateBridgeProtocolFee(uint256)": "3036b439",
							"updateFlashloanPremiums(uint128,uint128)": "bcb6e522",
							"withdraw(address,uint256,address)": "69328dec"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"backer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"BackUnbacked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum DataTypes.InterestRateMode\",\"name\":\"interestRateMode\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"borrowRate\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"Borrow\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"initiator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum DataTypes.InterestRateMode\",\"name\":\"interestRateMode\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"premium\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"FlashLoan\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalDebt\",\"type\":\"uint256\"}],\"name\":\"IsolationModeTotalDebtUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"collateralAsset\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"debtAsset\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"debtToCover\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidatedCollateralAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"receiveAToken\",\"type\":\"bool\"}],\"name\":\"LiquidationCall\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"MintUnbacked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountMinted\",\"type\":\"uint256\"}],\"name\":\"MintedToTreasury\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"RebalanceStableBorrowRate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"repayer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"useATokens\",\"type\":\"bool\"}],\"name\":\"Repay\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidityRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stableBorrowRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"variableBorrowRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidityIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"variableBorrowIndex\",\"type\":\"uint256\"}],\"name\":\"ReserveDataUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"ReserveUsedAsCollateralDisabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"ReserveUsedAsCollateralEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"Supply\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum DataTypes.InterestRateMode\",\"name\":\"interestRateMode\",\"type\":\"uint8\"}],\"name\":\"SwapBorrowRateMode\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"categoryId\",\"type\":\"uint8\"}],\"name\":\"UserEModeSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADDRESSES_PROVIDER\",\"outputs\":[{\"internalType\":\"contract IPoolAddressesProvider\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BRIDGE_PROTOCOL_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FLASHLOAN_PREMIUM_TOTAL\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FLASHLOAN_PREMIUM_TO_PROTOCOL\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_NUMBER_RESERVES\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_STABLE_RATE_BORROW_SIZE_PERCENT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"backUnbacked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestRateMode\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"}],\"name\":\"borrow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"id\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"ltv\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"liquidationThreshold\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"liquidationBonus\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"priceSource\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"label\",\"type\":\"string\"}],\"internalType\":\"struct DataTypes.EModeCategory\",\"name\":\"config\",\"type\":\"tuple\"}],\"name\":\"configureEModeCategory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"dropReserve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balanceFromBefore\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balanceToBefore\",\"type\":\"uint256\"}],\"name\":\"finalizeTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverAddress\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"interestRateModes\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"flashLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"flashLoanSimple\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getConfiguration\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"data\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.ReserveConfigurationMap\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"id\",\"type\":\"uint8\"}],\"name\":\"getEModeCategoryData\",\"outputs\":[{\"components\":[{\"internalType\":\"uint16\",\"name\":\"ltv\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"liquidationThreshold\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"liquidationBonus\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"priceSource\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"label\",\"type\":\"string\"}],\"internalType\":\"struct DataTypes.EModeCategory\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"id\",\"type\":\"uint16\"}],\"name\":\"getReserveAddressById\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getReserveData\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"data\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.ReserveConfigurationMap\",\"name\":\"configuration\",\"type\":\"tuple\"},{\"internalType\":\"uint128\",\"name\":\"liquidityIndex\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"currentLiquidityRate\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"variableBorrowIndex\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"currentVariableBorrowRate\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"currentStableBorrowRate\",\"type\":\"uint128\"},{\"internalType\":\"uint40\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint40\"},{\"internalType\":\"uint16\",\"name\":\"id\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"aTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"stableDebtTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"variableDebtTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"interestRateStrategyAddress\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"accruedToTreasury\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"unbacked\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"isolationModeTotalDebt\",\"type\":\"uint128\"}],\"internalType\":\"struct DataTypes.ReserveData\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getReserveNormalizedIncome\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getReserveNormalizedVariableDebt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReservesList\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserAccountData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalCollateralBase\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalDebtBase\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"availableBorrowsBase\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentLiquidationThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ltv\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"healthFactor\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserConfiguration\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"data\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.UserConfigurationMap\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserEMode\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"aTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"stableDebtAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"variableDebtAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"interestRateStrategyAddress\",\"type\":\"address\"}],\"name\":\"initReserve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collateralAsset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"debtAsset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"debtToCover\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"receiveAToken\",\"type\":\"bool\"}],\"name\":\"liquidationCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"}],\"name\":\"mintToTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"mintUnbacked\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"rebalanceStableBorrowRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestRateMode\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"}],\"name\":\"repay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestRateMode\",\"type\":\"uint256\"}],\"name\":\"repayWithATokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestRateMode\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"permitV\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"permitR\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"permitS\",\"type\":\"bytes32\"}],\"name\":\"repayWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"rescueTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"resetIsolationModeTotalDebt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"data\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.ReserveConfigurationMap\",\"name\":\"configuration\",\"type\":\"tuple\"}],\"name\":\"setConfiguration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"rateStrategyAddress\",\"type\":\"address\"}],\"name\":\"setReserveInterestRateStrategyAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"categoryId\",\"type\":\"uint8\"}],\"name\":\"setUserEMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useAsCollateral\",\"type\":\"bool\"}],\"name\":\"setUserUseReserveAsCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"supply\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"permitV\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"permitR\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"permitS\",\"type\":\"bytes32\"}],\"name\":\"supplyWithPermit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"interestRateMode\",\"type\":\"uint256\"}],\"name\":\"swapBorrowRateMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bridgeProtocolFee\",\"type\":\"uint256\"}],\"name\":\"updateBridgeProtocolFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"flashLoanPremiumTotal\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"flashLoanPremiumToProtocol\",\"type\":\"uint128\"}],\"name\":\"updateFlashloanPremiums\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Aave\",\"events\":{\"BackUnbacked(address,address,uint256,uint256)\":{\"details\":\"Emitted on backUnbacked()\",\"params\":{\"amount\":\"The amount added as backing\",\"backer\":\"The address paying for the backing\",\"fee\":\"The amount paid in fees\",\"reserve\":\"The address of the underlying asset of the reserve\"}},\"Borrow(address,address,address,uint256,uint8,uint256,uint16)\":{\"details\":\"Emitted on borrow() and flashLoan() when debt needs to be opened\",\"params\":{\"amount\":\"The amount borrowed out\",\"borrowRate\":\"The numeric rate at which the user has borrowed, expressed in ray\",\"interestRateMode\":\"The rate mode: 1 for Stable, 2 for Variable\",\"onBehalfOf\":\"The address that will be getting the debt\",\"referralCode\":\"The referral code used\",\"reserve\":\"The address of the underlying asset being borrowed\",\"user\":\"The address of the user initiating the borrow(), receiving the funds on borrow() or just initiator of the transaction on flashLoan()\"}},\"FlashLoan(address,address,address,uint256,uint8,uint256,uint16)\":{\"details\":\"Emitted on flashLoan()\",\"params\":{\"amount\":\"The amount flash borrowed\",\"asset\":\"The address of the asset being flash borrowed\",\"initiator\":\"The address initiating the flash loan\",\"interestRateMode\":\"The flashloan mode: 0 for regular flashloan, 1 for Stable debt, 2 for Variable debt\",\"premium\":\"The fee flash borrowed\",\"referralCode\":\"The referral code used\",\"target\":\"The address of the flash loan receiver contract\"}},\"IsolationModeTotalDebtUpdated(address,uint256)\":{\"details\":\"Emitted on borrow(), repay() and liquidationCall() when using isolated assets\",\"params\":{\"asset\":\"The address of the underlying asset of the reserve\",\"totalDebt\":\"The total isolation mode debt for the reserve\"}},\"LiquidationCall(address,address,address,uint256,uint256,address,bool)\":{\"details\":\"Emitted when a borrower is liquidated.\",\"params\":{\"collateralAsset\":\"The address of the underlying asset used as collateral, to receive as result of the liquidation\",\"debtAsset\":\"The address of the underlying borrowed asset to be repaid with the liquidation\",\"debtToCover\":\"The debt amount of borrowed `asset` the liquidator wants to cover\",\"liquidatedCollateralAmount\":\"The amount of collateral received by the liquidator\",\"liquidator\":\"The address of the liquidator\",\"receiveAToken\":\"True if the liquidators wants to receive the collateral aTokens, `false` if he wants to receive the underlying collateral asset directly\",\"user\":\"The address of the borrower getting liquidated\"}},\"MintUnbacked(address,address,address,uint256,uint16)\":{\"details\":\"Emitted on mintUnbacked()\",\"params\":{\"amount\":\"The amount of supplied assets\",\"onBehalfOf\":\"The beneficiary of the supplied assets, receiving the aTokens\",\"referralCode\":\"The referral code used\",\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address initiating the supply\"}},\"MintedToTreasury(address,uint256)\":{\"details\":\"Emitted when the protocol treasury receives minted aTokens from the accrued interest.\",\"params\":{\"amountMinted\":\"The amount minted to the treasury\",\"reserve\":\"The address of the reserve\"}},\"RebalanceStableBorrowRate(address,address)\":{\"details\":\"Emitted on rebalanceStableBorrowRate()\",\"params\":{\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address of the user for which the rebalance has been executed\"}},\"Repay(address,address,address,uint256,bool)\":{\"details\":\"Emitted on repay()\",\"params\":{\"amount\":\"The amount repaid\",\"repayer\":\"The address of the user initiating the repay(), providing the funds\",\"reserve\":\"The address of the underlying asset of the reserve\",\"useATokens\":\"True if the repayment is done using aTokens, `false` if done with underlying asset directly\",\"user\":\"The beneficiary of the repayment, getting his debt reduced\"}},\"ReserveDataUpdated(address,uint256,uint256,uint256,uint256,uint256)\":{\"details\":\"Emitted when the state of a reserve is updated.\",\"params\":{\"liquidityIndex\":\"The next liquidity index\",\"liquidityRate\":\"The next liquidity rate\",\"reserve\":\"The address of the underlying asset of the reserve\",\"stableBorrowRate\":\"The next stable borrow rate\",\"variableBorrowIndex\":\"The next variable borrow index\",\"variableBorrowRate\":\"The next variable borrow rate\"}},\"ReserveUsedAsCollateralDisabled(address,address)\":{\"details\":\"Emitted on setUserUseReserveAsCollateral()\",\"params\":{\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address of the user enabling the usage as collateral\"}},\"ReserveUsedAsCollateralEnabled(address,address)\":{\"details\":\"Emitted on setUserUseReserveAsCollateral()\",\"params\":{\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address of the user enabling the usage as collateral\"}},\"Supply(address,address,address,uint256,uint16)\":{\"details\":\"Emitted on supply()\",\"params\":{\"amount\":\"The amount supplied\",\"onBehalfOf\":\"The beneficiary of the supply, receiving the aTokens\",\"referralCode\":\"The referral code used\",\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address initiating the supply\"}},\"SwapBorrowRateMode(address,address,uint8)\":{\"details\":\"Emitted on swapBorrowRateMode()\",\"params\":{\"interestRateMode\":\"The current interest rate mode of the position being swapped: 1 for Stable, 2 for Variable\",\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address of the user swapping his rate mode\"}},\"UserEModeSet(address,uint8)\":{\"details\":\"Emitted when the user selects a certain asset category for eMode\",\"params\":{\"categoryId\":\"The category id\",\"user\":\"The address of the user\"}},\"Withdraw(address,address,address,uint256)\":{\"details\":\"Emitted on withdraw()\",\"params\":{\"amount\":\"The amount to be withdrawn\",\"reserve\":\"The address of the underlying asset being withdrawn\",\"to\":\"The address that will receive the underlying\",\"user\":\"The address initiating the withdrawal, owner of aTokens\"}}},\"kind\":\"dev\",\"methods\":{\"ADDRESSES_PROVIDER()\":{\"returns\":{\"_0\":\"The address of the PoolAddressesProvider\"}},\"BRIDGE_PROTOCOL_FEE()\":{\"returns\":{\"_0\":\"The bridge fee sent to the protocol treasury\"}},\"FLASHLOAN_PREMIUM_TOTAL()\":{\"returns\":{\"_0\":\"The total fee on flashloans\"}},\"FLASHLOAN_PREMIUM_TO_PROTOCOL()\":{\"returns\":{\"_0\":\"The flashloan fee sent to the protocol treasury\"}},\"MAX_NUMBER_RESERVES()\":{\"returns\":{\"_0\":\"The maximum number of reserves supported\"}},\"MAX_STABLE_RATE_BORROW_SIZE_PERCENT()\":{\"returns\":{\"_0\":\"The percentage of available liquidity to borrow, expressed in bps\"}},\"backUnbacked(address,uint256,uint256)\":{\"params\":{\"amount\":\"The amount to back\",\"asset\":\"The address of the underlying asset to back\",\"fee\":\"The amount paid in fees\"},\"returns\":{\"_0\":\"The backed amount\"}},\"borrow(address,uint256,uint256,uint16,address)\":{\"params\":{\"amount\":\"The amount to be borrowed\",\"asset\":\"The address of the underlying asset to borrow\",\"interestRateMode\":\"The interest rate mode at which the user wants to borrow: 1 for Stable, 2 for Variable\",\"onBehalfOf\":\"The address of the user who will receive the debt. Should be the address of the borrower itself calling the function if he wants to borrow against his own collateral, or the address of the credit delegator if he has been given credit delegation allowance\",\"referralCode\":\"The code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man\"}},\"configureEModeCategory(uint8,(uint16,uint16,uint16,address,string))\":{\"details\":\"In eMode, the protocol allows very high borrowing power to borrow assets of the same category. The category 0 is reserved as it's the default for volatile assets\",\"params\":{\"config\":\"The configuration of the category\",\"id\":\"The id of the category\"}},\"deposit(address,uint256,address,uint16)\":{\"details\":\"Deprecated: Use the `supply` function instead\",\"params\":{\"amount\":\"The amount to be supplied\",\"asset\":\"The address of the underlying asset to supply\",\"onBehalfOf\":\"The address that will receive the aTokens, same as msg.sender if the user   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens   is a different wallet\",\"referralCode\":\"Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man\"}},\"dropReserve(address)\":{\"details\":\"Only callable by the PoolConfigurator contract\",\"params\":{\"asset\":\"The address of the underlying asset of the reserve\"}},\"finalizeTransfer(address,address,address,uint256,uint256,uint256)\":{\"details\":\"Only callable by the overlying aToken of the `asset`\",\"params\":{\"amount\":\"The amount being transferred/withdrawn\",\"asset\":\"The address of the underlying asset of the aToken\",\"balanceFromBefore\":\"The aToken balance of the `from` user before the transfer\",\"balanceToBefore\":\"The aToken balance of the `to` user before the transfer\",\"from\":\"The user from which the aTokens are transferred\",\"to\":\"The user receiving the aTokens\"}},\"flashLoan(address,address[],uint256[],uint256[],address,bytes,uint16)\":{\"details\":\"IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept into consideration. For further details please visit https://docs.aave.com/developers/\",\"params\":{\"amounts\":\"The amounts of the assets being flash-borrowed\",\"assets\":\"The addresses of the assets being flash-borrowed\",\"interestRateModes\":\"Types of the debt to open if the flash loan is not returned:   0 -> Don't open any debt, just revert if funds can't be transferred from the receiver   1 -> Open debt at stable rate for the value of the amount flash-borrowed to the `onBehalfOf` address   2 -> Open debt at variable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\",\"onBehalfOf\":\"The address  that will receive the debt in the case of using on `modes` 1 or 2\",\"params\":\"Variadic packed params to pass to the receiver as extra information\",\"receiverAddress\":\"The address of the contract receiving the funds, implementing IFlashLoanReceiver interface\",\"referralCode\":\"The code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man\"}},\"flashLoanSimple(address,address,uint256,bytes,uint16)\":{\"details\":\"IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept into consideration. For further details please visit https://docs.aave.com/developers/\",\"params\":{\"amount\":\"The amount of the asset being flash-borrowed\",\"asset\":\"The address of the asset being flash-borrowed\",\"params\":\"Variadic packed params to pass to the receiver as extra information\",\"receiverAddress\":\"The address of the contract receiving the funds, implementing IFlashLoanSimpleReceiver interface\",\"referralCode\":\"The code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man\"}},\"getConfiguration(address)\":{\"params\":{\"asset\":\"The address of the underlying asset of the reserve\"},\"returns\":{\"_0\":\"The configuration of the reserve\"}},\"getEModeCategoryData(uint8)\":{\"params\":{\"id\":\"The id of the category\"},\"returns\":{\"_0\":\"The configuration data of the category\"}},\"getReserveAddressById(uint16)\":{\"params\":{\"id\":\"The id of the reserve as stored in the DataTypes.ReserveData struct\"},\"returns\":{\"_0\":\"The address of the reserve associated with id\"}},\"getReserveData(address)\":{\"params\":{\"asset\":\"The address of the underlying asset of the reserve\"},\"returns\":{\"_0\":\"The state and configuration data of the reserve\"}},\"getReserveNormalizedIncome(address)\":{\"params\":{\"asset\":\"The address of the underlying asset of the reserve\"},\"returns\":{\"_0\":\"The reserve's normalized income\"}},\"getReserveNormalizedVariableDebt(address)\":{\"details\":\"WARNING: This function is intended to be used primarily by the protocol itself to get a \\\"dynamic\\\" variable index based on time, current stored index and virtual rate at the current moment (approx. a borrower would get if opening a position). This means that is always used in combination with variable debt supply/balances. If using this function externally, consider that is possible to have an increasing normalized variable debt that is not equivalent to how the variable debt index would be updated in storage (e.g. only updates with non-zero variable debt supply)\",\"params\":{\"asset\":\"The address of the underlying asset of the reserve\"},\"returns\":{\"_0\":\"The reserve normalized variable debt\"}},\"getReservesList()\":{\"details\":\"It does not include dropped reserves\",\"returns\":{\"_0\":\"The addresses of the underlying assets of the initialized reserves\"}},\"getUserAccountData(address)\":{\"params\":{\"user\":\"The address of the user\"},\"returns\":{\"availableBorrowsBase\":\"The borrowing power left of the user in the base currency used by the price feed\",\"currentLiquidationThreshold\":\"The liquidation threshold of the user\",\"healthFactor\":\"The current health factor of the user\",\"ltv\":\"The loan to value of The user\",\"totalCollateralBase\":\"The total collateral of the user in the base currency used by the price feed\",\"totalDebtBase\":\"The total debt of the user in the base currency used by the price feed\"}},\"getUserConfiguration(address)\":{\"params\":{\"user\":\"The user address\"},\"returns\":{\"_0\":\"The configuration of the user\"}},\"getUserEMode(address)\":{\"params\":{\"user\":\"The address of the user\"},\"returns\":{\"_0\":\"The eMode id\"}},\"initReserve(address,address,address,address,address)\":{\"details\":\"Only callable by the PoolConfigurator contract\",\"params\":{\"aTokenAddress\":\"The address of the aToken that will be assigned to the reserve\",\"asset\":\"The address of the underlying asset of the reserve\",\"interestRateStrategyAddress\":\"The address of the interest rate strategy contract\",\"stableDebtAddress\":\"The address of the StableDebtToken that will be assigned to the reserve\",\"variableDebtAddress\":\"The address of the VariableDebtToken that will be assigned to the reserve\"}},\"liquidationCall(address,address,address,uint256,bool)\":{\"params\":{\"collateralAsset\":\"The address of the underlying asset used as collateral, to receive as result of the liquidation\",\"debtAsset\":\"The address of the underlying borrowed asset to be repaid with the liquidation\",\"debtToCover\":\"The debt amount of borrowed `asset` the liquidator wants to cover\",\"receiveAToken\":\"True if the liquidators wants to receive the collateral aTokens, `false` if he wants to receive the underlying collateral asset directly\",\"user\":\"The address of the borrower getting liquidated\"}},\"mintToTreasury(address[])\":{\"params\":{\"assets\":\"The list of reserves for which the minting needs to be executed\"}},\"mintUnbacked(address,uint256,address,uint16)\":{\"params\":{\"amount\":\"The amount to mint\",\"asset\":\"The address of the underlying asset to mint\",\"onBehalfOf\":\"The address that will receive the aTokens\",\"referralCode\":\"Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man\"}},\"rebalanceStableBorrowRate(address,address)\":{\"params\":{\"asset\":\"The address of the underlying asset borrowed\",\"user\":\"The address of the user to be rebalanced\"}},\"repay(address,uint256,uint256,address)\":{\"params\":{\"amount\":\"The amount to repay - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\",\"asset\":\"The address of the borrowed underlying asset previously borrowed\",\"interestRateMode\":\"The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\",\"onBehalfOf\":\"The address of the user who will get his debt reduced/removed. Should be the address of the user calling the function if he wants to reduce/remove his own debt, or the address of any other other borrower whose debt should be removed\"},\"returns\":{\"_0\":\"The final amount repaid\"}},\"repayWithATokens(address,uint256,uint256)\":{\"details\":\"Passing uint256.max as amount will clean up any residual aToken dust balance, if the user aToken balance is not enough to cover the whole debt\",\"params\":{\"amount\":\"The amount to repay - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\",\"asset\":\"The address of the borrowed underlying asset previously borrowed\",\"interestRateMode\":\"The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\"},\"returns\":{\"_0\":\"The final amount repaid\"}},\"repayWithPermit(address,uint256,uint256,address,uint256,uint8,bytes32,bytes32)\":{\"params\":{\"amount\":\"The amount to repay - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\",\"asset\":\"The address of the borrowed underlying asset previously borrowed\",\"deadline\":\"The deadline timestamp that the permit is valid\",\"interestRateMode\":\"The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\",\"onBehalfOf\":\"Address of the user who will get his debt reduced/removed. Should be the address of the user calling the function if he wants to reduce/remove his own debt, or the address of any other other borrower whose debt should be removed\",\"permitR\":\"The R parameter of ERC712 permit sig\",\"permitS\":\"The S parameter of ERC712 permit sig\",\"permitV\":\"The V parameter of ERC712 permit sig\"},\"returns\":{\"_0\":\"The final amount repaid\"}},\"rescueTokens(address,address,uint256)\":{\"params\":{\"amount\":\"The amount of token to transfer\",\"to\":\"The address of the recipient\",\"token\":\"The address of the token\"}},\"resetIsolationModeTotalDebt(address)\":{\"details\":\"It requires the given asset has zero debt ceiling\",\"params\":{\"asset\":\"The address of the underlying asset to reset the isolationModeTotalDebt\"}},\"setConfiguration(address,(uint256))\":{\"details\":\"Only callable by the PoolConfigurator contract\",\"params\":{\"asset\":\"The address of the underlying asset of the reserve\",\"configuration\":\"The new configuration bitmap\"}},\"setReserveInterestRateStrategyAddress(address,address)\":{\"details\":\"Only callable by the PoolConfigurator contract\",\"params\":{\"asset\":\"The address of the underlying asset of the reserve\",\"rateStrategyAddress\":\"The address of the interest rate strategy contract\"}},\"setUserEMode(uint8)\":{\"params\":{\"categoryId\":\"The id of the category\"}},\"setUserUseReserveAsCollateral(address,bool)\":{\"params\":{\"asset\":\"The address of the underlying asset supplied\",\"useAsCollateral\":\"True if the user wants to use the supply as collateral, false otherwise\"}},\"supply(address,uint256,address,uint16)\":{\"params\":{\"amount\":\"The amount to be supplied\",\"asset\":\"The address of the underlying asset to supply\",\"onBehalfOf\":\"The address that will receive the aTokens, same as msg.sender if the user   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens   is a different wallet\",\"referralCode\":\"Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man\"}},\"supplyWithPermit(address,uint256,address,uint16,uint256,uint8,bytes32,bytes32)\":{\"params\":{\"amount\":\"The amount to be supplied\",\"asset\":\"The address of the underlying asset to supply\",\"deadline\":\"The deadline timestamp that the permit is valid\",\"onBehalfOf\":\"The address that will receive the aTokens, same as msg.sender if the user   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens   is a different wallet\",\"permitR\":\"The R parameter of ERC712 permit sig\",\"permitS\":\"The S parameter of ERC712 permit sig\",\"permitV\":\"The V parameter of ERC712 permit sig\",\"referralCode\":\"Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man\"}},\"swapBorrowRateMode(address,uint256)\":{\"params\":{\"asset\":\"The address of the underlying asset borrowed\",\"interestRateMode\":\"The current interest rate mode of the position being swapped: 1 for Stable, 2 for Variable\"}},\"updateBridgeProtocolFee(uint256)\":{\"params\":{\"bridgeProtocolFee\":\"The part of the premium sent to the protocol treasury\"}},\"updateFlashloanPremiums(uint128,uint128)\":{\"details\":\"The total premium is calculated on the total borrowed amountThe premium to protocol is calculated on the total premium, being a percentage of `flashLoanPremiumTotal`Only callable by the PoolConfigurator contract\",\"params\":{\"flashLoanPremiumToProtocol\":\"The part of the premium sent to the protocol treasury, expressed in bps\",\"flashLoanPremiumTotal\":\"The total premium, expressed in bps\"}},\"withdraw(address,uint256,address)\":{\"params\":{\"amount\":\"The underlying amount to be withdrawn   - Send the value type(uint256).max in order to withdraw the whole aToken balance\",\"asset\":\"The address of the underlying asset to withdraw\",\"to\":\"The address that will receive the underlying, same as msg.sender if the user   wants to receive it on his own wallet, or a different address if the beneficiary is a   different wallet\"},\"returns\":{\"_0\":\"The final amount withdrawn\"}}},\"title\":\"IPool\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"ADDRESSES_PROVIDER()\":{\"notice\":\"Returns the PoolAddressesProvider connected to this contract\"},\"BRIDGE_PROTOCOL_FEE()\":{\"notice\":\"Returns the part of the bridge fees sent to protocol\"},\"FLASHLOAN_PREMIUM_TOTAL()\":{\"notice\":\"Returns the total fee on flash loans\"},\"FLASHLOAN_PREMIUM_TO_PROTOCOL()\":{\"notice\":\"Returns the part of the flashloan fees sent to protocol\"},\"MAX_NUMBER_RESERVES()\":{\"notice\":\"Returns the maximum number of reserves supported to be listed in this Pool\"},\"MAX_STABLE_RATE_BORROW_SIZE_PERCENT()\":{\"notice\":\"Returns the percentage of available liquidity that can be borrowed at once at stable rate\"},\"backUnbacked(address,uint256,uint256)\":{\"notice\":\"Back the current unbacked underlying with `amount` and pay `fee`.\"},\"borrow(address,uint256,uint256,uint16,address)\":{\"notice\":\"Allows users to borrow a specific `amount` of the reserve underlying asset, provided that the borrower already supplied enough collateral, or he was given enough allowance by a credit delegator on the corresponding debt token (StableDebtToken or VariableDebtToken) - E.g. User borrows 100 USDC passing as `onBehalfOf` his own address, receiving the 100 USDC in his wallet   and 100 stable/variable debt tokens, depending on the `interestRateMode`\"},\"configureEModeCategory(uint8,(uint16,uint16,uint16,address,string))\":{\"notice\":\"Configures a new category for the eMode.\"},\"deposit(address,uint256,address,uint16)\":{\"notice\":\"Supplies an `amount` of underlying asset into the reserve, receiving in return overlying aTokens. - E.g. User supplies 100 USDC and gets in return 100 aUSDC\"},\"dropReserve(address)\":{\"notice\":\"Drop a reserve\"},\"finalizeTransfer(address,address,address,uint256,uint256,uint256)\":{\"notice\":\"Validates and finalizes an aToken transfer\"},\"flashLoan(address,address[],uint256[],uint256[],address,bytes,uint16)\":{\"notice\":\"Allows smartcontracts to access the liquidity of the pool within one transaction, as long as the amount taken plus a fee is returned.\"},\"flashLoanSimple(address,address,uint256,bytes,uint16)\":{\"notice\":\"Allows smartcontracts to access the liquidity of the pool within one transaction, as long as the amount taken plus a fee is returned.\"},\"getConfiguration(address)\":{\"notice\":\"Returns the configuration of the reserve\"},\"getEModeCategoryData(uint8)\":{\"notice\":\"Returns the data of an eMode category\"},\"getReserveAddressById(uint16)\":{\"notice\":\"Returns the address of the underlying asset of a reserve by the reserve id as stored in the DataTypes.ReserveData struct\"},\"getReserveData(address)\":{\"notice\":\"Returns the state and configuration of the reserve\"},\"getReserveNormalizedIncome(address)\":{\"notice\":\"Returns the normalized income of the reserve\"},\"getReserveNormalizedVariableDebt(address)\":{\"notice\":\"Returns the normalized variable debt per unit of asset\"},\"getReservesList()\":{\"notice\":\"Returns the list of the underlying assets of all the initialized reserves\"},\"getUserAccountData(address)\":{\"notice\":\"Returns the user account data across all the reserves\"},\"getUserConfiguration(address)\":{\"notice\":\"Returns the configuration of the user across all the reserves\"},\"getUserEMode(address)\":{\"notice\":\"Returns the eMode the user is using\"},\"initReserve(address,address,address,address,address)\":{\"notice\":\"Initializes a reserve, activating it, assigning an aToken and debt tokens and an interest rate strategy\"},\"liquidationCall(address,address,address,uint256,bool)\":{\"notice\":\"Function to liquidate a non-healthy position collateral-wise, with Health Factor below 1 - The caller (liquidator) covers `debtToCover` amount of debt of the user getting liquidated, and receives   a proportionally amount of the `collateralAsset` plus a bonus to cover market risk\"},\"mintToTreasury(address[])\":{\"notice\":\"Mints the assets accrued through the reserve factor to the treasury in the form of aTokens\"},\"mintUnbacked(address,uint256,address,uint16)\":{\"notice\":\"Mints an `amount` of aTokens to the `onBehalfOf`\"},\"rebalanceStableBorrowRate(address,address)\":{\"notice\":\"Rebalances the stable interest rate of a user to the current stable rate defined on the reserve. - Users can be rebalanced if the following conditions are satisfied:     1. Usage ratio is above 95%     2. the current supply APY is below REBALANCE_UP_THRESHOLD * maxVariableBorrowRate, which means that too        much has been borrowed at a stable rate and suppliers are not earning enough\"},\"repay(address,uint256,uint256,address)\":{\"notice\":\"Repays a borrowed `amount` on a specific reserve, burning the equivalent debt tokens owned - E.g. User repays 100 USDC, burning 100 variable/stable debt tokens of the `onBehalfOf` address\"},\"repayWithATokens(address,uint256,uint256)\":{\"notice\":\"Repays a borrowed `amount` on a specific reserve using the reserve aTokens, burning the equivalent debt tokens - E.g. User repays 100 USDC using 100 aUSDC, burning 100 variable/stable debt tokens\"},\"repayWithPermit(address,uint256,uint256,address,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Repay with transfer approval of asset to be repaid done via permit function see: https://eips.ethereum.org/EIPS/eip-2612 and https://eips.ethereum.org/EIPS/eip-713\"},\"rescueTokens(address,address,uint256)\":{\"notice\":\"Rescue and transfer tokens locked in this contract\"},\"resetIsolationModeTotalDebt(address)\":{\"notice\":\"Resets the isolation mode total debt of the given asset to zero\"},\"setConfiguration(address,(uint256))\":{\"notice\":\"Sets the configuration bitmap of the reserve as a whole\"},\"setReserveInterestRateStrategyAddress(address,address)\":{\"notice\":\"Updates the address of the interest rate strategy contract\"},\"setUserEMode(uint8)\":{\"notice\":\"Allows a user to use the protocol in eMode\"},\"setUserUseReserveAsCollateral(address,bool)\":{\"notice\":\"Allows suppliers to enable/disable a specific supplied asset as collateral\"},\"supply(address,uint256,address,uint16)\":{\"notice\":\"Supplies an `amount` of underlying asset into the reserve, receiving in return overlying aTokens. - E.g. User supplies 100 USDC and gets in return 100 aUSDC\"},\"supplyWithPermit(address,uint256,address,uint16,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Supply with transfer approval of asset to be supplied done via permit function see: https://eips.ethereum.org/EIPS/eip-2612 and https://eips.ethereum.org/EIPS/eip-713\"},\"swapBorrowRateMode(address,uint256)\":{\"notice\":\"Allows a borrower to swap his debt between stable and variable mode, or vice versa\"},\"updateBridgeProtocolFee(uint256)\":{\"notice\":\"Updates the protocol fee on the bridging\"},\"updateFlashloanPremiums(uint128,uint128)\":{\"notice\":\"Updates flash loan premiums. Flash loan premium consists of two parts: - A part is sent to aToken holders as extra, one time accumulated interest - A part is collected by the protocol treasury\"},\"withdraw(address,uint256,address)\":{\"notice\":\"Withdraws an `amount` of underlying asset from the reserve, burning the equivalent aTokens owned E.g. User has 100 aUSDC, calls withdraw() and receives 100 USDC, burning the 100 aUSDC\"}},\"notice\":\"Defines the basic interface for an Aave Pool.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@aave/core-v3/contracts/interfaces/IPool.sol\":\"IPool\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@aave/core-v3/contracts/interfaces/IPool.sol\":{\"keccak256\":\"0xbfd2077251c8dc766a56d45f4b03eb07f3441323e79c0f794efea3657a99747f\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://c6ff6221de0ea877932c73c0b99d3e4535f293053ae44f9f9d6b9d265e9af2f6\",\"dweb:/ipfs/QmSTaEKrhz1xNVnx4oBzWw8DenYPShVzJoP1A9GTEWkAzX\"]},\"@aave/core-v3/contracts/interfaces/IPoolAddressesProvider.sol\":{\"keccak256\":\"0x33d4308d9407b4ee2297fc4ba5acce1a96a6c658189e2778a4f6b90e032fb3b5\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://978336a2a40229ccc7749344be890862ea12e17e9fffe5bb977ba3841de07b5a\",\"dweb:/ipfs/QmScNrQfDSPg1afJmkCty6fZkETUrWTmEXWeTmHoe7mSqa\"]},\"@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol\":{\"keccak256\":\"0x771cb99fd8519c974f7e12130387c4d9a997a6e8d0ac10e4303b842fe53efa88\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://0f41689d1d58bc13678c749bae8830f5a8b19b89cd135e962bf07d483350f828\",\"dweb:/ipfs/QmQSNGDxjYGqT1GU2CZzsWUTNcAtcfkg1jDGTH516nCAfN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"ADDRESSES_PROVIDER()": {
								"notice": "Returns the PoolAddressesProvider connected to this contract"
							},
							"BRIDGE_PROTOCOL_FEE()": {
								"notice": "Returns the part of the bridge fees sent to protocol"
							},
							"FLASHLOAN_PREMIUM_TOTAL()": {
								"notice": "Returns the total fee on flash loans"
							},
							"FLASHLOAN_PREMIUM_TO_PROTOCOL()": {
								"notice": "Returns the part of the flashloan fees sent to protocol"
							},
							"MAX_NUMBER_RESERVES()": {
								"notice": "Returns the maximum number of reserves supported to be listed in this Pool"
							},
							"MAX_STABLE_RATE_BORROW_SIZE_PERCENT()": {
								"notice": "Returns the percentage of available liquidity that can be borrowed at once at stable rate"
							},
							"backUnbacked(address,uint256,uint256)": {
								"notice": "Back the current unbacked underlying with `amount` and pay `fee`."
							},
							"borrow(address,uint256,uint256,uint16,address)": {
								"notice": "Allows users to borrow a specific `amount` of the reserve underlying asset, provided that the borrower already supplied enough collateral, or he was given enough allowance by a credit delegator on the corresponding debt token (StableDebtToken or VariableDebtToken) - E.g. User borrows 100 USDC passing as `onBehalfOf` his own address, receiving the 100 USDC in his wallet   and 100 stable/variable debt tokens, depending on the `interestRateMode`"
							},
							"configureEModeCategory(uint8,(uint16,uint16,uint16,address,string))": {
								"notice": "Configures a new category for the eMode."
							},
							"deposit(address,uint256,address,uint16)": {
								"notice": "Supplies an `amount` of underlying asset into the reserve, receiving in return overlying aTokens. - E.g. User supplies 100 USDC and gets in return 100 aUSDC"
							},
							"dropReserve(address)": {
								"notice": "Drop a reserve"
							},
							"finalizeTransfer(address,address,address,uint256,uint256,uint256)": {
								"notice": "Validates and finalizes an aToken transfer"
							},
							"flashLoan(address,address[],uint256[],uint256[],address,bytes,uint16)": {
								"notice": "Allows smartcontracts to access the liquidity of the pool within one transaction, as long as the amount taken plus a fee is returned."
							},
							"flashLoanSimple(address,address,uint256,bytes,uint16)": {
								"notice": "Allows smartcontracts to access the liquidity of the pool within one transaction, as long as the amount taken plus a fee is returned."
							},
							"getConfiguration(address)": {
								"notice": "Returns the configuration of the reserve"
							},
							"getEModeCategoryData(uint8)": {
								"notice": "Returns the data of an eMode category"
							},
							"getReserveAddressById(uint16)": {
								"notice": "Returns the address of the underlying asset of a reserve by the reserve id as stored in the DataTypes.ReserveData struct"
							},
							"getReserveData(address)": {
								"notice": "Returns the state and configuration of the reserve"
							},
							"getReserveNormalizedIncome(address)": {
								"notice": "Returns the normalized income of the reserve"
							},
							"getReserveNormalizedVariableDebt(address)": {
								"notice": "Returns the normalized variable debt per unit of asset"
							},
							"getReservesList()": {
								"notice": "Returns the list of the underlying assets of all the initialized reserves"
							},
							"getUserAccountData(address)": {
								"notice": "Returns the user account data across all the reserves"
							},
							"getUserConfiguration(address)": {
								"notice": "Returns the configuration of the user across all the reserves"
							},
							"getUserEMode(address)": {
								"notice": "Returns the eMode the user is using"
							},
							"initReserve(address,address,address,address,address)": {
								"notice": "Initializes a reserve, activating it, assigning an aToken and debt tokens and an interest rate strategy"
							},
							"liquidationCall(address,address,address,uint256,bool)": {
								"notice": "Function to liquidate a non-healthy position collateral-wise, with Health Factor below 1 - The caller (liquidator) covers `debtToCover` amount of debt of the user getting liquidated, and receives   a proportionally amount of the `collateralAsset` plus a bonus to cover market risk"
							},
							"mintToTreasury(address[])": {
								"notice": "Mints the assets accrued through the reserve factor to the treasury in the form of aTokens"
							},
							"mintUnbacked(address,uint256,address,uint16)": {
								"notice": "Mints an `amount` of aTokens to the `onBehalfOf`"
							},
							"rebalanceStableBorrowRate(address,address)": {
								"notice": "Rebalances the stable interest rate of a user to the current stable rate defined on the reserve. - Users can be rebalanced if the following conditions are satisfied:     1. Usage ratio is above 95%     2. the current supply APY is below REBALANCE_UP_THRESHOLD * maxVariableBorrowRate, which means that too        much has been borrowed at a stable rate and suppliers are not earning enough"
							},
							"repay(address,uint256,uint256,address)": {
								"notice": "Repays a borrowed `amount` on a specific reserve, burning the equivalent debt tokens owned - E.g. User repays 100 USDC, burning 100 variable/stable debt tokens of the `onBehalfOf` address"
							},
							"repayWithATokens(address,uint256,uint256)": {
								"notice": "Repays a borrowed `amount` on a specific reserve using the reserve aTokens, burning the equivalent debt tokens - E.g. User repays 100 USDC using 100 aUSDC, burning 100 variable/stable debt tokens"
							},
							"repayWithPermit(address,uint256,uint256,address,uint256,uint8,bytes32,bytes32)": {
								"notice": "Repay with transfer approval of asset to be repaid done via permit function see: https://eips.ethereum.org/EIPS/eip-2612 and https://eips.ethereum.org/EIPS/eip-713"
							},
							"rescueTokens(address,address,uint256)": {
								"notice": "Rescue and transfer tokens locked in this contract"
							},
							"resetIsolationModeTotalDebt(address)": {
								"notice": "Resets the isolation mode total debt of the given asset to zero"
							},
							"setConfiguration(address,(uint256))": {
								"notice": "Sets the configuration bitmap of the reserve as a whole"
							},
							"setReserveInterestRateStrategyAddress(address,address)": {
								"notice": "Updates the address of the interest rate strategy contract"
							},
							"setUserEMode(uint8)": {
								"notice": "Allows a user to use the protocol in eMode"
							},
							"setUserUseReserveAsCollateral(address,bool)": {
								"notice": "Allows suppliers to enable/disable a specific supplied asset as collateral"
							},
							"supply(address,uint256,address,uint16)": {
								"notice": "Supplies an `amount` of underlying asset into the reserve, receiving in return overlying aTokens. - E.g. User supplies 100 USDC and gets in return 100 aUSDC"
							},
							"supplyWithPermit(address,uint256,address,uint16,uint256,uint8,bytes32,bytes32)": {
								"notice": "Supply with transfer approval of asset to be supplied done via permit function see: https://eips.ethereum.org/EIPS/eip-2612 and https://eips.ethereum.org/EIPS/eip-713"
							},
							"swapBorrowRateMode(address,uint256)": {
								"notice": "Allows a borrower to swap his debt between stable and variable mode, or vice versa"
							},
							"updateBridgeProtocolFee(uint256)": {
								"notice": "Updates the protocol fee on the bridging"
							},
							"updateFlashloanPremiums(uint128,uint128)": {
								"notice": "Updates flash loan premiums. Flash loan premium consists of two parts: - A part is sent to aToken holders as extra, one time accumulated interest - A part is collected by the protocol treasury"
							},
							"withdraw(address,uint256,address)": {
								"notice": "Withdraws an `amount` of underlying asset from the reserve, burning the equivalent aTokens owned E.g. User has 100 aUSDC, calls withdraw() and receives 100 USDC, burning the 100 aUSDC"
							}
						},
						"notice": "Defines the basic interface for an Aave Pool.",
						"version": 1
					}
				}
			},
			"@aave/core-v3/contracts/interfaces/IPoolAddressesProvider.sol": {
				"IPoolAddressesProvider": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "oldAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "ACLAdminUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "oldAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "ACLManagerUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "oldAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "AddressSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "proxyAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "oldImplementationAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newImplementationAddress",
									"type": "address"
								}
							],
							"name": "AddressSetAsProxy",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "string",
									"name": "oldMarketId",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "string",
									"name": "newMarketId",
									"type": "string"
								}
							],
							"name": "MarketIdSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "oldAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "PoolConfiguratorUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "oldAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "PoolDataProviderUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "oldAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "PoolUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "oldAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "PriceOracleSentinelUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "oldAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "PriceOracleUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "proxyAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementationAddress",
									"type": "address"
								}
							],
							"name": "ProxyCreated",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "getACLAdmin",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getACLManager",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								}
							],
							"name": "getAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getMarketId",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPool",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPoolConfigurator",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPoolDataProvider",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPriceOracle",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPriceOracleSentinel",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newAclAdmin",
									"type": "address"
								}
							],
							"name": "setACLAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newAclManager",
									"type": "address"
								}
							],
							"name": "setACLManager",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "setAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "newImplementationAddress",
									"type": "address"
								}
							],
							"name": "setAddressAsProxy",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "newMarketId",
									"type": "string"
								}
							],
							"name": "setMarketId",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newPoolConfiguratorImpl",
									"type": "address"
								}
							],
							"name": "setPoolConfiguratorImpl",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newDataProvider",
									"type": "address"
								}
							],
							"name": "setPoolDataProvider",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newPoolImpl",
									"type": "address"
								}
							],
							"name": "setPoolImpl",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newPriceOracle",
									"type": "address"
								}
							],
							"name": "setPriceOracle",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newPriceOracleSentinel",
									"type": "address"
								}
							],
							"name": "setPriceOracleSentinel",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Aave",
						"events": {
							"ACLAdminUpdated(address,address)": {
								"details": "Emitted when the ACL admin is updated.",
								"params": {
									"newAddress": "The new address of the ACLAdmin",
									"oldAddress": "The old address of the ACLAdmin"
								}
							},
							"ACLManagerUpdated(address,address)": {
								"details": "Emitted when the ACL manager is updated.",
								"params": {
									"newAddress": "The new address of the ACLManager",
									"oldAddress": "The old address of the ACLManager"
								}
							},
							"AddressSet(bytes32,address,address)": {
								"details": "Emitted when a new non-proxied contract address is registered.",
								"params": {
									"id": "The identifier of the contract",
									"newAddress": "The address of the new contract",
									"oldAddress": "The address of the old contract"
								}
							},
							"AddressSetAsProxy(bytes32,address,address,address)": {
								"details": "Emitted when the implementation of the proxy registered with id is updated",
								"params": {
									"id": "The identifier of the contract",
									"newImplementationAddress": "The address of the new implementation contract",
									"oldImplementationAddress": "The address of the old implementation contract",
									"proxyAddress": "The address of the proxy contract"
								}
							},
							"MarketIdSet(string,string)": {
								"details": "Emitted when the market identifier is updated.",
								"params": {
									"newMarketId": "The new id of the market",
									"oldMarketId": "The old id of the market"
								}
							},
							"PoolConfiguratorUpdated(address,address)": {
								"details": "Emitted when the pool configurator is updated.",
								"params": {
									"newAddress": "The new address of the PoolConfigurator",
									"oldAddress": "The old address of the PoolConfigurator"
								}
							},
							"PoolDataProviderUpdated(address,address)": {
								"details": "Emitted when the pool data provider is updated.",
								"params": {
									"newAddress": "The new address of the PoolDataProvider",
									"oldAddress": "The old address of the PoolDataProvider"
								}
							},
							"PoolUpdated(address,address)": {
								"details": "Emitted when the pool is updated.",
								"params": {
									"newAddress": "The new address of the Pool",
									"oldAddress": "The old address of the Pool"
								}
							},
							"PriceOracleSentinelUpdated(address,address)": {
								"details": "Emitted when the price oracle sentinel is updated.",
								"params": {
									"newAddress": "The new address of the PriceOracleSentinel",
									"oldAddress": "The old address of the PriceOracleSentinel"
								}
							},
							"PriceOracleUpdated(address,address)": {
								"details": "Emitted when the price oracle is updated.",
								"params": {
									"newAddress": "The new address of the PriceOracle",
									"oldAddress": "The old address of the PriceOracle"
								}
							},
							"ProxyCreated(bytes32,address,address)": {
								"details": "Emitted when a new proxy is created.",
								"params": {
									"id": "The identifier of the proxy",
									"implementationAddress": "The address of the implementation contract",
									"proxyAddress": "The address of the created proxy contract"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"getACLAdmin()": {
								"returns": {
									"_0": "The address of the ACL admin"
								}
							},
							"getACLManager()": {
								"returns": {
									"_0": "The address of the ACLManager"
								}
							},
							"getAddress(bytes32)": {
								"details": "The returned address might be an EOA or a contract, potentially proxiedIt returns ZERO if there is no registered address with the given id",
								"params": {
									"id": "The id"
								},
								"returns": {
									"_0": "The address of the registered for the specified id"
								}
							},
							"getMarketId()": {
								"returns": {
									"_0": "The market id"
								}
							},
							"getPool()": {
								"returns": {
									"_0": "The Pool proxy address"
								}
							},
							"getPoolConfigurator()": {
								"returns": {
									"_0": "The PoolConfigurator proxy address"
								}
							},
							"getPoolDataProvider()": {
								"returns": {
									"_0": "The address of the DataProvider"
								}
							},
							"getPriceOracle()": {
								"returns": {
									"_0": "The address of the PriceOracle"
								}
							},
							"getPriceOracleSentinel()": {
								"returns": {
									"_0": "The address of the PriceOracleSentinel"
								}
							},
							"setACLAdmin(address)": {
								"params": {
									"newAclAdmin": "The address of the new ACL admin"
								}
							},
							"setACLManager(address)": {
								"params": {
									"newAclManager": "The address of the new ACLManager"
								}
							},
							"setAddress(bytes32,address)": {
								"details": "IMPORTANT Use this function carefully, as it will do a hard replacement",
								"params": {
									"id": "The id",
									"newAddress": "The address to set"
								}
							},
							"setAddressAsProxy(bytes32,address)": {
								"details": "IMPORTANT Use this function carefully, only for ids that don't have an explicit setter function, in order to avoid unexpected consequences",
								"params": {
									"id": "The id",
									"newImplementationAddress": "The address of the new implementation"
								}
							},
							"setMarketId(string)": {
								"details": "This can be used to create an onchain registry of PoolAddressesProviders to identify and validate multiple Aave markets.",
								"params": {
									"newMarketId": "The market id"
								}
							},
							"setPoolConfiguratorImpl(address)": {
								"params": {
									"newPoolConfiguratorImpl": "The new PoolConfigurator implementation"
								}
							},
							"setPoolDataProvider(address)": {
								"params": {
									"newDataProvider": "The address of the new DataProvider"
								}
							},
							"setPoolImpl(address)": {
								"params": {
									"newPoolImpl": "The new Pool implementation"
								}
							},
							"setPriceOracle(address)": {
								"params": {
									"newPriceOracle": "The address of the new PriceOracle"
								}
							},
							"setPriceOracleSentinel(address)": {
								"params": {
									"newPriceOracleSentinel": "The address of the new PriceOracleSentinel"
								}
							}
						},
						"title": "IPoolAddressesProvider",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getACLAdmin()": "0e67178c",
							"getACLManager()": "707cd716",
							"getAddress(bytes32)": "21f8a721",
							"getMarketId()": "568ef470",
							"getPool()": "026b1d5f",
							"getPoolConfigurator()": "631adfca",
							"getPoolDataProvider()": "e860accb",
							"getPriceOracle()": "fca513a8",
							"getPriceOracleSentinel()": "5eb88d3d",
							"setACLAdmin(address)": "76d84ffc",
							"setACLManager(address)": "ed301ca9",
							"setAddress(bytes32,address)": "ca446dd9",
							"setAddressAsProxy(bytes32,address)": "5dcc528c",
							"setMarketId(string)": "f67b1847",
							"setPoolConfiguratorImpl(address)": "e4ca28b7",
							"setPoolDataProvider(address)": "e44e9ed1",
							"setPoolImpl(address)": "a1564406",
							"setPriceOracle(address)": "530e784f",
							"setPriceOracleSentinel(address)": "74944cec"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"ACLAdminUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"ACLManagerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"AddressSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proxyAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldImplementationAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newImplementationAddress\",\"type\":\"address\"}],\"name\":\"AddressSetAsProxy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"oldMarketId\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"newMarketId\",\"type\":\"string\"}],\"name\":\"MarketIdSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"PoolConfiguratorUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"PoolDataProviderUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"PoolUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"PriceOracleSentinelUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"PriceOracleUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proxyAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementationAddress\",\"type\":\"address\"}],\"name\":\"ProxyCreated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getACLAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getACLManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"getAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMarketId\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolConfigurator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolDataProvider\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceOracleSentinel\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAclAdmin\",\"type\":\"address\"}],\"name\":\"setACLAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAclManager\",\"type\":\"address\"}],\"name\":\"setACLManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"setAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"newImplementationAddress\",\"type\":\"address\"}],\"name\":\"setAddressAsProxy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newMarketId\",\"type\":\"string\"}],\"name\":\"setMarketId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPoolConfiguratorImpl\",\"type\":\"address\"}],\"name\":\"setPoolConfiguratorImpl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newDataProvider\",\"type\":\"address\"}],\"name\":\"setPoolDataProvider\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPoolImpl\",\"type\":\"address\"}],\"name\":\"setPoolImpl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPriceOracle\",\"type\":\"address\"}],\"name\":\"setPriceOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPriceOracleSentinel\",\"type\":\"address\"}],\"name\":\"setPriceOracleSentinel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Aave\",\"events\":{\"ACLAdminUpdated(address,address)\":{\"details\":\"Emitted when the ACL admin is updated.\",\"params\":{\"newAddress\":\"The new address of the ACLAdmin\",\"oldAddress\":\"The old address of the ACLAdmin\"}},\"ACLManagerUpdated(address,address)\":{\"details\":\"Emitted when the ACL manager is updated.\",\"params\":{\"newAddress\":\"The new address of the ACLManager\",\"oldAddress\":\"The old address of the ACLManager\"}},\"AddressSet(bytes32,address,address)\":{\"details\":\"Emitted when a new non-proxied contract address is registered.\",\"params\":{\"id\":\"The identifier of the contract\",\"newAddress\":\"The address of the new contract\",\"oldAddress\":\"The address of the old contract\"}},\"AddressSetAsProxy(bytes32,address,address,address)\":{\"details\":\"Emitted when the implementation of the proxy registered with id is updated\",\"params\":{\"id\":\"The identifier of the contract\",\"newImplementationAddress\":\"The address of the new implementation contract\",\"oldImplementationAddress\":\"The address of the old implementation contract\",\"proxyAddress\":\"The address of the proxy contract\"}},\"MarketIdSet(string,string)\":{\"details\":\"Emitted when the market identifier is updated.\",\"params\":{\"newMarketId\":\"The new id of the market\",\"oldMarketId\":\"The old id of the market\"}},\"PoolConfiguratorUpdated(address,address)\":{\"details\":\"Emitted when the pool configurator is updated.\",\"params\":{\"newAddress\":\"The new address of the PoolConfigurator\",\"oldAddress\":\"The old address of the PoolConfigurator\"}},\"PoolDataProviderUpdated(address,address)\":{\"details\":\"Emitted when the pool data provider is updated.\",\"params\":{\"newAddress\":\"The new address of the PoolDataProvider\",\"oldAddress\":\"The old address of the PoolDataProvider\"}},\"PoolUpdated(address,address)\":{\"details\":\"Emitted when the pool is updated.\",\"params\":{\"newAddress\":\"The new address of the Pool\",\"oldAddress\":\"The old address of the Pool\"}},\"PriceOracleSentinelUpdated(address,address)\":{\"details\":\"Emitted when the price oracle sentinel is updated.\",\"params\":{\"newAddress\":\"The new address of the PriceOracleSentinel\",\"oldAddress\":\"The old address of the PriceOracleSentinel\"}},\"PriceOracleUpdated(address,address)\":{\"details\":\"Emitted when the price oracle is updated.\",\"params\":{\"newAddress\":\"The new address of the PriceOracle\",\"oldAddress\":\"The old address of the PriceOracle\"}},\"ProxyCreated(bytes32,address,address)\":{\"details\":\"Emitted when a new proxy is created.\",\"params\":{\"id\":\"The identifier of the proxy\",\"implementationAddress\":\"The address of the implementation contract\",\"proxyAddress\":\"The address of the created proxy contract\"}}},\"kind\":\"dev\",\"methods\":{\"getACLAdmin()\":{\"returns\":{\"_0\":\"The address of the ACL admin\"}},\"getACLManager()\":{\"returns\":{\"_0\":\"The address of the ACLManager\"}},\"getAddress(bytes32)\":{\"details\":\"The returned address might be an EOA or a contract, potentially proxiedIt returns ZERO if there is no registered address with the given id\",\"params\":{\"id\":\"The id\"},\"returns\":{\"_0\":\"The address of the registered for the specified id\"}},\"getMarketId()\":{\"returns\":{\"_0\":\"The market id\"}},\"getPool()\":{\"returns\":{\"_0\":\"The Pool proxy address\"}},\"getPoolConfigurator()\":{\"returns\":{\"_0\":\"The PoolConfigurator proxy address\"}},\"getPoolDataProvider()\":{\"returns\":{\"_0\":\"The address of the DataProvider\"}},\"getPriceOracle()\":{\"returns\":{\"_0\":\"The address of the PriceOracle\"}},\"getPriceOracleSentinel()\":{\"returns\":{\"_0\":\"The address of the PriceOracleSentinel\"}},\"setACLAdmin(address)\":{\"params\":{\"newAclAdmin\":\"The address of the new ACL admin\"}},\"setACLManager(address)\":{\"params\":{\"newAclManager\":\"The address of the new ACLManager\"}},\"setAddress(bytes32,address)\":{\"details\":\"IMPORTANT Use this function carefully, as it will do a hard replacement\",\"params\":{\"id\":\"The id\",\"newAddress\":\"The address to set\"}},\"setAddressAsProxy(bytes32,address)\":{\"details\":\"IMPORTANT Use this function carefully, only for ids that don't have an explicit setter function, in order to avoid unexpected consequences\",\"params\":{\"id\":\"The id\",\"newImplementationAddress\":\"The address of the new implementation\"}},\"setMarketId(string)\":{\"details\":\"This can be used to create an onchain registry of PoolAddressesProviders to identify and validate multiple Aave markets.\",\"params\":{\"newMarketId\":\"The market id\"}},\"setPoolConfiguratorImpl(address)\":{\"params\":{\"newPoolConfiguratorImpl\":\"The new PoolConfigurator implementation\"}},\"setPoolDataProvider(address)\":{\"params\":{\"newDataProvider\":\"The address of the new DataProvider\"}},\"setPoolImpl(address)\":{\"params\":{\"newPoolImpl\":\"The new Pool implementation\"}},\"setPriceOracle(address)\":{\"params\":{\"newPriceOracle\":\"The address of the new PriceOracle\"}},\"setPriceOracleSentinel(address)\":{\"params\":{\"newPriceOracleSentinel\":\"The address of the new PriceOracleSentinel\"}}},\"title\":\"IPoolAddressesProvider\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getACLAdmin()\":{\"notice\":\"Returns the address of the ACL admin.\"},\"getACLManager()\":{\"notice\":\"Returns the address of the ACL manager.\"},\"getAddress(bytes32)\":{\"notice\":\"Returns an address by its identifier.\"},\"getMarketId()\":{\"notice\":\"Returns the id of the Aave market to which this contract points to.\"},\"getPool()\":{\"notice\":\"Returns the address of the Pool proxy.\"},\"getPoolConfigurator()\":{\"notice\":\"Returns the address of the PoolConfigurator proxy.\"},\"getPoolDataProvider()\":{\"notice\":\"Returns the address of the data provider.\"},\"getPriceOracle()\":{\"notice\":\"Returns the address of the price oracle.\"},\"getPriceOracleSentinel()\":{\"notice\":\"Returns the address of the price oracle sentinel.\"},\"setACLAdmin(address)\":{\"notice\":\"Updates the address of the ACL admin.\"},\"setACLManager(address)\":{\"notice\":\"Updates the address of the ACL manager.\"},\"setAddress(bytes32,address)\":{\"notice\":\"Sets an address for an id replacing the address saved in the addresses map.\"},\"setAddressAsProxy(bytes32,address)\":{\"notice\":\"General function to update the implementation of a proxy registered with certain `id`. If there is no proxy registered, it will instantiate one and set as implementation the `newImplementationAddress`.\"},\"setMarketId(string)\":{\"notice\":\"Associates an id with a specific PoolAddressesProvider.\"},\"setPoolConfiguratorImpl(address)\":{\"notice\":\"Updates the implementation of the PoolConfigurator, or creates a proxy setting the new `PoolConfigurator` implementation when the function is called for the first time.\"},\"setPoolDataProvider(address)\":{\"notice\":\"Updates the address of the data provider.\"},\"setPoolImpl(address)\":{\"notice\":\"Updates the implementation of the Pool, or creates a proxy setting the new `pool` implementation when the function is called for the first time.\"},\"setPriceOracle(address)\":{\"notice\":\"Updates the address of the price oracle.\"},\"setPriceOracleSentinel(address)\":{\"notice\":\"Updates the address of the price oracle sentinel.\"}},\"notice\":\"Defines the basic interface for a Pool Addresses Provider.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@aave/core-v3/contracts/interfaces/IPoolAddressesProvider.sol\":\"IPoolAddressesProvider\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@aave/core-v3/contracts/interfaces/IPoolAddressesProvider.sol\":{\"keccak256\":\"0x33d4308d9407b4ee2297fc4ba5acce1a96a6c658189e2778a4f6b90e032fb3b5\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://978336a2a40229ccc7749344be890862ea12e17e9fffe5bb977ba3841de07b5a\",\"dweb:/ipfs/QmScNrQfDSPg1afJmkCty6fZkETUrWTmEXWeTmHoe7mSqa\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"getACLAdmin()": {
								"notice": "Returns the address of the ACL admin."
							},
							"getACLManager()": {
								"notice": "Returns the address of the ACL manager."
							},
							"getAddress(bytes32)": {
								"notice": "Returns an address by its identifier."
							},
							"getMarketId()": {
								"notice": "Returns the id of the Aave market to which this contract points to."
							},
							"getPool()": {
								"notice": "Returns the address of the Pool proxy."
							},
							"getPoolConfigurator()": {
								"notice": "Returns the address of the PoolConfigurator proxy."
							},
							"getPoolDataProvider()": {
								"notice": "Returns the address of the data provider."
							},
							"getPriceOracle()": {
								"notice": "Returns the address of the price oracle."
							},
							"getPriceOracleSentinel()": {
								"notice": "Returns the address of the price oracle sentinel."
							},
							"setACLAdmin(address)": {
								"notice": "Updates the address of the ACL admin."
							},
							"setACLManager(address)": {
								"notice": "Updates the address of the ACL manager."
							},
							"setAddress(bytes32,address)": {
								"notice": "Sets an address for an id replacing the address saved in the addresses map."
							},
							"setAddressAsProxy(bytes32,address)": {
								"notice": "General function to update the implementation of a proxy registered with certain `id`. If there is no proxy registered, it will instantiate one and set as implementation the `newImplementationAddress`."
							},
							"setMarketId(string)": {
								"notice": "Associates an id with a specific PoolAddressesProvider."
							},
							"setPoolConfiguratorImpl(address)": {
								"notice": "Updates the implementation of the PoolConfigurator, or creates a proxy setting the new `PoolConfigurator` implementation when the function is called for the first time."
							},
							"setPoolDataProvider(address)": {
								"notice": "Updates the address of the data provider."
							},
							"setPoolImpl(address)": {
								"notice": "Updates the implementation of the Pool, or creates a proxy setting the new `pool` implementation when the function is called for the first time."
							},
							"setPriceOracle(address)": {
								"notice": "Updates the address of the price oracle."
							},
							"setPriceOracleSentinel(address)": {
								"notice": "Updates the address of the price oracle sentinel."
							}
						},
						"notice": "Defines the basic interface for a Pool Addresses Provider.",
						"version": 1
					}
				}
			},
			"@aave/core-v3/contracts/interfaces/IPriceOracleGetter.sol": {
				"IPriceOracleGetter": {
					"abi": [
						{
							"inputs": [],
							"name": "BASE_CURRENCY",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "BASE_CURRENCY_UNIT",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								}
							],
							"name": "getAssetPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Aave",
						"kind": "dev",
						"methods": {
							"BASE_CURRENCY()": {
								"details": "Address 0x0 is reserved for USD as base currency.",
								"returns": {
									"_0": "Returns the base currency address."
								}
							},
							"BASE_CURRENCY_UNIT()": {
								"details": "1 ether for ETH, 1e8 for USD.",
								"returns": {
									"_0": "Returns the base currency unit."
								}
							},
							"getAssetPrice(address)": {
								"params": {
									"asset": "The address of the asset"
								},
								"returns": {
									"_0": "The price of the asset"
								}
							}
						},
						"title": "IPriceOracleGetter",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"BASE_CURRENCY()": "e19f4700",
							"BASE_CURRENCY_UNIT()": "8c89b64f",
							"getAssetPrice(address)": "b3596f07"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"BASE_CURRENCY\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BASE_CURRENCY_UNIT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getAssetPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Aave\",\"kind\":\"dev\",\"methods\":{\"BASE_CURRENCY()\":{\"details\":\"Address 0x0 is reserved for USD as base currency.\",\"returns\":{\"_0\":\"Returns the base currency address.\"}},\"BASE_CURRENCY_UNIT()\":{\"details\":\"1 ether for ETH, 1e8 for USD.\",\"returns\":{\"_0\":\"Returns the base currency unit.\"}},\"getAssetPrice(address)\":{\"params\":{\"asset\":\"The address of the asset\"},\"returns\":{\"_0\":\"The price of the asset\"}}},\"title\":\"IPriceOracleGetter\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"BASE_CURRENCY()\":{\"notice\":\"Returns the base currency address\"},\"BASE_CURRENCY_UNIT()\":{\"notice\":\"Returns the base currency unit\"},\"getAssetPrice(address)\":{\"notice\":\"Returns the asset price in the base currency\"}},\"notice\":\"Interface for the Aave price oracle.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@aave/core-v3/contracts/interfaces/IPriceOracleGetter.sol\":\"IPriceOracleGetter\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@aave/core-v3/contracts/interfaces/IPriceOracleGetter.sol\":{\"keccak256\":\"0xfe72e94869ca91465a7f57282b8d367b2c9ba798fdc13ac8546304db8d971df6\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://17eb0014e4dd33c8a177ff6a80aea1361d40cda65f0e832484d9dad9c80c9aea\",\"dweb:/ipfs/QmVNsRx7bJjKmgfTVnpArCRRFGAyds2d5pY4sigcvgmxtf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"BASE_CURRENCY()": {
								"notice": "Returns the base currency address"
							},
							"BASE_CURRENCY_UNIT()": {
								"notice": "Returns the base currency unit"
							},
							"getAssetPrice(address)": {
								"notice": "Returns the asset price in the base currency"
							}
						},
						"notice": "Interface for the Aave price oracle.",
						"version": 1
					}
				}
			},
			"@aave/core-v3/contracts/protocol/libraries/math/PercentageMath.sol": {
				"PercentageMath": {
					"abi": [],
					"devdoc": {
						"author": "Aave",
						"details": "Percentages are defined by default with 2 decimals of precision (100.00). The precision is indicated by PERCENTAGE_FACTOROperations are rounded. If a value is >=.5, will be rounded up, otherwise rounded down.",
						"kind": "dev",
						"methods": {},
						"title": "PercentageMath library",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@aave/core-v3/contracts/protocol/libraries/math/PercentageMath.sol\":410:2348  library PercentageMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@aave/core-v3/contracts/protocol/libraries/math/PercentageMath.sol\":410:2348  library PercentageMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212206d5a3d74bc7667e36dcf8ffb2ca529faa377fe061f7f52ddb09aa9c245c057d764736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212206d5a3d74bc7667e36dcf8ffb2ca529faa377fe061f7f52ddb09aa9c245c057d764736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH14 0x5A3D74BC7667E36DCF8FFB2CA529 STATICCALL LOG3 PUSH24 0xFE061F7F52DDB09AA9C245C057D764736F6C634300081A00 CALLER ",
							"sourceMap": "410:1938:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212206d5a3d74bc7667e36dcf8ffb2ca529faa377fe061f7f52ddb09aa9c245c057d764736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH14 0x5A3D74BC7667E36DCF8FFB2CA529 STATICCALL LOG3 PUSH24 0xFE061F7F52DDB09AA9C245C057D764736F6C634300081A00 CALLER ",
							"sourceMap": "410:1938:14:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"percentDiv(uint256,uint256)": "infinite",
								"percentMul(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 410,
									"end": 2348,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 410,
									"end": 2348,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 410,
									"end": 2348,
									"name": "PUSH",
									"source": 14,
									"value": "B"
								},
								{
									"begin": 410,
									"end": 2348,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 410,
									"end": 2348,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 410,
									"end": 2348,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 410,
									"end": 2348,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 410,
									"end": 2348,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 410,
									"end": 2348,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 410,
									"end": 2348,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 410,
									"end": 2348,
									"name": "BYTE",
									"source": 14
								},
								{
									"begin": 410,
									"end": 2348,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 410,
									"end": 2348,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 410,
									"end": 2348,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 410,
									"end": 2348,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 410,
									"end": 2348,
									"name": "PUSH",
									"source": 14,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 410,
									"end": 2348,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 410,
									"end": 2348,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 410,
									"end": 2348,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 410,
									"end": 2348,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 410,
									"end": 2348,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 410,
									"end": 2348,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 410,
									"end": 2348,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 410,
									"end": 2348,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 410,
									"end": 2348,
									"name": "tag",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 410,
									"end": 2348,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 410,
									"end": 2348,
									"name": "ADDRESS",
									"source": 14
								},
								{
									"begin": 410,
									"end": 2348,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 410,
									"end": 2348,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 410,
									"end": 2348,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 410,
									"end": 2348,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 410,
									"end": 2348,
									"name": "MSTORE8",
									"source": 14
								},
								{
									"begin": 410,
									"end": 2348,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 410,
									"end": 2348,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 410,
									"end": 2348,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206d5a3d74bc7667e36dcf8ffb2ca529faa377fe061f7f52ddb09aa9c245c057d764736f6c634300081a0033",
									".code": [
										{
											"begin": 410,
											"end": 2348,
											"name": "PUSHDEPLOYADDRESS",
											"source": 14
										},
										{
											"begin": 410,
											"end": 2348,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 410,
											"end": 2348,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 410,
											"end": 2348,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 410,
											"end": 2348,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 410,
											"end": 2348,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 410,
											"end": 2348,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 2348,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 410,
											"end": 2348,
											"name": "REVERT",
											"source": 14
										}
									]
								}
							},
							"sourceList": [
								"@aave/core-v3/contracts/dependencies/gnosis/contracts/GPv2SafeERC20.sol",
								"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Address.sol",
								"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Context.sol",
								"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/IERC20.sol",
								"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/IERC20Detailed.sol",
								"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol",
								"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/SafeERC20.sol",
								"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/SafeMath.sol",
								"@aave/core-v3/contracts/flashloan/base/FlashLoanSimpleReceiverBase.sol",
								"@aave/core-v3/contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol",
								"@aave/core-v3/contracts/interfaces/IERC20WithPermit.sol",
								"@aave/core-v3/contracts/interfaces/IPool.sol",
								"@aave/core-v3/contracts/interfaces/IPoolAddressesProvider.sol",
								"@aave/core-v3/contracts/interfaces/IPriceOracleGetter.sol",
								"@aave/core-v3/contracts/protocol/libraries/math/PercentageMath.sol",
								"@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol",
								"contracts/adapters/paraswap/BaseParaSwapAdapter.sol",
								"contracts/adapters/paraswap/BaseParaSwapSellAdapter.sol",
								"contracts/adapters/paraswap/interfaces/IParaSwapAugustus.sol",
								"contracts/adapters/paraswap/interfaces/IParaSwapAugustusRegistry.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Aave\",\"details\":\"Percentages are defined by default with 2 decimals of precision (100.00). The precision is indicated by PERCENTAGE_FACTOROperations are rounded. If a value is >=.5, will be rounded up, otherwise rounded down.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"PercentageMath library\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Provides functions to perform percentage calculations\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@aave/core-v3/contracts/protocol/libraries/math/PercentageMath.sol\":\"PercentageMath\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@aave/core-v3/contracts/protocol/libraries/math/PercentageMath.sol\":{\"keccak256\":\"0x6a7dcf18e1af47b69c8dd58093b0134e3689bf719ba63eae485d8f9dfc10cac7\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://f1eb7f7813ade11391040b7bf495c8eaaf55780e75d9f2f0f75ce01975b44dfd\",\"dweb:/ipfs/QmUpXWird3PCkTrTDEVVnwV353L9jHxabEfAfsw57vjWux\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Provides functions to perform percentage calculations",
						"version": 1
					}
				}
			},
			"@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol": {
				"DataTypes": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol\":62:7368  library DataTypes {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol\":62:7368  library DataTypes {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220268e604dd9a812fcdfe19d6b0771b9dc7547e930ac2b7b55146739a880438dd964736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220268e604dd9a812fcdfe19d6b0771b9dc7547e930ac2b7b55146739a880438dd964736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 DUP15 PUSH1 0x4D 0xD9 0xA8 SLT 0xFC 0xDF 0xE1 SWAP14 PUSH12 0x771B9DC7547E930AC2B7B55 EQ PUSH8 0x39A880438DD96473 PUSH16 0x6C634300081A00330000000000000000 ",
							"sourceMap": "62:7306:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220268e604dd9a812fcdfe19d6b0771b9dc7547e930ac2b7b55146739a880438dd964736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 DUP15 PUSH1 0x4D 0xD9 0xA8 SLT 0xFC 0xDF 0xE1 SWAP14 PUSH12 0x771B9DC7547E930AC2B7B55 EQ PUSH8 0x39A880438DD96473 PUSH16 0x6C634300081A00330000000000000000 ",
							"sourceMap": "62:7306:15:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 62,
									"end": 7368,
									"name": "PUSH #[$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 62,
									"end": 7368,
									"name": "PUSH [$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 62,
									"end": 7368,
									"name": "PUSH",
									"source": 15,
									"value": "B"
								},
								{
									"begin": 62,
									"end": 7368,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 62,
									"end": 7368,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 62,
									"end": 7368,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 62,
									"end": 7368,
									"name": "CODECOPY",
									"source": 15
								},
								{
									"begin": 62,
									"end": 7368,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 62,
									"end": 7368,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 62,
									"end": 7368,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 62,
									"end": 7368,
									"name": "BYTE",
									"source": 15
								},
								{
									"begin": 62,
									"end": 7368,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 62,
									"end": 7368,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 62,
									"end": 7368,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 62,
									"end": 7368,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 62,
									"end": 7368,
									"name": "PUSH",
									"source": 15,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 62,
									"end": 7368,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 62,
									"end": 7368,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 62,
									"end": 7368,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 62,
									"end": 7368,
									"name": "PUSH",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 62,
									"end": 7368,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 62,
									"end": 7368,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 62,
									"end": 7368,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 62,
									"end": 7368,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 62,
									"end": 7368,
									"name": "tag",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 62,
									"end": 7368,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 62,
									"end": 7368,
									"name": "ADDRESS",
									"source": 15
								},
								{
									"begin": 62,
									"end": 7368,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 62,
									"end": 7368,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 62,
									"end": 7368,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 62,
									"end": 7368,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 62,
									"end": 7368,
									"name": "MSTORE8",
									"source": 15
								},
								{
									"begin": 62,
									"end": 7368,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 62,
									"end": 7368,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 62,
									"end": 7368,
									"name": "RETURN",
									"source": 15
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220268e604dd9a812fcdfe19d6b0771b9dc7547e930ac2b7b55146739a880438dd964736f6c634300081a0033",
									".code": [
										{
											"begin": 62,
											"end": 7368,
											"name": "PUSHDEPLOYADDRESS",
											"source": 15
										},
										{
											"begin": 62,
											"end": 7368,
											"name": "ADDRESS",
											"source": 15
										},
										{
											"begin": 62,
											"end": 7368,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 62,
											"end": 7368,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 62,
											"end": 7368,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 62,
											"end": 7368,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 62,
											"end": 7368,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 62,
											"end": 7368,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 62,
											"end": 7368,
											"name": "REVERT",
											"source": 15
										}
									]
								}
							},
							"sourceList": [
								"@aave/core-v3/contracts/dependencies/gnosis/contracts/GPv2SafeERC20.sol",
								"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Address.sol",
								"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Context.sol",
								"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/IERC20.sol",
								"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/IERC20Detailed.sol",
								"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol",
								"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/SafeERC20.sol",
								"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/SafeMath.sol",
								"@aave/core-v3/contracts/flashloan/base/FlashLoanSimpleReceiverBase.sol",
								"@aave/core-v3/contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol",
								"@aave/core-v3/contracts/interfaces/IERC20WithPermit.sol",
								"@aave/core-v3/contracts/interfaces/IPool.sol",
								"@aave/core-v3/contracts/interfaces/IPoolAddressesProvider.sol",
								"@aave/core-v3/contracts/interfaces/IPriceOracleGetter.sol",
								"@aave/core-v3/contracts/protocol/libraries/math/PercentageMath.sol",
								"@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol",
								"contracts/adapters/paraswap/BaseParaSwapAdapter.sol",
								"contracts/adapters/paraswap/BaseParaSwapSellAdapter.sol",
								"contracts/adapters/paraswap/interfaces/IParaSwapAugustus.sol",
								"contracts/adapters/paraswap/interfaces/IParaSwapAugustusRegistry.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol\":\"DataTypes\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol\":{\"keccak256\":\"0x771cb99fd8519c974f7e12130387c4d9a997a6e8d0ac10e4303b842fe53efa88\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://0f41689d1d58bc13678c749bae8830f5a8b19b89cd135e962bf07d483350f828\",\"dweb:/ipfs/QmQSNGDxjYGqT1GU2CZzsWUTNcAtcfkg1jDGTH516nCAfN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/adapters/paraswap/BaseParaSwapAdapter.sol": {
				"BaseParaSwapAdapter": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "fromAsset",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "toAsset",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountSold",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "receivedAmount",
									"type": "uint256"
								}
							],
							"name": "Bought",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "fromAsset",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "toAsset",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "fromAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "receivedAmount",
									"type": "uint256"
								}
							],
							"name": "Swapped",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "ADDRESSES_PROVIDER",
							"outputs": [
								{
									"internalType": "contract IPoolAddressesProvider",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MAX_SLIPPAGE_PERCENT",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ORACLE",
							"outputs": [
								{
									"internalType": "contract IPriceOracleGetter",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "POOL",
							"outputs": [
								{
									"internalType": "contract IPool",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "premium",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "initiator",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "params",
									"type": "bytes"
								}
							],
							"name": "executeOperation",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "token",
									"type": "address"
								}
							],
							"name": "rescueTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Jason Raymond Bell",
						"kind": "dev",
						"methods": {
							"executeOperation(address,uint256,uint256,address,bytes)": {
								"details": "Ensure that the contract can return the debt + premium, e.g., has      enough funds to repay and has approved the Pool to pull the total amount",
								"params": {
									"amount": "The amount of the flash-borrowed asset",
									"asset": "The address of the flash-borrowed asset",
									"initiator": "The address of the flashloan initiator",
									"params": "The byte-encoded params passed when initiating the flashloan",
									"premium": "The fee of the flash-borrowed asset"
								},
								"returns": {
									"_0": "True if the execution of the operation succeeds, false otherwise"
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"rescueTokens(address)": {
								"details": "Emergency rescue for token stucked on this contract, as failsafe mechanism - Funds should never remain in this contract more time than during transactions - Only callable by the owner"
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"title": "BaseParaSwapAdapter",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"ADDRESSES_PROVIDER()": "0542975c",
							"MAX_SLIPPAGE_PERCENT()": "32e4b286",
							"ORACLE()": "38013f02",
							"POOL()": "7535d246",
							"executeOperation(address,uint256,uint256,address,bytes)": "1b11d0ff",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"rescueTokens(address)": "00ae3bf8",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromAsset\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toAsset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountSold\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"receivedAmount\",\"type\":\"uint256\"}],\"name\":\"Bought\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromAsset\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toAsset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fromAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"receivedAmount\",\"type\":\"uint256\"}],\"name\":\"Swapped\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADDRESSES_PROVIDER\",\"outputs\":[{\"internalType\":\"contract IPoolAddressesProvider\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_SLIPPAGE_PERCENT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ORACLE\",\"outputs\":[{\"internalType\":\"contract IPriceOracleGetter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"POOL\",\"outputs\":[{\"internalType\":\"contract IPool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"premium\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"initiator\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"name\":\"executeOperation\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"rescueTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Jason Raymond Bell\",\"kind\":\"dev\",\"methods\":{\"executeOperation(address,uint256,uint256,address,bytes)\":{\"details\":\"Ensure that the contract can return the debt + premium, e.g., has      enough funds to repay and has approved the Pool to pull the total amount\",\"params\":{\"amount\":\"The amount of the flash-borrowed asset\",\"asset\":\"The address of the flash-borrowed asset\",\"initiator\":\"The address of the flashloan initiator\",\"params\":\"The byte-encoded params passed when initiating the flashloan\",\"premium\":\"The fee of the flash-borrowed asset\"},\"returns\":{\"_0\":\"True if the execution of the operation succeeds, false otherwise\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"rescueTokens(address)\":{\"details\":\"Emergency rescue for token stucked on this contract, as failsafe mechanism - Funds should never remain in this contract more time than during transactions - Only callable by the owner\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"BaseParaSwapAdapter\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"executeOperation(address,uint256,uint256,address,bytes)\":{\"notice\":\"Executes an operation after receiving the flash-borrowed asset\"}},\"notice\":\"Utility functions for adapters using ParaSwap\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/adapters/paraswap/BaseParaSwapAdapter.sol\":\"BaseParaSwapAdapter\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@aave/core-v3/contracts/dependencies/gnosis/contracts/GPv2SafeERC20.sol\":{\"keccak256\":\"0xb18337187a2a6c4e64c61f8e4e06f0e932a69bb8f33688943bf50d7f4198e44b\",\"license\":\"LGPL-3.0-or-later\",\"urls\":[\"bzz-raw://38c0769720d226d41fb5a0f504a0b9434ca266acb15d1de9bbc08f1a5c8a7bbc\",\"dweb:/ipfs/QmeskcXDL7cbMXbjEdAdbUamKmjqYKBwRfheFZmm9mpBKJ\"]},\"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Context.sol\":{\"keccak256\":\"0xc0df5ebb2c3d8b4509464c40a88cc51e5e5f5e4a26fafc909330e9bb2658f641\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc2690f871399de8f14e4cd8ae9b57a67e135afa28ac4be76594eaf4ecd8e244\",\"dweb:/ipfs/Qmb9gKAnQBciUknb3ysnfDpWAdYXGJm51NzFYWNkXwoAZg\"]},\"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/IERC20.sol\":{\"keccak256\":\"0xf57d62241e553696a1324d225663ba2e1a51db0a51ca236d0c1b009d89b6284c\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://d327db93b636790909aa137124f30a856ac1631cb79c476aa188f9627fda8d03\",\"dweb:/ipfs/QmaxpmEoBFioeNYmpxJemyZ7aYF2nX1NKW1XDqREm7i6es\"]},\"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/IERC20Detailed.sol\":{\"keccak256\":\"0x9365cd885dc1ed7aed1364ae4dedf8e4660100cba0437061013f64c5002b385a\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://ddc639d67c82e15f76b08588e8ad2ee87eaff6bb9cba5c0e5b08e242c3c4ac00\",\"dweb:/ipfs/QmY1D9WcH3nmg2VVfqSUkEX6Zrkmkmx8oi2pJAvw5BABi7\"]},\"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol\":{\"keccak256\":\"0x3ce185c4f579e32006f8893dbfdc1b5d878c0e2cafd1508f7ceb081698bc81f9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://de40129c2380570ce2e883210452f0dc0913788e66be6690084be3d9f8def73f\",\"dweb:/ipfs/QmVAEtQHTYDPheoDniWaVNyRcWwfu3ccmUCxFXuzxHEwFT\"]},\"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/SafeMath.sol\":{\"keccak256\":\"0xf1c5d8ba70a5fc3e20dbbc2aa2a2278d2535a57bc1e9abf1228ebc3068a045f0\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://275183a6783193c44497f0535e5f8473a5d1fd970bb968f2db4d7bf25c967e7b\",\"dweb:/ipfs/QmXggrHmKWkZEXN5UYkDcYWGrU428k5iYbf39apqbk3fqQ\"]},\"@aave/core-v3/contracts/flashloan/base/FlashLoanSimpleReceiverBase.sol\":{\"keccak256\":\"0x3a04fc046c4f04c71ff230eba56e56bb718be41e4317f0c938bd287d81e384b1\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://8a02e8f6034e6536269eca55dc4e068e584a67cef530dea865d9a75e0e950ca3\",\"dweb:/ipfs/QmdwL6Wvbk8QAyThNzPkeCfmTUryUdUnkbBDSRs5eigBmj\"]},\"@aave/core-v3/contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol\":{\"keccak256\":\"0xba50a7834ddfdca3e3cfac09043f72699be42ff88925641ac30950a434b2b2ff\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://588513e813da8c9edf06bdd8912f33f5e304735e4b0145da9fb034eb46f205b5\",\"dweb:/ipfs/Qmco68eeRnTUGyZaoZ9Vu4R7xzH9x1pUwP36nUvrxnxHxg\"]},\"@aave/core-v3/contracts/interfaces/IERC20WithPermit.sol\":{\"keccak256\":\"0xfb041570f1804648f543be72cecc80ca9f65129232bacaa9247ebd11a7d9f83e\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://d46fcfc306a6f9d52dd6d17f9d344907f7fe54ad8e36b890949662f5a1c7ca55\",\"dweb:/ipfs/QmX5B4ZfmxpgF86tMhCV5DiH5pAyVanzsiCRDT8GkCfzkZ\"]},\"@aave/core-v3/contracts/interfaces/IPool.sol\":{\"keccak256\":\"0xbfd2077251c8dc766a56d45f4b03eb07f3441323e79c0f794efea3657a99747f\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://c6ff6221de0ea877932c73c0b99d3e4535f293053ae44f9f9d6b9d265e9af2f6\",\"dweb:/ipfs/QmSTaEKrhz1xNVnx4oBzWw8DenYPShVzJoP1A9GTEWkAzX\"]},\"@aave/core-v3/contracts/interfaces/IPoolAddressesProvider.sol\":{\"keccak256\":\"0x33d4308d9407b4ee2297fc4ba5acce1a96a6c658189e2778a4f6b90e032fb3b5\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://978336a2a40229ccc7749344be890862ea12e17e9fffe5bb977ba3841de07b5a\",\"dweb:/ipfs/QmScNrQfDSPg1afJmkCty6fZkETUrWTmEXWeTmHoe7mSqa\"]},\"@aave/core-v3/contracts/interfaces/IPriceOracleGetter.sol\":{\"keccak256\":\"0xfe72e94869ca91465a7f57282b8d367b2c9ba798fdc13ac8546304db8d971df6\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://17eb0014e4dd33c8a177ff6a80aea1361d40cda65f0e832484d9dad9c80c9aea\",\"dweb:/ipfs/QmVNsRx7bJjKmgfTVnpArCRRFGAyds2d5pY4sigcvgmxtf\"]},\"@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol\":{\"keccak256\":\"0x771cb99fd8519c974f7e12130387c4d9a997a6e8d0ac10e4303b842fe53efa88\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://0f41689d1d58bc13678c749bae8830f5a8b19b89cd135e962bf07d483350f828\",\"dweb:/ipfs/QmQSNGDxjYGqT1GU2CZzsWUTNcAtcfkg1jDGTH516nCAfN\"]},\"contracts/adapters/paraswap/BaseParaSwapAdapter.sol\":{\"keccak256\":\"0xd835ab6371f67b48ba0cb9247c97fea02e62922582d136de51c81d5ad007eca8\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://760eb7ce5d1a4b7405d979f7d9c6c14ee7ba88765ef7c83cdaf299f7113f08c0\",\"dweb:/ipfs/QmRQECuGD173RVR9v3mf3Uo6cHxYzKjPYBHfawaibpbKyY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 501,
								"contract": "contracts/adapters/paraswap/BaseParaSwapAdapter.sol:BaseParaSwapAdapter",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"executeOperation(address,uint256,uint256,address,bytes)": {
								"notice": "Executes an operation after receiving the flash-borrowed asset"
							}
						},
						"notice": "Utility functions for adapters using ParaSwap",
						"version": 1
					}
				}
			},
			"contracts/adapters/paraswap/BaseParaSwapSellAdapter.sol": {
				"BaseParaSwapSellAdapter": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "fromAsset",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "toAsset",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountSold",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "receivedAmount",
									"type": "uint256"
								}
							],
							"name": "Bought",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "fromAsset",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "toAsset",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "fromAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "receivedAmount",
									"type": "uint256"
								}
							],
							"name": "Swapped",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "ADDRESSES_PROVIDER",
							"outputs": [
								{
									"internalType": "contract IPoolAddressesProvider",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "AUGUSTUS_REGISTRY",
							"outputs": [
								{
									"internalType": "contract IParaSwapAugustusRegistry",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MAX_SLIPPAGE_PERCENT",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ORACLE",
							"outputs": [
								{
									"internalType": "contract IPriceOracleGetter",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "POOL",
							"outputs": [
								{
									"internalType": "contract IPool",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "asset",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "premium",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "initiator",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "params",
									"type": "bytes"
								}
							],
							"name": "executeOperation",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "token",
									"type": "address"
								}
							],
							"name": "rescueTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Jason Raymond Bell",
						"kind": "dev",
						"methods": {
							"executeOperation(address,uint256,uint256,address,bytes)": {
								"details": "Ensure that the contract can return the debt + premium, e.g., has      enough funds to repay and has approved the Pool to pull the total amount",
								"params": {
									"amount": "The amount of the flash-borrowed asset",
									"asset": "The address of the flash-borrowed asset",
									"initiator": "The address of the flashloan initiator",
									"params": "The byte-encoded params passed when initiating the flashloan",
									"premium": "The fee of the flash-borrowed asset"
								},
								"returns": {
									"_0": "True if the execution of the operation succeeds, false otherwise"
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"rescueTokens(address)": {
								"details": "Emergency rescue for token stucked on this contract, as failsafe mechanism - Funds should never remain in this contract more time than during transactions - Only callable by the owner"
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"title": "BaseParaSwapSellAdapter",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"ADDRESSES_PROVIDER()": "0542975c",
							"AUGUSTUS_REGISTRY()": "3a829867",
							"MAX_SLIPPAGE_PERCENT()": "32e4b286",
							"ORACLE()": "38013f02",
							"POOL()": "7535d246",
							"executeOperation(address,uint256,uint256,address,bytes)": "1b11d0ff",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"rescueTokens(address)": "00ae3bf8",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromAsset\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toAsset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountSold\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"receivedAmount\",\"type\":\"uint256\"}],\"name\":\"Bought\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromAsset\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toAsset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fromAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"receivedAmount\",\"type\":\"uint256\"}],\"name\":\"Swapped\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADDRESSES_PROVIDER\",\"outputs\":[{\"internalType\":\"contract IPoolAddressesProvider\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"AUGUSTUS_REGISTRY\",\"outputs\":[{\"internalType\":\"contract IParaSwapAugustusRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_SLIPPAGE_PERCENT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ORACLE\",\"outputs\":[{\"internalType\":\"contract IPriceOracleGetter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"POOL\",\"outputs\":[{\"internalType\":\"contract IPool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"premium\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"initiator\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"name\":\"executeOperation\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"rescueTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Jason Raymond Bell\",\"kind\":\"dev\",\"methods\":{\"executeOperation(address,uint256,uint256,address,bytes)\":{\"details\":\"Ensure that the contract can return the debt + premium, e.g., has      enough funds to repay and has approved the Pool to pull the total amount\",\"params\":{\"amount\":\"The amount of the flash-borrowed asset\",\"asset\":\"The address of the flash-borrowed asset\",\"initiator\":\"The address of the flashloan initiator\",\"params\":\"The byte-encoded params passed when initiating the flashloan\",\"premium\":\"The fee of the flash-borrowed asset\"},\"returns\":{\"_0\":\"True if the execution of the operation succeeds, false otherwise\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"rescueTokens(address)\":{\"details\":\"Emergency rescue for token stucked on this contract, as failsafe mechanism - Funds should never remain in this contract more time than during transactions - Only callable by the owner\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"BaseParaSwapSellAdapter\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"executeOperation(address,uint256,uint256,address,bytes)\":{\"notice\":\"Executes an operation after receiving the flash-borrowed asset\"}},\"notice\":\"Implements the logic for selling tokens on ParaSwap\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/adapters/paraswap/BaseParaSwapSellAdapter.sol\":\"BaseParaSwapSellAdapter\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@aave/core-v3/contracts/dependencies/gnosis/contracts/GPv2SafeERC20.sol\":{\"keccak256\":\"0xb18337187a2a6c4e64c61f8e4e06f0e932a69bb8f33688943bf50d7f4198e44b\",\"license\":\"LGPL-3.0-or-later\",\"urls\":[\"bzz-raw://38c0769720d226d41fb5a0f504a0b9434ca266acb15d1de9bbc08f1a5c8a7bbc\",\"dweb:/ipfs/QmeskcXDL7cbMXbjEdAdbUamKmjqYKBwRfheFZmm9mpBKJ\"]},\"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Address.sol\":{\"keccak256\":\"0x4ce20476966f73ba3c0aeb85b602b6ecc4e715f5bd9524d1c6286819282c76c5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b856247f6c2fe07d0d293ed4b493a7ec37fa2dd8de7c69b446482ca49532fecd\",\"dweb:/ipfs/QmSYTbb8cMjrQ1dtgfLUEektidnT9Wjaxqz7HWU28QTEgS\"]},\"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Context.sol\":{\"keccak256\":\"0xc0df5ebb2c3d8b4509464c40a88cc51e5e5f5e4a26fafc909330e9bb2658f641\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc2690f871399de8f14e4cd8ae9b57a67e135afa28ac4be76594eaf4ecd8e244\",\"dweb:/ipfs/Qmb9gKAnQBciUknb3ysnfDpWAdYXGJm51NzFYWNkXwoAZg\"]},\"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/IERC20.sol\":{\"keccak256\":\"0xf57d62241e553696a1324d225663ba2e1a51db0a51ca236d0c1b009d89b6284c\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://d327db93b636790909aa137124f30a856ac1631cb79c476aa188f9627fda8d03\",\"dweb:/ipfs/QmaxpmEoBFioeNYmpxJemyZ7aYF2nX1NKW1XDqREm7i6es\"]},\"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/IERC20Detailed.sol\":{\"keccak256\":\"0x9365cd885dc1ed7aed1364ae4dedf8e4660100cba0437061013f64c5002b385a\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://ddc639d67c82e15f76b08588e8ad2ee87eaff6bb9cba5c0e5b08e242c3c4ac00\",\"dweb:/ipfs/QmY1D9WcH3nmg2VVfqSUkEX6Zrkmkmx8oi2pJAvw5BABi7\"]},\"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol\":{\"keccak256\":\"0x3ce185c4f579e32006f8893dbfdc1b5d878c0e2cafd1508f7ceb081698bc81f9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://de40129c2380570ce2e883210452f0dc0913788e66be6690084be3d9f8def73f\",\"dweb:/ipfs/QmVAEtQHTYDPheoDniWaVNyRcWwfu3ccmUCxFXuzxHEwFT\"]},\"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/SafeERC20.sol\":{\"keccak256\":\"0x9ada5448c24f34f934122c0e11d1a89bf9a31b7ade0dcb935bd7dcb339ef7f32\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d0208c47c8fbee6a2812e96cb7fad419d3437b49ee9749953f03ab14979d3d6f\",\"dweb:/ipfs/QmXavasrpSX5WRGST3LTsP7incRaTmtJQJ8uU3pLhmWLWG\"]},\"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/SafeMath.sol\":{\"keccak256\":\"0xf1c5d8ba70a5fc3e20dbbc2aa2a2278d2535a57bc1e9abf1228ebc3068a045f0\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://275183a6783193c44497f0535e5f8473a5d1fd970bb968f2db4d7bf25c967e7b\",\"dweb:/ipfs/QmXggrHmKWkZEXN5UYkDcYWGrU428k5iYbf39apqbk3fqQ\"]},\"@aave/core-v3/contracts/flashloan/base/FlashLoanSimpleReceiverBase.sol\":{\"keccak256\":\"0x3a04fc046c4f04c71ff230eba56e56bb718be41e4317f0c938bd287d81e384b1\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://8a02e8f6034e6536269eca55dc4e068e584a67cef530dea865d9a75e0e950ca3\",\"dweb:/ipfs/QmdwL6Wvbk8QAyThNzPkeCfmTUryUdUnkbBDSRs5eigBmj\"]},\"@aave/core-v3/contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol\":{\"keccak256\":\"0xba50a7834ddfdca3e3cfac09043f72699be42ff88925641ac30950a434b2b2ff\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://588513e813da8c9edf06bdd8912f33f5e304735e4b0145da9fb034eb46f205b5\",\"dweb:/ipfs/Qmco68eeRnTUGyZaoZ9Vu4R7xzH9x1pUwP36nUvrxnxHxg\"]},\"@aave/core-v3/contracts/interfaces/IERC20WithPermit.sol\":{\"keccak256\":\"0xfb041570f1804648f543be72cecc80ca9f65129232bacaa9247ebd11a7d9f83e\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://d46fcfc306a6f9d52dd6d17f9d344907f7fe54ad8e36b890949662f5a1c7ca55\",\"dweb:/ipfs/QmX5B4ZfmxpgF86tMhCV5DiH5pAyVanzsiCRDT8GkCfzkZ\"]},\"@aave/core-v3/contracts/interfaces/IPool.sol\":{\"keccak256\":\"0xbfd2077251c8dc766a56d45f4b03eb07f3441323e79c0f794efea3657a99747f\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://c6ff6221de0ea877932c73c0b99d3e4535f293053ae44f9f9d6b9d265e9af2f6\",\"dweb:/ipfs/QmSTaEKrhz1xNVnx4oBzWw8DenYPShVzJoP1A9GTEWkAzX\"]},\"@aave/core-v3/contracts/interfaces/IPoolAddressesProvider.sol\":{\"keccak256\":\"0x33d4308d9407b4ee2297fc4ba5acce1a96a6c658189e2778a4f6b90e032fb3b5\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://978336a2a40229ccc7749344be890862ea12e17e9fffe5bb977ba3841de07b5a\",\"dweb:/ipfs/QmScNrQfDSPg1afJmkCty6fZkETUrWTmEXWeTmHoe7mSqa\"]},\"@aave/core-v3/contracts/interfaces/IPriceOracleGetter.sol\":{\"keccak256\":\"0xfe72e94869ca91465a7f57282b8d367b2c9ba798fdc13ac8546304db8d971df6\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://17eb0014e4dd33c8a177ff6a80aea1361d40cda65f0e832484d9dad9c80c9aea\",\"dweb:/ipfs/QmVNsRx7bJjKmgfTVnpArCRRFGAyds2d5pY4sigcvgmxtf\"]},\"@aave/core-v3/contracts/protocol/libraries/math/PercentageMath.sol\":{\"keccak256\":\"0x6a7dcf18e1af47b69c8dd58093b0134e3689bf719ba63eae485d8f9dfc10cac7\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://f1eb7f7813ade11391040b7bf495c8eaaf55780e75d9f2f0f75ce01975b44dfd\",\"dweb:/ipfs/QmUpXWird3PCkTrTDEVVnwV353L9jHxabEfAfsw57vjWux\"]},\"@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol\":{\"keccak256\":\"0x771cb99fd8519c974f7e12130387c4d9a997a6e8d0ac10e4303b842fe53efa88\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://0f41689d1d58bc13678c749bae8830f5a8b19b89cd135e962bf07d483350f828\",\"dweb:/ipfs/QmQSNGDxjYGqT1GU2CZzsWUTNcAtcfkg1jDGTH516nCAfN\"]},\"contracts/adapters/paraswap/BaseParaSwapAdapter.sol\":{\"keccak256\":\"0xd835ab6371f67b48ba0cb9247c97fea02e62922582d136de51c81d5ad007eca8\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://760eb7ce5d1a4b7405d979f7d9c6c14ee7ba88765ef7c83cdaf299f7113f08c0\",\"dweb:/ipfs/QmRQECuGD173RVR9v3mf3Uo6cHxYzKjPYBHfawaibpbKyY\"]},\"contracts/adapters/paraswap/BaseParaSwapSellAdapter.sol\":{\"keccak256\":\"0x9e565eb56fa4debf90474bda8e104c74e14fcb71e6fc9641a3bd2c8cb9b99ad5\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://1930649dd00e7207c3336bc2467c8d29a9389b48eaa21f4407af4d87581a723b\",\"dweb:/ipfs/QmVUT9pj42WJswuTSD4HWGQbRtVGo5FBcY9gaZyQCP9JfP\"]},\"contracts/adapters/paraswap/interfaces/IParaSwapAugustus.sol\":{\"keccak256\":\"0xebfd529a60d9f067139fe0997a557a13cc0c1360b39807dd6186c4a1c8c4d81e\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://bb07e3b23773e3baf87e282eed3c625d7da9d9eb4cb3a34bd8c96cc044c99e11\",\"dweb:/ipfs/QmQcunUbKrZwMNNnPhDwUzrdUNFEvU9gem31DjAp65uD5q\"]},\"contracts/adapters/paraswap/interfaces/IParaSwapAugustusRegistry.sol\":{\"keccak256\":\"0x0c8164c8749336883c179328de6dbded1a22f678ee2db029c24cea50fea138c8\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://a42ca391cdf06caf63acd41e189e16b23764e889c20f739a95dd37ccdc932283\",\"dweb:/ipfs/QmUQqiFsoST1t2i8uZKwkpGQBLReiwphqhSeLtWaHLirX3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 501,
								"contract": "contracts/adapters/paraswap/BaseParaSwapSellAdapter.sol:BaseParaSwapSellAdapter",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"executeOperation(address,uint256,uint256,address,bytes)": {
								"notice": "Executes an operation after receiving the flash-borrowed asset"
							}
						},
						"notice": "Implements the logic for selling tokens on ParaSwap",
						"version": 1
					}
				}
			},
			"contracts/adapters/paraswap/interfaces/IParaSwapAugustus.sol": {
				"IParaSwapAugustus": {
					"abi": [
						{
							"inputs": [],
							"name": "getTokenTransferProxy",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getTokenTransferProxy()": "d2c4b598"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getTokenTransferProxy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/adapters/paraswap/interfaces/IParaSwapAugustus.sol\":\"IParaSwapAugustus\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/adapters/paraswap/interfaces/IParaSwapAugustus.sol\":{\"keccak256\":\"0xebfd529a60d9f067139fe0997a557a13cc0c1360b39807dd6186c4a1c8c4d81e\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://bb07e3b23773e3baf87e282eed3c625d7da9d9eb4cb3a34bd8c96cc044c99e11\",\"dweb:/ipfs/QmQcunUbKrZwMNNnPhDwUzrdUNFEvU9gem31DjAp65uD5q\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/adapters/paraswap/interfaces/IParaSwapAugustusRegistry.sol": {
				"IParaSwapAugustusRegistry": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "augustus",
									"type": "address"
								}
							],
							"name": "isValidAugustus",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"isValidAugustus(address)": "fb04e17b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"augustus\",\"type\":\"address\"}],\"name\":\"isValidAugustus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/adapters/paraswap/interfaces/IParaSwapAugustusRegistry.sol\":\"IParaSwapAugustusRegistry\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/adapters/paraswap/interfaces/IParaSwapAugustusRegistry.sol\":{\"keccak256\":\"0x0c8164c8749336883c179328de6dbded1a22f678ee2db029c24cea50fea138c8\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://a42ca391cdf06caf63acd41e189e16b23764e889c20f739a95dd37ccdc932283\",\"dweb:/ipfs/QmUQqiFsoST1t2i8uZKwkpGQBLReiwphqhSeLtWaHLirX3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@aave/core-v3/contracts/dependencies/gnosis/contracts/GPv2SafeERC20.sol": {
				"ast": {
					"absolutePath": "@aave/core-v3/contracts/dependencies/gnosis/contracts/GPv2SafeERC20.sol",
					"exportedSymbols": {
						"GPv2SafeERC20": [
							70
						],
						"IERC20": [
							471
						]
					},
					"id": 71,
					"license": "LGPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "46:23:0"
						},
						{
							"absolutePath": "@aave/core-v3/contracts/dependencies/openzeppelin/contracts/IERC20.sol",
							"file": "../../openzeppelin/contracts/IERC20.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 71,
							"sourceUnit": 472,
							"src": "71:63:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 471,
										"src": "79:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "GPv2SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "136:157:0",
								"text": "@title Gnosis Protocol v2 Safe ERC20 Transfer Library\n @author Gnosis Developers\n @dev Gas-efficient version of Openzeppelin's SafeERC20 contract."
							},
							"fullyImplemented": true,
							"id": 70,
							"linearizedBaseContracts": [
								70
							],
							"name": "GPv2SafeERC20",
							"nameLocation": "301:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 29,
										"nodeType": "Block",
										"src": "513:585:0",
										"statements": [
											{
												"assignments": [
													16
												],
												"declarations": [
													{
														"constant": false,
														"id": 16,
														"mutability": "mutable",
														"name": "selector_",
														"nameLocation": "526:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 29,
														"src": "519:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"typeName": {
															"id": 15,
															"name": "bytes4",
															"nodeType": "ElementaryTypeName",
															"src": "519:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 20,
												"initialValue": {
													"expression": {
														"expression": {
															"id": 17,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 8,
															"src": "538:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$471",
																"typeString": "contract IERC20"
															}
														},
														"id": 18,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "544:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 420,
														"src": "538:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 19,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "553:8:0",
													"memberName": "selector",
													"nodeType": "MemberAccess",
													"src": "538:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "519:42:0"
											},
											{
												"AST": {
													"nativeSrc": "629:396:0",
													"nodeType": "YulBlock",
													"src": "629:396:0",
													"statements": [
														{
															"nativeSrc": "637:36:0",
															"nodeType": "YulVariableDeclaration",
															"src": "637:36:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "668:4:0",
																		"nodeType": "YulLiteral",
																		"src": "668:4:0",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "662:5:0",
																	"nodeType": "YulIdentifier",
																	"src": "662:5:0"
																},
																"nativeSrc": "662:11:0",
																"nodeType": "YulFunctionCall",
																"src": "662:11:0"
															},
															"variables": [
																{
																	"name": "freeMemoryPointer",
																	"nativeSrc": "641:17:0",
																	"nodeType": "YulTypedName",
																	"src": "641:17:0",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "freeMemoryPointer",
																		"nativeSrc": "687:17:0",
																		"nodeType": "YulIdentifier",
																		"src": "687:17:0"
																	},
																	{
																		"name": "selector_",
																		"nativeSrc": "706:9:0",
																		"nodeType": "YulIdentifier",
																		"src": "706:9:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "680:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "680:6:0"
																},
																"nativeSrc": "680:36:0",
																"nodeType": "YulFunctionCall",
																"src": "680:36:0"
															},
															"nativeSrc": "680:36:0",
															"nodeType": "YulExpressionStatement",
															"src": "680:36:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "freeMemoryPointer",
																				"nativeSrc": "734:17:0",
																				"nodeType": "YulIdentifier",
																				"src": "734:17:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "753:1:0",
																				"nodeType": "YulLiteral",
																				"src": "753:1:0",
																				"type": "",
																				"value": "4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "730:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "730:3:0"
																		},
																		"nativeSrc": "730:25:0",
																		"nodeType": "YulFunctionCall",
																		"src": "730:25:0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "to",
																				"nativeSrc": "761:2:0",
																				"nodeType": "YulIdentifier",
																				"src": "761:2:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "765:42:0",
																				"nodeType": "YulLiteral",
																				"src": "765:42:0",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "757:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "757:3:0"
																		},
																		"nativeSrc": "757:51:0",
																		"nodeType": "YulFunctionCall",
																		"src": "757:51:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "723:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "723:6:0"
																},
																"nativeSrc": "723:86:0",
																"nodeType": "YulFunctionCall",
																"src": "723:86:0"
															},
															"nativeSrc": "723:86:0",
															"nodeType": "YulExpressionStatement",
															"src": "723:86:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "freeMemoryPointer",
																				"nativeSrc": "827:17:0",
																				"nodeType": "YulIdentifier",
																				"src": "827:17:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "846:2:0",
																				"nodeType": "YulLiteral",
																				"src": "846:2:0",
																				"type": "",
																				"value": "36"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "823:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "823:3:0"
																		},
																		"nativeSrc": "823:26:0",
																		"nodeType": "YulFunctionCall",
																		"src": "823:26:0"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "851:5:0",
																		"nodeType": "YulIdentifier",
																		"src": "851:5:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "816:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "816:6:0"
																},
																"nativeSrc": "816:41:0",
																"nodeType": "YulFunctionCall",
																"src": "816:41:0"
															},
															"nativeSrc": "816:41:0",
															"nodeType": "YulExpressionStatement",
															"src": "816:41:0"
														},
														{
															"body": {
																"nativeSrc": "927:92:0",
																"nodeType": "YulBlock",
																"src": "927:92:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "952:1:0",
																					"nodeType": "YulLiteral",
																					"src": "952:1:0",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "955:1:0",
																					"nodeType": "YulLiteral",
																					"src": "955:1:0",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "958:14:0",
																						"nodeType": "YulIdentifier",
																						"src": "958:14:0"
																					},
																					"nativeSrc": "958:16:0",
																					"nodeType": "YulFunctionCall",
																					"src": "958:16:0"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "937:14:0",
																				"nodeType": "YulIdentifier",
																				"src": "937:14:0"
																			},
																			"nativeSrc": "937:38:0",
																			"nodeType": "YulFunctionCall",
																			"src": "937:38:0"
																		},
																		"nativeSrc": "937:38:0",
																		"nodeType": "YulExpressionStatement",
																		"src": "937:38:0"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "991:1:0",
																					"nodeType": "YulLiteral",
																					"src": "991:1:0",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "994:14:0",
																						"nodeType": "YulIdentifier",
																						"src": "994:14:0"
																					},
																					"nativeSrc": "994:16:0",
																					"nodeType": "YulFunctionCall",
																					"src": "994:16:0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "984:6:0",
																				"nodeType": "YulIdentifier",
																				"src": "984:6:0"
																			},
																			"nativeSrc": "984:27:0",
																			"nodeType": "YulFunctionCall",
																			"src": "984:27:0"
																		},
																		"nativeSrc": "984:27:0",
																		"nodeType": "YulExpressionStatement",
																		"src": "984:27:0"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "gas",
																					"nativeSrc": "880:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "880:3:0"
																				},
																				"nativeSrc": "880:5:0",
																				"nodeType": "YulFunctionCall",
																				"src": "880:5:0"
																			},
																			{
																				"name": "token",
																				"nativeSrc": "887:5:0",
																				"nodeType": "YulIdentifier",
																				"src": "887:5:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "894:1:0",
																				"nodeType": "YulLiteral",
																				"src": "894:1:0",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"name": "freeMemoryPointer",
																				"nativeSrc": "897:17:0",
																				"nodeType": "YulIdentifier",
																				"src": "897:17:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "916:2:0",
																				"nodeType": "YulLiteral",
																				"src": "916:2:0",
																				"type": "",
																				"value": "68"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "920:1:0",
																				"nodeType": "YulLiteral",
																				"src": "920:1:0",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "923:1:0",
																				"nodeType": "YulLiteral",
																				"src": "923:1:0",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "call",
																			"nativeSrc": "875:4:0",
																			"nodeType": "YulIdentifier",
																			"src": "875:4:0"
																		},
																		"nativeSrc": "875:50:0",
																		"nodeType": "YulFunctionCall",
																		"src": "875:50:0"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "868:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "868:6:0"
																},
																"nativeSrc": "868:58:0",
																"nodeType": "YulFunctionCall",
																"src": "868:58:0"
															},
															"nativeSrc": "865:154:0",
															"nodeType": "YulIf",
															"src": "865:154:0"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 16,
														"isOffset": false,
														"isSlot": false,
														"src": "706:9:0",
														"valueSize": 1
													},
													{
														"declaration": 10,
														"isOffset": false,
														"isSlot": false,
														"src": "761:2:0",
														"valueSize": 1
													},
													{
														"declaration": 8,
														"isOffset": false,
														"isSlot": false,
														"src": "887:5:0",
														"valueSize": 1
													},
													{
														"declaration": 12,
														"isOffset": false,
														"isSlot": false,
														"src": "851:5:0",
														"valueSize": 1
													}
												],
												"id": 21,
												"nodeType": "InlineAssembly",
												"src": "620:405:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 24,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 8,
																	"src": "1061:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$471",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$471",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 23,
																"name": "getLastTransferResult",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 69,
																"src": "1039:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$471_$returns$_t_bool_$",
																	"typeString": "function (contract IERC20) view returns (bool)"
																}
															},
															"id": 25,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1039:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "475076323a206661696c6564207472616e73666572",
															"id": 26,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1069:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bcd627324e1455f8429089871957d6f7804c9418ddab92671c4a49f81f3fae96",
																"typeString": "literal_string \"GPv2: failed transfer\""
															},
															"value": "GPv2: failed transfer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bcd627324e1455f8429089871957d6f7804c9418ddab92671c4a49f81f3fae96",
																"typeString": "literal_string \"GPv2: failed transfer\""
															}
														],
														"id": 22,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1031:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1031:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1031:62:0"
											}
										]
									},
									"documentation": {
										"id": 5,
										"nodeType": "StructuredDocumentation",
										"src": "319:119:0",
										"text": "@dev Wrapper around a call to the ERC20 function `transfer` that reverts\n also when the token returns `false`."
									},
									"id": 30,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "450:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "470:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "463:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$471",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 7,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 6,
														"name": "IERC20",
														"nameLocations": [
															"463:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 471,
														"src": "463:6:0"
													},
													"referencedDeclaration": 471,
													"src": "463:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$471",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "485:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "477:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 9,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "477:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "497:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "489:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "489:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "462:41:0"
									},
									"returnParameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:0:0"
									},
									"scope": 70,
									"src": "441:657:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1318:690:0",
										"statements": [
											{
												"assignments": [
													44
												],
												"declarations": [
													{
														"constant": false,
														"id": 44,
														"mutability": "mutable",
														"name": "selector_",
														"nameLocation": "1331:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 57,
														"src": "1324:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"typeName": {
															"id": 43,
															"name": "bytes4",
															"nodeType": "ElementaryTypeName",
															"src": "1324:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 48,
												"initialValue": {
													"expression": {
														"expression": {
															"id": 45,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 34,
															"src": "1343:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$471",
																"typeString": "contract IERC20"
															}
														},
														"id": 46,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1349:12:0",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 452,
														"src": "1343:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1362:8:0",
													"memberName": "selector",
													"nodeType": "MemberAccess",
													"src": "1343:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1324:46:0"
											},
											{
												"AST": {
													"nativeSrc": "1438:493:0",
													"nodeType": "YulBlock",
													"src": "1438:493:0",
													"statements": [
														{
															"nativeSrc": "1446:36:0",
															"nodeType": "YulVariableDeclaration",
															"src": "1446:36:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1477:4:0",
																		"nodeType": "YulLiteral",
																		"src": "1477:4:0",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1471:5:0",
																	"nodeType": "YulIdentifier",
																	"src": "1471:5:0"
																},
																"nativeSrc": "1471:11:0",
																"nodeType": "YulFunctionCall",
																"src": "1471:11:0"
															},
															"variables": [
																{
																	"name": "freeMemoryPointer",
																	"nativeSrc": "1450:17:0",
																	"nodeType": "YulTypedName",
																	"src": "1450:17:0",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "freeMemoryPointer",
																		"nativeSrc": "1496:17:0",
																		"nodeType": "YulIdentifier",
																		"src": "1496:17:0"
																	},
																	{
																		"name": "selector_",
																		"nativeSrc": "1515:9:0",
																		"nodeType": "YulIdentifier",
																		"src": "1515:9:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1489:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "1489:6:0"
																},
																"nativeSrc": "1489:36:0",
																"nodeType": "YulFunctionCall",
																"src": "1489:36:0"
															},
															"nativeSrc": "1489:36:0",
															"nodeType": "YulExpressionStatement",
															"src": "1489:36:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "freeMemoryPointer",
																				"nativeSrc": "1543:17:0",
																				"nodeType": "YulIdentifier",
																				"src": "1543:17:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1562:1:0",
																				"nodeType": "YulLiteral",
																				"src": "1562:1:0",
																				"type": "",
																				"value": "4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1539:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "1539:3:0"
																		},
																		"nativeSrc": "1539:25:0",
																		"nodeType": "YulFunctionCall",
																		"src": "1539:25:0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "from",
																				"nativeSrc": "1570:4:0",
																				"nodeType": "YulIdentifier",
																				"src": "1570:4:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1576:42:0",
																				"nodeType": "YulLiteral",
																				"src": "1576:42:0",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1566:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "1566:3:0"
																		},
																		"nativeSrc": "1566:53:0",
																		"nodeType": "YulFunctionCall",
																		"src": "1566:53:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1532:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "1532:6:0"
																},
																"nativeSrc": "1532:88:0",
																"nodeType": "YulFunctionCall",
																"src": "1532:88:0"
															},
															"nativeSrc": "1532:88:0",
															"nodeType": "YulExpressionStatement",
															"src": "1532:88:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "freeMemoryPointer",
																				"nativeSrc": "1638:17:0",
																				"nodeType": "YulIdentifier",
																				"src": "1638:17:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1657:2:0",
																				"nodeType": "YulLiteral",
																				"src": "1657:2:0",
																				"type": "",
																				"value": "36"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1634:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "1634:3:0"
																		},
																		"nativeSrc": "1634:26:0",
																		"nodeType": "YulFunctionCall",
																		"src": "1634:26:0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "to",
																				"nativeSrc": "1666:2:0",
																				"nodeType": "YulIdentifier",
																				"src": "1666:2:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1670:42:0",
																				"nodeType": "YulLiteral",
																				"src": "1670:42:0",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1662:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "1662:3:0"
																		},
																		"nativeSrc": "1662:51:0",
																		"nodeType": "YulFunctionCall",
																		"src": "1662:51:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1627:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "1627:6:0"
																},
																"nativeSrc": "1627:87:0",
																"nodeType": "YulFunctionCall",
																"src": "1627:87:0"
															},
															"nativeSrc": "1627:87:0",
															"nodeType": "YulExpressionStatement",
															"src": "1627:87:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "freeMemoryPointer",
																				"nativeSrc": "1732:17:0",
																				"nodeType": "YulIdentifier",
																				"src": "1732:17:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1751:2:0",
																				"nodeType": "YulLiteral",
																				"src": "1751:2:0",
																				"type": "",
																				"value": "68"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1728:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "1728:3:0"
																		},
																		"nativeSrc": "1728:26:0",
																		"nodeType": "YulFunctionCall",
																		"src": "1728:26:0"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "1756:5:0",
																		"nodeType": "YulIdentifier",
																		"src": "1756:5:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1721:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "1721:6:0"
																},
																"nativeSrc": "1721:41:0",
																"nodeType": "YulFunctionCall",
																"src": "1721:41:0"
															},
															"nativeSrc": "1721:41:0",
															"nodeType": "YulExpressionStatement",
															"src": "1721:41:0"
														},
														{
															"body": {
																"nativeSrc": "1833:92:0",
																"nodeType": "YulBlock",
																"src": "1833:92:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1858:1:0",
																					"nodeType": "YulLiteral",
																					"src": "1858:1:0",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1861:1:0",
																					"nodeType": "YulLiteral",
																					"src": "1861:1:0",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "1864:14:0",
																						"nodeType": "YulIdentifier",
																						"src": "1864:14:0"
																					},
																					"nativeSrc": "1864:16:0",
																					"nodeType": "YulFunctionCall",
																					"src": "1864:16:0"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "1843:14:0",
																				"nodeType": "YulIdentifier",
																				"src": "1843:14:0"
																			},
																			"nativeSrc": "1843:38:0",
																			"nodeType": "YulFunctionCall",
																			"src": "1843:38:0"
																		},
																		"nativeSrc": "1843:38:0",
																		"nodeType": "YulExpressionStatement",
																		"src": "1843:38:0"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1897:1:0",
																					"nodeType": "YulLiteral",
																					"src": "1897:1:0",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "1900:14:0",
																						"nodeType": "YulIdentifier",
																						"src": "1900:14:0"
																					},
																					"nativeSrc": "1900:16:0",
																					"nodeType": "YulFunctionCall",
																					"src": "1900:16:0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1890:6:0",
																				"nodeType": "YulIdentifier",
																				"src": "1890:6:0"
																			},
																			"nativeSrc": "1890:27:0",
																			"nodeType": "YulFunctionCall",
																			"src": "1890:27:0"
																		},
																		"nativeSrc": "1890:27:0",
																		"nodeType": "YulExpressionStatement",
																		"src": "1890:27:0"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "gas",
																					"nativeSrc": "1785:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "1785:3:0"
																				},
																				"nativeSrc": "1785:5:0",
																				"nodeType": "YulFunctionCall",
																				"src": "1785:5:0"
																			},
																			{
																				"name": "token",
																				"nativeSrc": "1792:5:0",
																				"nodeType": "YulIdentifier",
																				"src": "1792:5:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1799:1:0",
																				"nodeType": "YulLiteral",
																				"src": "1799:1:0",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"name": "freeMemoryPointer",
																				"nativeSrc": "1802:17:0",
																				"nodeType": "YulIdentifier",
																				"src": "1802:17:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1821:3:0",
																				"nodeType": "YulLiteral",
																				"src": "1821:3:0",
																				"type": "",
																				"value": "100"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1826:1:0",
																				"nodeType": "YulLiteral",
																				"src": "1826:1:0",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1829:1:0",
																				"nodeType": "YulLiteral",
																				"src": "1829:1:0",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "call",
																			"nativeSrc": "1780:4:0",
																			"nodeType": "YulIdentifier",
																			"src": "1780:4:0"
																		},
																		"nativeSrc": "1780:51:0",
																		"nodeType": "YulFunctionCall",
																		"src": "1780:51:0"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1773:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "1773:6:0"
																},
																"nativeSrc": "1773:59:0",
																"nodeType": "YulFunctionCall",
																"src": "1773:59:0"
															},
															"nativeSrc": "1770:155:0",
															"nodeType": "YulIf",
															"src": "1770:155:0"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 36,
														"isOffset": false,
														"isSlot": false,
														"src": "1570:4:0",
														"valueSize": 1
													},
													{
														"declaration": 44,
														"isOffset": false,
														"isSlot": false,
														"src": "1515:9:0",
														"valueSize": 1
													},
													{
														"declaration": 38,
														"isOffset": false,
														"isSlot": false,
														"src": "1666:2:0",
														"valueSize": 1
													},
													{
														"declaration": 34,
														"isOffset": false,
														"isSlot": false,
														"src": "1792:5:0",
														"valueSize": 1
													},
													{
														"declaration": 40,
														"isOffset": false,
														"isSlot": false,
														"src": "1756:5:0",
														"valueSize": 1
													}
												],
												"id": 49,
												"nodeType": "InlineAssembly",
												"src": "1429:502:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 52,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 34,
																	"src": "1967:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$471",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$471",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 51,
																"name": "getLastTransferResult",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 69,
																"src": "1945:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$471_$returns$_t_bool_$",
																	"typeString": "function (contract IERC20) view returns (bool)"
																}
															},
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1945:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "475076323a206661696c6564207472616e7366657246726f6d",
															"id": 54,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1975:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_910928af3c8209d55654c19deb64d9d16f87d0d58e9e40975f82488ba9b27d7e",
																"typeString": "literal_string \"GPv2: failed transferFrom\""
															},
															"value": "GPv2: failed transferFrom"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_910928af3c8209d55654c19deb64d9d16f87d0d58e9e40975f82488ba9b27d7e",
																"typeString": "literal_string \"GPv2: failed transferFrom\""
															}
														],
														"id": 50,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1937:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 55,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1937:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 56,
												"nodeType": "ExpressionStatement",
												"src": "1937:66:0"
											}
										]
									},
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1102:123:0",
										"text": "@dev Wrapper around a call to the ERC20 function `transferFrom` that\n reverts also when the token returns `false`."
									},
									"id": 58,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1237:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1261:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "1254:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$471",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 33,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 32,
														"name": "IERC20",
														"nameLocations": [
															"1254:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 471,
														"src": "1254:6:0"
													},
													"referencedDeclaration": 471,
													"src": "1254:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$471",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1276:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "1268:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 35,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1268:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1290:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "1282:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1282:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1302:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "1294:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 39,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1294:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1253:55:0"
									},
									"returnParameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1318:0:0"
									},
									"scope": 70,
									"src": "1228:780:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 68,
										"nodeType": "Block",
										"src": "2279:2443:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2741:1977:0",
													"nodeType": "YulBlock",
													"src": "2741:1977:0",
													"statements": [
														{
															"body": {
																"nativeSrc": "3367:163:0",
																"nodeType": "YulBlock",
																"src": "3367:163:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3384:4:0",
																					"nodeType": "YulLiteral",
																					"src": "3384:4:0",
																					"type": "",
																					"value": "0x00"
																				},
																				{
																					"hexValue": "08c379a0",
																					"kind": "string",
																					"nativeSrc": "3390:18:0",
																					"nodeType": "YulLiteral",
																					"src": "3390:18:0",
																					"type": ""
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3377:6:0",
																				"nodeType": "YulIdentifier",
																				"src": "3377:6:0"
																			},
																			"nativeSrc": "3377:32:0",
																			"nodeType": "YulFunctionCall",
																			"src": "3377:32:0"
																		},
																		"nativeSrc": "3377:32:0",
																		"nodeType": "YulExpressionStatement",
																		"src": "3377:32:0"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3425:4:0",
																					"nodeType": "YulLiteral",
																					"src": "3425:4:0",
																					"type": "",
																					"value": "0x04"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3431:4:0",
																					"nodeType": "YulLiteral",
																					"src": "3431:4:0",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3418:6:0",
																				"nodeType": "YulIdentifier",
																				"src": "3418:6:0"
																			},
																			"nativeSrc": "3418:18:0",
																			"nodeType": "YulFunctionCall",
																			"src": "3418:18:0"
																		},
																		"nativeSrc": "3418:18:0",
																		"nodeType": "YulExpressionStatement",
																		"src": "3418:18:0"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3452:4:0",
																					"nodeType": "YulLiteral",
																					"src": "3452:4:0",
																					"type": "",
																					"value": "0x24"
																				},
																				{
																					"name": "length",
																					"nativeSrc": "3458:6:0",
																					"nodeType": "YulIdentifier",
																					"src": "3458:6:0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3445:6:0",
																				"nodeType": "YulIdentifier",
																				"src": "3445:6:0"
																			},
																			"nativeSrc": "3445:20:0",
																			"nodeType": "YulFunctionCall",
																			"src": "3445:20:0"
																		},
																		"nativeSrc": "3445:20:0",
																		"nodeType": "YulExpressionStatement",
																		"src": "3445:20:0"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3481:4:0",
																					"nodeType": "YulLiteral",
																					"src": "3481:4:0",
																					"type": "",
																					"value": "0x44"
																				},
																				{
																					"name": "message",
																					"nativeSrc": "3487:7:0",
																					"nodeType": "YulIdentifier",
																					"src": "3487:7:0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3474:6:0",
																				"nodeType": "YulIdentifier",
																				"src": "3474:6:0"
																			},
																			"nativeSrc": "3474:21:0",
																			"nodeType": "YulFunctionCall",
																			"src": "3474:21:0"
																		},
																		"nativeSrc": "3474:21:0",
																		"nodeType": "YulExpressionStatement",
																		"src": "3474:21:0"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3511:4:0",
																					"nodeType": "YulLiteral",
																					"src": "3511:4:0",
																					"type": "",
																					"value": "0x00"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3517:4:0",
																					"nodeType": "YulLiteral",
																					"src": "3517:4:0",
																					"type": "",
																					"value": "0x64"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3504:6:0",
																				"nodeType": "YulIdentifier",
																				"src": "3504:6:0"
																			},
																			"nativeSrc": "3504:18:0",
																			"nodeType": "YulFunctionCall",
																			"src": "3504:18:0"
																		},
																		"nativeSrc": "3504:18:0",
																		"nodeType": "YulExpressionStatement",
																		"src": "3504:18:0"
																	}
																]
															},
															"name": "revertWithMessage",
															"nativeSrc": "3323:207:0",
															"nodeType": "YulFunctionDefinition",
															"parameters": [
																{
																	"name": "length",
																	"nativeSrc": "3350:6:0",
																	"nodeType": "YulTypedName",
																	"src": "3350:6:0",
																	"type": ""
																},
																{
																	"name": "message",
																	"nativeSrc": "3358:7:0",
																	"nodeType": "YulTypedName",
																	"src": "3358:7:0",
																	"type": ""
																}
															],
															"src": "3323:207:0"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "3628:434:0",
																		"nodeType": "YulBlock",
																		"src": "3628:434:0",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "3965:67:0",
																					"nodeType": "YulBlock",
																					"src": "3965:67:0",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "3995:2:0",
																										"nodeType": "YulLiteral",
																										"src": "3995:2:0",
																										"type": "",
																										"value": "20"
																									},
																									{
																										"hexValue": "475076323a206e6f74206120636f6e7472616374",
																										"kind": "string",
																										"nativeSrc": "3999:22:0",
																										"nodeType": "YulLiteral",
																										"src": "3999:22:0",
																										"type": "",
																										"value": "GPv2: not a contract"
																									}
																								],
																								"functionName": {
																									"name": "revertWithMessage",
																									"nativeSrc": "3977:17:0",
																									"nodeType": "YulIdentifier",
																									"src": "3977:17:0"
																								},
																								"nativeSrc": "3977:45:0",
																								"nodeType": "YulFunctionCall",
																								"src": "3977:45:0"
																							},
																							"nativeSrc": "3977:45:0",
																							"nodeType": "YulExpressionStatement",
																							"src": "3977:45:0"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "token",
																									"nativeSrc": "3957:5:0",
																									"nodeType": "YulIdentifier",
																									"src": "3957:5:0"
																								}
																							],
																							"functionName": {
																								"name": "extcodesize",
																								"nativeSrc": "3945:11:0",
																								"nodeType": "YulIdentifier",
																								"src": "3945:11:0"
																							},
																							"nativeSrc": "3945:18:0",
																							"nodeType": "YulFunctionCall",
																							"src": "3945:18:0"
																						}
																					],
																					"functionName": {
																						"name": "iszero",
																						"nativeSrc": "3938:6:0",
																						"nodeType": "YulIdentifier",
																						"src": "3938:6:0"
																					},
																					"nativeSrc": "3938:26:0",
																					"nodeType": "YulFunctionCall",
																					"src": "3938:26:0"
																				},
																				"nativeSrc": "3935:97:0",
																				"nodeType": "YulIf",
																				"src": "3935:97:0"
																			},
																			{
																				"nativeSrc": "4042:12:0",
																				"nodeType": "YulAssignment",
																				"src": "4042:12:0",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4053:1:0",
																					"nodeType": "YulLiteral",
																					"src": "4053:1:0",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "success",
																						"nativeSrc": "4042:7:0",
																						"nodeType": "YulIdentifier",
																						"src": "4042:7:0"
																					}
																				]
																			}
																		]
																	},
																	"nativeSrc": "3621:441:0",
																	"nodeType": "YulCase",
																	"src": "3621:441:0",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3626:1:0",
																		"nodeType": "YulLiteral",
																		"src": "3626:1:0",
																		"type": "",
																		"value": "0"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "4143:480:0",
																		"nodeType": "YulBlock",
																		"src": "4143:480:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "4168:1:0",
																							"nodeType": "YulLiteral",
																							"src": "4168:1:0",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "4171:1:0",
																							"nodeType": "YulLiteral",
																							"src": "4171:1:0",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"arguments": [],
																							"functionName": {
																								"name": "returndatasize",
																								"nativeSrc": "4174:14:0",
																								"nodeType": "YulIdentifier",
																								"src": "4174:14:0"
																							},
																							"nativeSrc": "4174:16:0",
																							"nodeType": "YulFunctionCall",
																							"src": "4174:16:0"
																						}
																					],
																					"functionName": {
																						"name": "returndatacopy",
																						"nativeSrc": "4153:14:0",
																						"nodeType": "YulIdentifier",
																						"src": "4153:14:0"
																					},
																					"nativeSrc": "4153:38:0",
																					"nodeType": "YulFunctionCall",
																					"src": "4153:38:0"
																				},
																				"nativeSrc": "4153:38:0",
																				"nodeType": "YulExpressionStatement",
																				"src": "4153:38:0"
																			},
																			{
																				"nativeSrc": "4580:35:0",
																				"nodeType": "YulAssignment",
																				"src": "4580:35:0",
																				"value": {
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "4611:1:0",
																											"nodeType": "YulLiteral",
																											"src": "4611:1:0",
																											"type": "",
																											"value": "0"
																										}
																									],
																									"functionName": {
																										"name": "mload",
																										"nativeSrc": "4605:5:0",
																										"nodeType": "YulIdentifier",
																										"src": "4605:5:0"
																									},
																									"nativeSrc": "4605:8:0",
																									"nodeType": "YulFunctionCall",
																									"src": "4605:8:0"
																								}
																							],
																							"functionName": {
																								"name": "iszero",
																								"nativeSrc": "4598:6:0",
																								"nodeType": "YulIdentifier",
																								"src": "4598:6:0"
																							},
																							"nativeSrc": "4598:16:0",
																							"nodeType": "YulFunctionCall",
																							"src": "4598:16:0"
																						}
																					],
																					"functionName": {
																						"name": "iszero",
																						"nativeSrc": "4591:6:0",
																						"nodeType": "YulIdentifier",
																						"src": "4591:6:0"
																					},
																					"nativeSrc": "4591:24:0",
																					"nodeType": "YulFunctionCall",
																					"src": "4591:24:0"
																				},
																				"variableNames": [
																					{
																						"name": "success",
																						"nativeSrc": "4580:7:0",
																						"nodeType": "YulIdentifier",
																						"src": "4580:7:0"
																					}
																				]
																			}
																		]
																	},
																	"nativeSrc": "4135:488:0",
																	"nodeType": "YulCase",
																	"src": "4135:488:0",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4140:2:0",
																		"nodeType": "YulLiteral",
																		"src": "4140:2:0",
																		"type": "",
																		"value": "32"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "4638:74:0",
																		"nodeType": "YulBlock",
																		"src": "4638:74:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "4666:2:0",
																							"nodeType": "YulLiteral",
																							"src": "4666:2:0",
																							"type": "",
																							"value": "31"
																						},
																						{
																							"hexValue": "475076323a206d616c666f726d6564207472616e7366657220726573756c74",
																							"kind": "string",
																							"nativeSrc": "4670:33:0",
																							"nodeType": "YulLiteral",
																							"src": "4670:33:0",
																							"type": "",
																							"value": "GPv2: malformed transfer result"
																						}
																					],
																					"functionName": {
																						"name": "revertWithMessage",
																						"nativeSrc": "4648:17:0",
																						"nodeType": "YulIdentifier",
																						"src": "4648:17:0"
																					},
																					"nativeSrc": "4648:56:0",
																					"nodeType": "YulFunctionCall",
																					"src": "4648:56:0"
																				},
																				"nativeSrc": "4648:56:0",
																				"nodeType": "YulExpressionStatement",
																				"src": "4648:56:0"
																			}
																		]
																	},
																	"nativeSrc": "4630:82:0",
																	"nodeType": "YulCase",
																	"src": "4630:82:0",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "3545:14:0",
																	"nodeType": "YulIdentifier",
																	"src": "3545:14:0"
																},
																"nativeSrc": "3545:16:0",
																"nodeType": "YulFunctionCall",
																"src": "3545:16:0"
															},
															"nativeSrc": "3538:1174:0",
															"nodeType": "YulSwitch",
															"src": "3538:1174:0"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 65,
														"isOffset": false,
														"isSlot": false,
														"src": "4042:7:0",
														"valueSize": 1
													},
													{
														"declaration": 65,
														"isOffset": false,
														"isSlot": false,
														"src": "4580:7:0",
														"valueSize": 1
													},
													{
														"declaration": 62,
														"isOffset": false,
														"isSlot": false,
														"src": "3957:5:0",
														"valueSize": 1
													}
												],
												"id": 67,
												"nodeType": "InlineAssembly",
												"src": "2732:1986:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "2012:183:0",
										"text": "@dev Verifies that the last return was a successful `transfer*` call.\n This is done by checking that the return data is either empty, or\n is a valid ABI encoded boolean."
									},
									"id": 69,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getLastTransferResult",
									"nameLocation": "2207:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2236:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "2229:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$471",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 61,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 60,
														"name": "IERC20",
														"nameLocations": [
															"2229:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 471,
														"src": "2229:6:0"
													},
													"referencedDeclaration": 471,
													"src": "2229:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$471",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2228:14:0"
									},
									"returnParameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "2270:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "2265:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 64,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2265:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2264:14:0"
									},
									"scope": 70,
									"src": "2198:2524:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 71,
							"src": "293:4431:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "46:4679:0"
				},
				"id": 0
			},
			"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Address.sol": {
				"ast": {
					"absolutePath": "@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Address.sol",
					"exportedSymbols": {
						"Address": [
							367
						]
					},
					"id": 368,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 72,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 73,
								"nodeType": "StructuredDocumentation",
								"src": "111:67:1",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 367,
							"linearizedBaseContracts": [
								367
							],
							"name": "Address",
							"nameLocation": "187:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 89,
										"nodeType": "Block",
										"src": "801:275:1",
										"statements": [
											{
												"assignments": [
													82
												],
												"declarations": [
													{
														"constant": false,
														"id": 82,
														"mutability": "mutable",
														"name": "size",
														"nameLocation": "990:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 89,
														"src": "982:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 81,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "982:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 83,
												"nodeType": "VariableDeclarationStatement",
												"src": "982:12:1"
											},
											{
												"AST": {
													"nativeSrc": "1009:42:1",
													"nodeType": "YulBlock",
													"src": "1009:42:1",
													"statements": [
														{
															"nativeSrc": "1017:28:1",
															"nodeType": "YulAssignment",
															"src": "1017:28:1",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nativeSrc": "1037:7:1",
																		"nodeType": "YulIdentifier",
																		"src": "1037:7:1"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nativeSrc": "1025:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "1025:11:1"
																},
																"nativeSrc": "1025:20:1",
																"nodeType": "YulFunctionCall",
																"src": "1025:20:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1017:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1017:4:1"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 76,
														"isOffset": false,
														"isSlot": false,
														"src": "1037:7:1",
														"valueSize": 1
													},
													{
														"declaration": 82,
														"isOffset": false,
														"isSlot": false,
														"src": "1017:4:1",
														"valueSize": 1
													}
												],
												"id": 84,
												"nodeType": "InlineAssembly",
												"src": "1000:51:1"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 87,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 85,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 82,
														"src": "1063:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 86,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1070:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1063:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 80,
												"id": 88,
												"nodeType": "Return",
												"src": "1056:15:1"
											}
										]
									},
									"documentation": {
										"id": 74,
										"nodeType": "StructuredDocumentation",
										"src": "199:533:1",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 90,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "744:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "763:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "755:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 75,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "755:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "754:17:1"
									},
									"returnParameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "795:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 78,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "795:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "794:6:1"
									},
									"scope": 367,
									"src": "735:341:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 123,
										"nodeType": "Block",
										"src": "2030:227:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 105,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 101,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2052:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$367",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$367",
																				"typeString": "library Address"
																			}
																		],
																		"id": 100,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2044:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 99,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2044:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 102,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2044:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 103,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2058:7:1",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2044:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 104,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 95,
																"src": "2069:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2044:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 106,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2077:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 98,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2036:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2036:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 108,
												"nodeType": "ExpressionStatement",
												"src": "2036:73:1"
											},
											{
												"assignments": [
													110,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 110,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2122:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 123,
														"src": "2117:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 109,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2117:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 117,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 115,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2165:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 111,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 93,
																"src": "2135:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 112,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2145:4:1",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2135:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 114,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 113,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 95,
																"src": "2157:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2135:29:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2135:33:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2116:52:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 119,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 110,
															"src": "2182:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 120,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2191:60:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 118,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2174:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2174:78:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 122,
												"nodeType": "ExpressionStatement",
												"src": "2174:78:1"
											}
										]
									},
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "1080:876:1",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1968:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1994:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "1978:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1978:15:1",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2013:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "2005:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2005:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1977:43:1"
									},
									"returnParameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2030:0:1"
									},
									"scope": 367,
									"src": "1959:298:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 140,
										"nodeType": "Block",
										"src": "3050:78:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 135,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 127,
															"src": "3076:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 136,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3084:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 137,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3090:32:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 134,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															141,
															161
														],
														"referencedDeclaration": 161,
														"src": "3063:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3063:60:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 133,
												"id": 139,
												"nodeType": "Return",
												"src": "3056:67:1"
											}
										]
									},
									"documentation": {
										"id": 125,
										"nodeType": "StructuredDocumentation",
										"src": "2261:697:1",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 141,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2970:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2991:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "2983:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2983:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3012:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "2999:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 128,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2999:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2982:35:1"
									},
									"returnParameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "3036:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 131,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3036:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3035:14:1"
									},
									"scope": 367,
									"src": "2961:167:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 160,
										"nodeType": "Block",
										"src": "3469:70:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 154,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 144,
															"src": "3504:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 155,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 146,
															"src": "3512:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 156,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3518:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 157,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 148,
															"src": "3521:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 153,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															181,
															231
														],
														"referencedDeclaration": 231,
														"src": "3482:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3482:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 152,
												"id": 159,
												"nodeType": "Return",
												"src": "3475:59:1"
											}
										]
									},
									"documentation": {
										"id": 142,
										"nodeType": "StructuredDocumentation",
										"src": "3132:201:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 161,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3345:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3371:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "3363:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3363:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3396:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "3383:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 145,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3383:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3420:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "3406:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 147,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3406:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3357:79:1"
									},
									"returnParameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "3455:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 150,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3455:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3454:14:1"
									},
									"scope": 367,
									"src": "3336:203:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 180,
										"nodeType": "Block",
										"src": "4006:105:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 174,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 164,
															"src": "4041:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 175,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 166,
															"src": "4049:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 176,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 168,
															"src": "4055:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 177,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4062:43:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 173,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															181,
															231
														],
														"referencedDeclaration": 231,
														"src": "4019:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4019:87:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 172,
												"id": 179,
												"nodeType": "Return",
												"src": "4012:94:1"
											}
										]
									},
									"documentation": {
										"id": 162,
										"nodeType": "StructuredDocumentation",
										"src": "3543:331:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 181,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "3886:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3921:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "3913:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3913:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3946:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "3933:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 165,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3933:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3964:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "3956:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3956:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:66:1"
									},
									"returnParameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "3992:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 170,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3992:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3991:14:1"
									},
									"scope": 367,
									"src": "3877:234:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 230,
										"nodeType": "Block",
										"src": "4506:302:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 202,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 198,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4528:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$367",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$367",
																				"typeString": "library Address"
																			}
																		],
																		"id": 197,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4520:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 196,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4520:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 199,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4520:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 200,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4534:7:1",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "4520:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 201,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 188,
																"src": "4545:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4520:30:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 203,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4552:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 195,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4512:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4512:81:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 205,
												"nodeType": "ExpressionStatement",
												"src": "4512:81:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 208,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 184,
																	"src": "4618:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 207,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 90,
																"src": "4607:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 209,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4607:18:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 210,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4627:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 206,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4599:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4599:60:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 212,
												"nodeType": "ExpressionStatement",
												"src": "4599:60:1"
											},
											{
												"assignments": [
													214,
													216
												],
												"declarations": [
													{
														"constant": false,
														"id": 214,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4672:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 230,
														"src": "4667:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 213,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4667:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 216,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4694:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 230,
														"src": "4681:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 215,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4681:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 223,
												"initialValue": {
													"arguments": [
														{
															"id": 221,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 186,
															"src": "4734:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 217,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 184,
																"src": "4708:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 218,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4715:4:1",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "4708:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 220,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 219,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 188,
																"src": "4727:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "4708:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4708:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4666:73:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 225,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 214,
															"src": "4769:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 226,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "4778:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 227,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 190,
															"src": "4790:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 224,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 366,
														"src": "4752:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4752:51:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 194,
												"id": 229,
												"nodeType": "Return",
												"src": "4745:58:1"
											}
										]
									},
									"documentation": {
										"id": 182,
										"nodeType": "StructuredDocumentation",
										"src": "4115:227:1",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 231,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4354:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4389:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4381:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4381:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4414:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4401:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 185,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4401:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4432:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4424:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4424:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4457:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4443:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 189,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4443:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4375:98:1"
									},
									"returnParameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4492:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 192,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4492:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4491:14:1"
									},
									"scope": 367,
									"src": "4345:463:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 247,
										"nodeType": "Block",
										"src": "5083:91:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 242,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 234,
															"src": "5115:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 243,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 236,
															"src": "5123:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 244,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5129:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 241,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															248,
															283
														],
														"referencedDeclaration": 283,
														"src": "5096:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5096:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 240,
												"id": 246,
												"nodeType": "Return",
												"src": "5089:80:1"
											}
										]
									},
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4812:156:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 248,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "4980:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5012:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "5004:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5004:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5037:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "5024:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 235,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5024:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4998:47:1"
									},
									"returnParameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "5069:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 238,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5069:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5068:14:1"
									},
									"scope": 367,
									"src": "4971:203:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 282,
										"nodeType": "Block",
										"src": "5488:214:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 262,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 251,
																	"src": "5513:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 261,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 90,
																"src": "5502:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5502:18:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 264,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5522:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 260,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5494:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5494:67:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 266,
												"nodeType": "ExpressionStatement",
												"src": "5494:67:1"
											},
											{
												"assignments": [
													268,
													270
												],
												"declarations": [
													{
														"constant": false,
														"id": 268,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5574:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 282,
														"src": "5569:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 267,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5569:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 270,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5596:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 282,
														"src": "5583:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 269,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5583:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 275,
												"initialValue": {
													"arguments": [
														{
															"id": 273,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 253,
															"src": "5628:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 271,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 251,
															"src": "5610:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 272,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5617:10:1",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "5610:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5610:23:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5568:65:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 277,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 268,
															"src": "5663:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 278,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 270,
															"src": "5672:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 279,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 255,
															"src": "5684:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 276,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 366,
														"src": "5646:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5646:51:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 259,
												"id": 281,
												"nodeType": "Return",
												"src": "5639:58:1"
											}
										]
									},
									"documentation": {
										"id": 249,
										"nodeType": "StructuredDocumentation",
										"src": "5178:163:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 283,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5353:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5385:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "5377:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 250,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5377:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5410:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "5397:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 252,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5397:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5434:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "5420:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 254,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5420:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5371:79:1"
									},
									"returnParameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "5474:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 257,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5474:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5473:14:1"
									},
									"scope": 367,
									"src": "5344:358:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 299,
										"nodeType": "Block",
										"src": "5964:95:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 294,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 286,
															"src": "5998:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 295,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 288,
															"src": "6006:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 296,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6012:41:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 293,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															300,
															335
														],
														"referencedDeclaration": 335,
														"src": "5977:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5977:77:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 292,
												"id": 298,
												"nodeType": "Return",
												"src": "5970:84:1"
											}
										]
									},
									"documentation": {
										"id": 284,
										"nodeType": "StructuredDocumentation",
										"src": "5706:158:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 300,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "5876:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5905:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "5897:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 285,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5897:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5926:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "5913:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 287,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5913:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5896:35:1"
									},
									"returnParameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "5950:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 290,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5950:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5949:14:1"
									},
									"scope": 367,
									"src": "5867:192:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 334,
										"nodeType": "Block",
										"src": "6372:218:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 314,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 303,
																	"src": "6397:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 313,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 90,
																"src": "6386:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 315,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6386:18:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 316,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6406:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 312,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6378:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6378:69:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 318,
												"nodeType": "ExpressionStatement",
												"src": "6378:69:1"
											},
											{
												"assignments": [
													320,
													322
												],
												"declarations": [
													{
														"constant": false,
														"id": 320,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6460:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 334,
														"src": "6455:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 319,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6455:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 322,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6482:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 334,
														"src": "6469:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 321,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6469:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 327,
												"initialValue": {
													"arguments": [
														{
															"id": 325,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "6516:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 323,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 303,
															"src": "6496:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 324,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6503:12:1",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "6496:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6496:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6454:67:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 329,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 320,
															"src": "6551:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 330,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 322,
															"src": "6560:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 331,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "6572:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 328,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 366,
														"src": "6534:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6534:51:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 311,
												"id": 333,
												"nodeType": "Return",
												"src": "6527:58:1"
											}
										]
									},
									"documentation": {
										"id": 301,
										"nodeType": "StructuredDocumentation",
										"src": "6063:165:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 335,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6240:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6274:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "6266:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 302,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6266:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6299:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "6286:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 304,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6286:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6323:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "6309:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 306,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6309:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6260:79:1"
									},
									"returnParameters": {
										"id": 311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "6358:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 309,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6358:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6357:14:1"
									},
									"scope": 367,
									"src": "6231:359:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 365,
										"nodeType": "Block",
										"src": "6942:436:1",
										"statements": [
											{
												"condition": {
													"id": 347,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 338,
													"src": "6952:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 363,
													"nodeType": "Block",
													"src": "6999:375:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 354,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 351,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 340,
																		"src": "7071:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 352,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7082:6:1",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7071:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 353,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7091:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7071:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 361,
																"nodeType": "Block",
																"src": "7329:39:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 358,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 342,
																					"src": "7346:12:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 357,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "7339:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 359,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7339:20:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 360,
																		"nodeType": "ExpressionStatement",
																		"src": "7339:20:1"
																	}
																]
															},
															"id": 362,
															"nodeType": "IfStatement",
															"src": "7067:301:1",
															"trueBody": {
																"id": 356,
																"nodeType": "Block",
																"src": "7094:229:1",
																"statements": [
																	{
																		"AST": {
																			"nativeSrc": "7198:117:1",
																			"nodeType": "YulBlock",
																			"src": "7198:117:1",
																			"statements": [
																				{
																					"nativeSrc": "7210:40:1",
																					"nodeType": "YulVariableDeclaration",
																					"src": "7210:40:1",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nativeSrc": "7239:10:1",
																								"nodeType": "YulIdentifier",
																								"src": "7239:10:1"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nativeSrc": "7233:5:1",
																							"nodeType": "YulIdentifier",
																							"src": "7233:5:1"
																						},
																						"nativeSrc": "7233:17:1",
																						"nodeType": "YulFunctionCall",
																						"src": "7233:17:1"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nativeSrc": "7214:15:1",
																							"nodeType": "YulTypedName",
																							"src": "7214:15:1",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "7272:2:1",
																										"nodeType": "YulLiteral",
																										"src": "7272:2:1",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nativeSrc": "7276:10:1",
																										"nodeType": "YulIdentifier",
																										"src": "7276:10:1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "7268:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "7268:3:1"
																								},
																								"nativeSrc": "7268:19:1",
																								"nodeType": "YulFunctionCall",
																								"src": "7268:19:1"
																							},
																							{
																								"name": "returndata_size",
																								"nativeSrc": "7289:15:1",
																								"nodeType": "YulIdentifier",
																								"src": "7289:15:1"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nativeSrc": "7261:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "7261:6:1"
																						},
																						"nativeSrc": "7261:44:1",
																						"nodeType": "YulFunctionCall",
																						"src": "7261:44:1"
																					},
																					"nativeSrc": "7261:44:1",
																					"nodeType": "YulExpressionStatement",
																					"src": "7261:44:1"
																				}
																			]
																		},
																		"evmVersion": "cancun",
																		"externalReferences": [
																			{
																				"declaration": 340,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7239:10:1",
																				"valueSize": 1
																			},
																			{
																				"declaration": 340,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7276:10:1",
																				"valueSize": 1
																			}
																		],
																		"id": 355,
																		"nodeType": "InlineAssembly",
																		"src": "7189:126:1"
																	}
																]
															}
														}
													]
												},
												"id": 364,
												"nodeType": "IfStatement",
												"src": "6948:426:1",
												"trueBody": {
													"id": 350,
													"nodeType": "Block",
													"src": "6961:32:1",
													"statements": [
														{
															"expression": {
																"id": 348,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 340,
																"src": "6976:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 346,
															"id": 349,
															"nodeType": "Return",
															"src": "6969:17:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "6594:199:1",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 366,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "6805:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "6832:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "6827:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 337,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6827:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "6858:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "6845:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 339,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6845:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6888:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "6874:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 341,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6874:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6821:83:1"
									},
									"returnParameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "6928:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 344,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6928:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6927:14:1"
									},
									"scope": 367,
									"src": "6796:582:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 368,
							"src": "179:7201:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "86:7295:1"
				},
				"id": 1
			},
			"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Context.sol": {
				"ast": {
					"absolutePath": "@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Context.sol",
					"exportedSymbols": {
						"Context": [
							393
						]
					},
					"id": 394,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 369,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 393,
							"linearizedBaseContracts": [
								393
							],
							"name": "Context",
							"nameLocation": "575:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "657:37:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 376,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "678:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 377,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "682:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "678:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 375,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "670:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_payable_$",
															"typeString": "type(address payable)"
														},
														"typeName": {
															"id": 374,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "670:8:2",
															"stateMutability": "payable",
															"typeDescriptions": {}
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "670:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 373,
												"id": 379,
												"nodeType": "Return",
												"src": "663:26:2"
											}
										]
									},
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "596:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "606:2:2"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "640:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 371,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "640:15:2",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "639:17:2"
									},
									"scope": 393,
									"src": "587:107:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 391,
										"nodeType": "Block",
										"src": "763:155:2",
										"statements": [
											{
												"expression": {
													"id": 386,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4294967268,
													"src": "769:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$393",
														"typeString": "contract Context"
													}
												},
												"id": 387,
												"nodeType": "ExpressionStatement",
												"src": "769:4:2"
											},
											{
												"expression": {
													"expression": {
														"id": 388,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "905:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "909:4:2",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "905:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 385,
												"id": 390,
												"nodeType": "Return",
												"src": "898:15:2"
											}
										]
									},
									"id": 392,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "707:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "715:2:2"
									},
									"returnParameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "749:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 383,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "749:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "748:14:2"
									},
									"scope": 393,
									"src": "698:220:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 394,
							"src": "557:363:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:889:2"
				},
				"id": 2
			},
			"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/IERC20.sol": {
				"ast": {
					"absolutePath": "@aave/core-v3/contracts/dependencies/openzeppelin/contracts/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							471
						]
					},
					"id": 472,
					"license": "AGPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 395,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 396,
								"nodeType": "StructuredDocumentation",
								"src": "62:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 471,
							"linearizedBaseContracts": [
								471
							],
							"name": "IERC20",
							"nameLocation": "143:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 397,
										"nodeType": "StructuredDocumentation",
										"src": "154:62:3",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 402,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "228:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "239:2:3"
									},
									"returnParameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "265:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 399,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "265:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "264:9:3"
									},
									"scope": 471,
									"src": "219:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 403,
										"nodeType": "StructuredDocumentation",
										"src": "278:68:3",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 410,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "358:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "376:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "368:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 404,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "368:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "367:17:3"
									},
									"returnParameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "408:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 407,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "408:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "407:9:3"
									},
									"scope": 471,
									"src": "349:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 411,
										"nodeType": "StructuredDocumentation",
										"src": "421:197:3",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 420,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "630:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "647:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "639:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 412,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "639:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "666:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "658:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 414,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "638:35:3"
									},
									"returnParameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "692:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 417,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "692:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "691:6:3"
									},
									"scope": 471,
									"src": "621:77:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 421,
										"nodeType": "StructuredDocumentation",
										"src": "702:252:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 430,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "966:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "984:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "976:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 422,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "999:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "991:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 424,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "991:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "975:32:3"
									},
									"returnParameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "1031:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 427,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1031:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1030:9:3"
									},
									"scope": 471,
									"src": "957:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 431,
										"nodeType": "StructuredDocumentation",
										"src": "1044:616:3",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 440,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1672:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1688:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "1680:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 432,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1680:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1705:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "1697:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1697:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1679:33:3"
									},
									"returnParameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "1731:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 437,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1731:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1730:6:3"
									},
									"scope": 471,
									"src": "1663:74:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 441,
										"nodeType": "StructuredDocumentation",
										"src": "1741:280:3",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 452,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2033:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2054:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "2046:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 442,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2046:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2070:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "2062:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 444,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2062:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2089:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "2081:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 446,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2081:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2045:51:3"
									},
									"returnParameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "2115:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 449,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2115:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2114:6:3"
									},
									"scope": 471,
									"src": "2024:97:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 453,
										"nodeType": "StructuredDocumentation",
										"src": "2125:148:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 461,
									"name": "Transfer",
									"nameLocation": "2282:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 455,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2307:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "2291:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2329:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "2313:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 456,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2313:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 459,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2341:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "2333:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 458,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2333:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:57:3"
									},
									"src": "2276:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 462,
										"nodeType": "StructuredDocumentation",
										"src": "2352:142:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 470,
									"name": "Approval",
									"nameLocation": "2503:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 464,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2528:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 470,
												"src": "2512:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 463,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2512:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 466,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2551:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 470,
												"src": "2535:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 465,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2535:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 468,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2568:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 470,
												"src": "2560:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 467,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2560:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2511:63:3"
									},
									"src": "2497:78:3"
								}
							],
							"scope": 472,
							"src": "133:2444:3",
							"usedErrors": [],
							"usedEvents": [
								461,
								470
							]
						}
					],
					"src": "37:2541:3"
				},
				"id": 3
			},
			"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/IERC20Detailed.sol": {
				"ast": {
					"absolutePath": "@aave/core-v3/contracts/dependencies/openzeppelin/contracts/IERC20Detailed.sol",
					"exportedSymbols": {
						"IERC20": [
							471
						],
						"IERC20Detailed": [
							493
						]
					},
					"id": 494,
					"license": "AGPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 473,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:4"
						},
						{
							"absolutePath": "@aave/core-v3/contracts/dependencies/openzeppelin/contracts/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 475,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 494,
							"sourceUnit": 472,
							"src": "62:36:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 474,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 471,
										"src": "70:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 476,
										"name": "IERC20",
										"nameLocations": [
											"128:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 471,
										"src": "128:6:4"
									},
									"id": 477,
									"nodeType": "InheritanceSpecifier",
									"src": "128:6:4"
								}
							],
							"canonicalName": "IERC20Detailed",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 493,
							"linearizedBaseContracts": [
								493,
								471
							],
							"name": "IERC20Detailed",
							"nameLocation": "110:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "06fdde03",
									"id": 482,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "148:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "152:2:4"
									},
									"returnParameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "178:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 479,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "178:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "177:15:4"
									},
									"scope": 493,
									"src": "139:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "95d89b41",
									"id": 487,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "206:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "212:2:4"
									},
									"returnParameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "238:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 484,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "238:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "237:15:4"
									},
									"scope": 493,
									"src": "197:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "313ce567",
									"id": 492,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "266:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "274:2:4"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "300:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 489,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "300:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "299:7:4"
									},
									"scope": 493,
									"src": "257:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 494,
							"src": "100:209:4",
							"usedErrors": [],
							"usedEvents": [
								461,
								470
							]
						}
					],
					"src": "37:273:4"
				},
				"id": 4
			},
			"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol": {
				"ast": {
					"absolutePath": "@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							393
						],
						"Ownable": [
							602
						]
					},
					"id": 603,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 495,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:5"
						},
						{
							"absolutePath": "@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Context.sol",
							"file": "./Context.sol",
							"id": 496,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 603,
							"sourceUnit": 394,
							"src": "58:23:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 498,
										"name": "Context",
										"nameLocations": [
											"598:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 393,
										"src": "598:7:5"
									},
									"id": 499,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:5"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 497,
								"nodeType": "StructuredDocumentation",
								"src": "83:494:5",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 602,
							"linearizedBaseContracts": [
								602,
								393
							],
							"name": "Ownable",
							"nameLocation": "587:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 501,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "626:6:5",
									"nodeType": "VariableDeclaration",
									"scope": 602,
									"src": "610:22:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 500,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "610:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 507,
									"name": "OwnershipTransferred",
									"nameLocation": "643:20:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 503,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "680:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "664:29:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 502,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "664:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 505,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "711:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "695:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 504,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "695:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "663:57:5"
									},
									"src": "637:84:5"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "829:121:5",
										"statements": [
											{
												"assignments": [
													512
												],
												"declarations": [
													{
														"constant": false,
														"id": 512,
														"mutability": "mutable",
														"name": "msgSender",
														"nameLocation": "843:9:5",
														"nodeType": "VariableDeclaration",
														"scope": 528,
														"src": "835:17:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 511,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "835:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 515,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 513,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "855:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "855:12:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "835:32:5"
											},
											{
												"expression": {
													"id": 518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 516,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "873:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 517,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 512,
														"src": "882:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "873:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 519,
												"nodeType": "ExpressionStatement",
												"src": "873:18:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 523,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "931:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 522,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "923:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 521,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "923:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 524,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "923:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 512,
															"src": "935:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 520,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 507,
														"src": "902:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "902:43:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "EmitStatement",
												"src": "897:48:5"
											}
										]
									},
									"documentation": {
										"id": 508,
										"nodeType": "StructuredDocumentation",
										"src": "725:87:5",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 529,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "826:2:5"
									},
									"returnParameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "829:0:5"
									},
									"scope": 602,
									"src": "815:135:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 537,
										"nodeType": "Block",
										"src": "1065:24:5",
										"statements": [
											{
												"expression": {
													"id": 535,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 501,
													"src": "1078:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 534,
												"id": 536,
												"nodeType": "Return",
												"src": "1071:13:5"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "954:61:5",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 538,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1027:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 531,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1032:2:5"
									},
									"returnParameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "1056:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 532,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1056:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1055:9:5"
									},
									"scope": 602,
									"src": "1018:71:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 550,
										"nodeType": "Block",
										"src": "1190:85:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 545,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 542,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 501,
																"src": "1204:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 543,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 381,
																	"src": "1214:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 544,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1214:12:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1204:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 546,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1228:34:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 541,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1196:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1196:67:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 548,
												"nodeType": "ExpressionStatement",
												"src": "1196:67:5"
											},
											{
												"id": 549,
												"nodeType": "PlaceholderStatement",
												"src": "1269:1:5"
											}
										]
									},
									"documentation": {
										"id": 539,
										"nodeType": "StructuredDocumentation",
										"src": "1093:73:5",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 551,
									"name": "onlyOwner",
									"nameLocation": "1178:9:5",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1187:2:5"
									},
									"src": "1169:106:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 572,
										"nodeType": "Block",
										"src": "1655:81:5",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"id": 558,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 501,
															"src": "1687:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 561,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1703:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 560,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1695:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 559,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1695:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 562,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1695:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 557,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 507,
														"src": "1666:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 563,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1666:40:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 564,
												"nodeType": "EmitStatement",
												"src": "1661:45:5"
											},
											{
												"expression": {
													"id": 570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 565,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "1712:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 568,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1729:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 567,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1721:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 566,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1721:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 569,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1721:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1712:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 571,
												"nodeType": "ExpressionStatement",
												"src": "1712:19:5"
											}
										]
									},
									"documentation": {
										"id": 552,
										"nodeType": "StructuredDocumentation",
										"src": "1279:319:5",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 573,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 555,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 554,
												"name": "onlyOwner",
												"nameLocations": [
													"1645:9:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 551,
												"src": "1645:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "1645:9:5"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1610:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1627:2:5"
									},
									"returnParameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1655:0:5"
									},
									"scope": 602,
									"src": "1601:135:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 600,
										"nodeType": "Block",
										"src": "1945:156:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 587,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 582,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 576,
																"src": "1959:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 585,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1979:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 584,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1971:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 583,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1971:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 586,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1971:10:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1959:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 588,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1983:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 581,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1951:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1951:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 590,
												"nodeType": "ExpressionStatement",
												"src": "1951:73:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 592,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 501,
															"src": "2056:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 593,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 576,
															"src": "2064:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 591,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 507,
														"src": "2035:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2035:38:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 595,
												"nodeType": "EmitStatement",
												"src": "2030:43:5"
											},
											{
												"expression": {
													"id": 598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 596,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "2079:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 597,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 576,
														"src": "2088:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2079:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 599,
												"nodeType": "ExpressionStatement",
												"src": "2079:17:5"
											}
										]
									},
									"documentation": {
										"id": 574,
										"nodeType": "StructuredDocumentation",
										"src": "1740:132:5",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 601,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 579,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 578,
												"name": "onlyOwner",
												"nameLocations": [
													"1935:9:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 551,
												"src": "1935:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "1935:9:5"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1884:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1910:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "1902:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 575,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1902:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1901:18:5"
									},
									"returnParameters": {
										"id": 580,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1945:0:5"
									},
									"scope": 602,
									"src": "1875:226:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 603,
							"src": "578:1525:5",
							"usedErrors": [],
							"usedEvents": [
								507
							]
						}
					],
					"src": "33:2071:5"
				},
				"id": 5
			},
			"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@aave/core-v3/contracts/dependencies/openzeppelin/contracts/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							367
						],
						"IERC20": [
							471
						],
						"SafeERC20": [
							826
						]
					},
					"id": 827,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 604,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:6"
						},
						{
							"absolutePath": "@aave/core-v3/contracts/dependencies/openzeppelin/contracts/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 605,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 827,
							"sourceUnit": 472,
							"src": "125:22:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Address.sol",
							"file": "./Address.sol",
							"id": 606,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 827,
							"sourceUnit": 368,
							"src": "148:23:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 607,
								"nodeType": "StructuredDocumentation",
								"src": "173:457:6",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 826,
							"linearizedBaseContracts": [
								826
							],
							"name": "SafeERC20",
							"nameLocation": "639:9:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 610,
									"libraryName": {
										"id": 608,
										"name": "Address",
										"nameLocations": [
											"659:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 367,
										"src": "659:7:6"
									},
									"nodeType": "UsingForDirective",
									"src": "653:26:6",
									"typeName": {
										"id": 609,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "671:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 632,
										"nodeType": "Block",
										"src": "755:97:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 621,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 613,
															"src": "781:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$471",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 624,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 613,
																			"src": "811:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$471",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 625,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "817:8:6",
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 420,
																		"src": "811:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 626,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "826:8:6",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "811:23:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 627,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 615,
																	"src": "836:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 628,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 617,
																	"src": "840:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 622,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "788:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 623,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "792:18:6",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "788:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 629,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "788:58:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$471",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 620,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 825,
														"src": "761:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$471_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "761:86:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 631,
												"nodeType": "ExpressionStatement",
												"src": "761:86:6"
											}
										]
									},
									"id": 633,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "692:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "712:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "705:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$471",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 612,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 611,
														"name": "IERC20",
														"nameLocations": [
															"705:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 471,
														"src": "705:6:6"
													},
													"referencedDeclaration": 471,
													"src": "705:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$471",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "727:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "719:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 614,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "719:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "739:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "731:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 616,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "731:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "704:41:6"
									},
									"returnParameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "755:0:6"
									},
									"scope": 826,
									"src": "683:169:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 658,
										"nodeType": "Block",
										"src": "946:125:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 646,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 636,
															"src": "979:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$471",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 649,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 636,
																			"src": "1015:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$471",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 650,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1021:12:6",
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 452,
																		"src": "1015:18:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 651,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1034:8:6",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1015:27:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 652,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 638,
																	"src": "1044:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 653,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 640,
																	"src": "1050:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 654,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 642,
																	"src": "1054:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 647,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "992:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 648,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "996:18:6",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "992:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 655,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "992:68:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$471",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 645,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 825,
														"src": "952:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$471_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "952:114:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 657,
												"nodeType": "ExpressionStatement",
												"src": "952:114:6"
											}
										]
									},
									"id": 659,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "865:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "889:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "882:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$471",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 635,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 634,
														"name": "IERC20",
														"nameLocations": [
															"882:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 471,
														"src": "882:6:6"
													},
													"referencedDeclaration": 471,
													"src": "882:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$471",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "904:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "896:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 637,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "896:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "918:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "910:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 639,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "910:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "930:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "922:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 641,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "922:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "881:55:6"
									},
									"returnParameters": {
										"id": 644,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "946:0:6"
									},
									"scope": 826,
									"src": "856:215:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 702,
										"nodeType": "Block",
										"src": "1391:459:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 673,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 671,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 667,
																			"src": "1618:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 672,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1627:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1618:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 674,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1617:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 684,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 679,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "1658:4:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$826",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$826",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 678,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1650:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 677,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1650:7:6",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 680,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1650:13:6",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 681,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 665,
																					"src": "1665:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 675,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 663,
																					"src": "1634:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$471",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 676,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1640:9:6",
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 430,
																				"src": "1634:15:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 682,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1634:39:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 683,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1677:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1634:44:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 685,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1633:46:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1617:62:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 687,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1687:56:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 670,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1602:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1602:147:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 689,
												"nodeType": "ExpressionStatement",
												"src": "1602:147:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 691,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 663,
															"src": "1775:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$471",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 694,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 663,
																			"src": "1805:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$471",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 695,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1811:7:6",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 440,
																		"src": "1805:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 696,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1819:8:6",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1805:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 697,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 665,
																	"src": "1829:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 698,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 667,
																	"src": "1838:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 692,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1782:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 693,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1786:18:6",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1782:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 699,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1782:62:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$471",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 690,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 825,
														"src": "1755:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$471_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1755:90:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 701,
												"nodeType": "ExpressionStatement",
												"src": "1755:90:6"
											}
										]
									},
									"documentation": {
										"id": 660,
										"nodeType": "StructuredDocumentation",
										"src": "1075:237:6",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 703,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1324:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1343:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "1336:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$471",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 662,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 661,
														"name": "IERC20",
														"nameLocations": [
															"1336:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 471,
														"src": "1336:6:6"
													},
													"referencedDeclaration": 471,
													"src": "1336:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$471",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1358:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "1350:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 664,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1350:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1375:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "1367:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 666,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1367:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1335:46:6"
									},
									"returnParameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1391:0:6"
									},
									"scope": 826,
									"src": "1315:535:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 738,
										"nodeType": "Block",
										"src": "1940:202:6",
										"statements": [
											{
												"assignments": [
													714
												],
												"declarations": [
													{
														"constant": false,
														"id": 714,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "1954:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 738,
														"src": "1946:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 713,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1946:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 725,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 724,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 719,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "1993:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SafeERC20_$826",
																			"typeString": "library SafeERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SafeERC20_$826",
																			"typeString": "library SafeERC20"
																		}
																	],
																	"id": 718,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1985:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 717,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1985:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1985:13:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 721,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 708,
																"src": "2000:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 715,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 706,
																"src": "1969:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$471",
																	"typeString": "contract IERC20"
																}
															},
															"id": 716,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1975:9:6",
															"memberName": "allowance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 430,
															"src": "1969:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view external returns (uint256)"
															}
														},
														"id": 722,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1969:39:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 723,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 710,
														"src": "2011:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1969:47:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1946:70:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 727,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 706,
															"src": "2049:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$471",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 730,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 706,
																			"src": "2085:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$471",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 731,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2091:7:6",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 440,
																		"src": "2085:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 732,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2099:8:6",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2085:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 733,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 708,
																	"src": "2109:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 734,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 714,
																	"src": "2118:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 728,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2062:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 729,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2066:18:6",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2062:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 735,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2062:69:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$471",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 726,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 825,
														"src": "2022:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$471_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2022:115:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 737,
												"nodeType": "ExpressionStatement",
												"src": "2022:115:6"
											}
										]
									},
									"id": 739,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "1863:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 706,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1892:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "1885:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$471",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 705,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 704,
														"name": "IERC20",
														"nameLocations": [
															"1885:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 471,
														"src": "1885:6:6"
													},
													"referencedDeclaration": 471,
													"src": "1885:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$471",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 708,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1907:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "1899:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 707,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1899:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1924:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "1916:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 709,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1916:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1884:46:6"
									},
									"returnParameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1940:0:6"
									},
									"scope": 826,
									"src": "1854:288:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 786,
										"nodeType": "Block",
										"src": "2232:360:6",
										"statements": [
											{
												"id": 785,
												"nodeType": "UncheckedBlock",
												"src": "2238:350:6",
												"statements": [
													{
														"assignments": [
															750
														],
														"declarations": [
															{
																"constant": false,
																"id": 750,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "2264:12:6",
																"nodeType": "VariableDeclaration",
																"scope": 785,
																"src": "2256:20:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 749,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2256:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 759,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 755,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2303:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$826",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$826",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 754,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2295:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 753,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2295:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 756,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2295:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 757,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 744,
																	"src": "2310:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 751,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 742,
																	"src": "2279:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$471",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 752,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2285:9:6",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 430,
																"src": "2279:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 758,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2279:39:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2256:62:6"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 763,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 761,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 750,
																		"src": "2334:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 762,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 746,
																		"src": "2350:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2334:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 764,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2357:43:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 760,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2326:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 765,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2326:75:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 766,
														"nodeType": "ExpressionStatement",
														"src": "2326:75:6"
													},
													{
														"assignments": [
															768
														],
														"declarations": [
															{
																"constant": false,
																"id": 768,
																"mutability": "mutable",
																"name": "newAllowance",
																"nameLocation": "2417:12:6",
																"nodeType": "VariableDeclaration",
																"scope": 785,
																"src": "2409:20:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 767,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2409:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 772,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 769,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 750,
																"src": "2432:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 770,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 746,
																"src": "2447:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2432:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2409:43:6"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 774,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 742,
																	"src": "2489:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$471",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 777,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 742,
																					"src": "2527:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$471",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 778,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2533:7:6",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 440,
																				"src": "2527:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 779,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2541:8:6",
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "2527:22:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 780,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 744,
																			"src": "2551:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 781,
																			"name": "newAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 768,
																			"src": "2560:12:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 775,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "2504:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 776,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "2508:18:6",
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "2504:22:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 782,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2504:69:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$471",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 773,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 825,
																"src": "2460:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$471_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 783,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2460:121:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 784,
														"nodeType": "ExpressionStatement",
														"src": "2460:121:6"
													}
												]
											}
										]
									},
									"id": 787,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2155:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2184:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 787,
												"src": "2177:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$471",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 741,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 740,
														"name": "IERC20",
														"nameLocations": [
															"2177:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 471,
														"src": "2177:6:6"
													},
													"referencedDeclaration": 471,
													"src": "2177:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$471",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2199:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 787,
												"src": "2191:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 743,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2191:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2216:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 787,
												"src": "2208:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 745,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2208:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2176:46:6"
									},
									"returnParameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2232:0:6"
									},
									"scope": 826,
									"src": "2146:446:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 824,
										"nodeType": "Block",
										"src": "3031:598:6",
										"statements": [
											{
												"assignments": [
													797
												],
												"declarations": [
													{
														"constant": false,
														"id": 797,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3377:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 824,
														"src": "3364:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 796,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3364:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 806,
												"initialValue": {
													"arguments": [
														{
															"id": 803,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 793,
															"src": "3418:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 804,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3424:34:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 800,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 791,
																	"src": "3398:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$471",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$471",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 799,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3390:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 798,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3390:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 801,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3390:14:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 802,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3405:12:6",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 161,
														"src": "3390:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3390:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3364:95:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 807,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "3469:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 808,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3480:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3469:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 809,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3489:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3469:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 823,
												"nodeType": "IfStatement",
												"src": "3465:160:6",
												"trueBody": {
													"id": 822,
													"nodeType": "Block",
													"src": "3492:133:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 814,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 797,
																				"src": "3552:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 816,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3565:4:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 815,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "3565:4:6",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 817,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3564:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 812,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3541:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 813,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "3545:6:6",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "3541:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 818,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3541:30:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 819,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3573:44:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 811,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3533:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 820,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3533:85:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 821,
															"nodeType": "ExpressionStatement",
															"src": "3533:85:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 788,
										"nodeType": "StructuredDocumentation",
										"src": "2596:362:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 825,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "2970:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 791,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2997:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 825,
												"src": "2990:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$471",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 790,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 789,
														"name": "IERC20",
														"nameLocations": [
															"2990:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 471,
														"src": "2990:6:6"
													},
													"referencedDeclaration": 471,
													"src": "2990:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$471",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 793,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3017:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 825,
												"src": "3004:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 792,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3004:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2989:33:6"
									},
									"returnParameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3031:0:6"
									},
									"scope": 826,
									"src": "2961:668:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 827,
							"src": "631:3000:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "100:3532:6"
				},
				"id": 6
			},
			"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/SafeMath.sol": {
				"ast": {
					"absolutePath": "@aave/core-v3/contracts/dependencies/openzeppelin/contracts/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							946
						]
					},
					"id": 947,
					"license": "AGPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 828,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 829,
								"nodeType": "StructuredDocumentation",
								"src": "62:178:7",
								"text": "@title Optimized overflow and underflow safe math operations\n @notice Contains methods for doing math operations that revert on overflow or underflow for minimal gas cost"
							},
							"fullyImplemented": true,
							"id": 946,
							"linearizedBaseContracts": [
								946
							],
							"name": "SafeMath",
							"nameLocation": "248:8:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 851,
										"nodeType": "Block",
										"src": "479:60:7",
										"statements": [
											{
												"id": 850,
												"nodeType": "UncheckedBlock",
												"src": "485:50:7",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 847,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"id": 844,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 840,
																					"name": "z",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 837,
																					"src": "512:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 843,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 841,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 832,
																						"src": "516:1:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"id": 842,
																						"name": "y",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 834,
																						"src": "520:1:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "516:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "512:9:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 845,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "511:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 846,
																		"name": "x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 832,
																		"src": "526:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "511:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 839,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "503:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																	"typeString": "function (bool) pure"
																}
															},
															"id": 848,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "503:25:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 849,
														"nodeType": "ExpressionStatement",
														"src": "503:25:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 830,
										"nodeType": "StructuredDocumentation",
										"src": "261:146:7",
										"text": "@notice Returns x + y, reverts if sum overflows uint256\n @param x The augend\n @param y The addend\n @return z The sum of x and y"
									},
									"id": 852,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "419:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "431:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "423:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "423:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "442:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "434:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 833,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "434:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "422:22:7"
									},
									"returnParameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "z",
												"nameLocation": "476:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "468:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 836,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "468:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "467:11:7"
									},
									"scope": 946,
									"src": "410:129:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 874,
										"nodeType": "Block",
										"src": "762:60:7",
										"statements": [
											{
												"id": 873,
												"nodeType": "UncheckedBlock",
												"src": "768:50:7",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 870,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"id": 867,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 863,
																					"name": "z",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 860,
																					"src": "795:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 866,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 864,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 855,
																						"src": "799:1:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"id": 865,
																						"name": "y",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 857,
																						"src": "803:1:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "799:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "795:9:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 868,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "794:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 869,
																		"name": "x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 855,
																		"src": "809:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "794:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 862,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "786:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																	"typeString": "function (bool) pure"
																}
															},
															"id": 871,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "786:25:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 872,
														"nodeType": "ExpressionStatement",
														"src": "786:25:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 853,
										"nodeType": "StructuredDocumentation",
										"src": "543:147:7",
										"text": "@notice Returns x - y, reverts if underflows\n @param x The minuend\n @param y The subtrahend\n @return z The difference of x and y"
									},
									"id": 875,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "702:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "714:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "706:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 854,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "706:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "725:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "717:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 856,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "717:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "705:22:7"
									},
									"returnParameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 860,
												"mutability": "mutable",
												"name": "z",
												"nameLocation": "759:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "751:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 859,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "751:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "750:11:7"
									},
									"scope": 946,
									"src": "693:129:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 900,
										"nodeType": "Block",
										"src": "1103:69:7",
										"statements": [
											{
												"id": 899,
												"nodeType": "UncheckedBlock",
												"src": "1109:59:7",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 895,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"id": 892,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 888,
																					"name": "z",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 885,
																					"src": "1136:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 891,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 889,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 878,
																						"src": "1140:1:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"id": 890,
																						"name": "y",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 880,
																						"src": "1144:1:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "1140:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "1136:9:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 893,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "1135:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 894,
																		"name": "x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 878,
																		"src": "1150:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1135:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 896,
																	"name": "message",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 882,
																	"src": "1153:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 887,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "1127:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 897,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1127:34:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 898,
														"nodeType": "ExpressionStatement",
														"src": "1127:34:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 876,
										"nodeType": "StructuredDocumentation",
										"src": "826:182:7",
										"text": "@notice Returns x - y, reverts if underflows\n @param x The minuend\n @param y The subtrahend\n @param message The error msg\n @return z The difference of x and y"
									},
									"id": 901,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "1020:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 878,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1032:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "1024:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 877,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1024:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 880,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1043:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "1035:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 879,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1035:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 882,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "1060:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "1046:21:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 881,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1046:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1023:45:7"
									},
									"returnParameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 885,
												"mutability": "mutable",
												"name": "z",
												"nameLocation": "1100:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "1092:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 884,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1092:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1091:11:7"
									},
									"scope": 946,
									"src": "1011:161:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 929,
										"nodeType": "Block",
										"src": "1396:74:7",
										"statements": [
											{
												"id": 928,
												"nodeType": "UncheckedBlock",
												"src": "1402:64:7",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 925,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 914,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 912,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 904,
																			"src": "1428:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 913,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1433:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1428:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 924,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 922,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"id": 919,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"id": 915,
																							"name": "z",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 909,
																							"src": "1439:1:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 918,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 916,
																								"name": "x",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 904,
																								"src": "1443:1:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "*",
																							"rightExpression": {
																								"id": 917,
																								"name": "y",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 906,
																								"src": "1447:1:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "1443:5:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "1439:9:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 920,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "1438:11:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 921,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 904,
																				"src": "1452:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1438:15:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 923,
																			"name": "y",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 906,
																			"src": "1457:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "1438:20:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "1428:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 911,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "1420:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																	"typeString": "function (bool) pure"
																}
															},
															"id": 926,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1420:39:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 927,
														"nodeType": "ExpressionStatement",
														"src": "1420:39:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 902,
										"nodeType": "StructuredDocumentation",
										"src": "1176:148:7",
										"text": "@notice Returns x * y, reverts if overflows\n @param x The multiplicand\n @param y The multiplier\n @return z The product of x and y"
									},
									"id": 930,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "1336:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1348:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "1340:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 903,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1340:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1359:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "1351:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 905,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1351:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1339:22:7"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "z",
												"nameLocation": "1393:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "1385:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 908,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1385:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1384:11:7"
									},
									"scope": 946,
									"src": "1327:143:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 944,
										"nodeType": "Block",
										"src": "1747:23:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 940,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 933,
														"src": "1760:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 941,
														"name": "y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 935,
														"src": "1764:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1760:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 939,
												"id": 943,
												"nodeType": "Return",
												"src": "1753:12:7"
											}
										]
									},
									"documentation": {
										"id": 931,
										"nodeType": "StructuredDocumentation",
										"src": "1474:201:7",
										"text": "@notice Returns x / y, reverts if overflows - no specific check, solidity reverts on division by 0\n @param x The numerator\n @param y The denominator\n @return z The product of x and y"
									},
									"id": 945,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "1687:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 936,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 933,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1699:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "1691:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 932,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1691:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 935,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1710:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "1702:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 934,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1702:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1690:22:7"
									},
									"returnParameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 938,
												"mutability": "mutable",
												"name": "z",
												"nameLocation": "1744:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "1736:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 937,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1736:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1735:11:7"
									},
									"scope": 946,
									"src": "1678:92:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 947,
							"src": "240:1532:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "37:1736:7"
				},
				"id": 7
			},
			"@aave/core-v3/contracts/flashloan/base/FlashLoanSimpleReceiverBase.sol": {
				"ast": {
					"absolutePath": "@aave/core-v3/contracts/flashloan/base/FlashLoanSimpleReceiverBase.sol",
					"exportedSymbols": {
						"FlashLoanSimpleReceiverBase": [
							985
						],
						"IFlashLoanSimpleReceiver": [
							1021
						],
						"IPool": [
							1686
						],
						"IPoolAddressesProvider": [
							1895
						]
					},
					"id": 986,
					"license": "AGPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 948,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:8"
						},
						{
							"absolutePath": "@aave/core-v3/contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol",
							"file": "../interfaces/IFlashLoanSimpleReceiver.sol",
							"id": 950,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 986,
							"sourceUnit": 1022,
							"src": "62:84:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 949,
										"name": "IFlashLoanSimpleReceiver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1021,
										"src": "70:24:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@aave/core-v3/contracts/interfaces/IPoolAddressesProvider.sol",
							"file": "../../interfaces/IPoolAddressesProvider.sol",
							"id": 952,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 986,
							"sourceUnit": 1896,
							"src": "147:83:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 951,
										"name": "IPoolAddressesProvider",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1895,
										"src": "155:22:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@aave/core-v3/contracts/interfaces/IPool.sol",
							"file": "../../interfaces/IPool.sol",
							"id": 954,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 986,
							"sourceUnit": 1687,
							"src": "231:49:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 953,
										"name": "IPool",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1686,
										"src": "239:5:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 956,
										"name": "IFlashLoanSimpleReceiver",
										"nameLocations": [
											"460:24:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1021,
										"src": "460:24:8"
									},
									"id": 957,
									"nodeType": "InheritanceSpecifier",
									"src": "460:24:8"
								}
							],
							"canonicalName": "FlashLoanSimpleReceiverBase",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 955,
								"nodeType": "StructuredDocumentation",
								"src": "282:128:8",
								"text": " @title FlashLoanSimpleReceiverBase\n @author Aave\n @notice Base contract to develop a flashloan-receiver contract."
							},
							"fullyImplemented": false,
							"id": 985,
							"linearizedBaseContracts": [
								985,
								1021
							],
							"name": "FlashLoanSimpleReceiverBase",
							"nameLocation": "429:27:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1014
									],
									"constant": false,
									"functionSelector": "0542975c",
									"id": 961,
									"mutability": "immutable",
									"name": "ADDRESSES_PROVIDER",
									"nameLocation": "538:18:8",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 960,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "529:8:8"
									},
									"scope": 985,
									"src": "489:67:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IPoolAddressesProvider_$1895",
										"typeString": "contract IPoolAddressesProvider"
									},
									"typeName": {
										"id": 959,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 958,
											"name": "IPoolAddressesProvider",
											"nameLocations": [
												"489:22:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1895,
											"src": "489:22:8"
										},
										"referencedDeclaration": 1895,
										"src": "489:22:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IPoolAddressesProvider_$1895",
											"typeString": "contract IPoolAddressesProvider"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1020
									],
									"constant": false,
									"functionSelector": "7535d246",
									"id": 965,
									"mutability": "immutable",
									"name": "POOL",
									"nameLocation": "592:4:8",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 964,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "583:8:8"
									},
									"scope": 985,
									"src": "560:36:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IPool_$1686",
										"typeString": "contract IPool"
									},
									"typeName": {
										"id": 963,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 962,
											"name": "IPool",
											"nameLocations": [
												"560:5:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1686,
											"src": "560:5:8"
										},
										"referencedDeclaration": 1686,
										"src": "560:5:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IPool_$1686",
											"typeString": "contract IPool"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 983,
										"nodeType": "Block",
										"src": "646:78:8",
										"statements": [
											{
												"expression": {
													"id": 973,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 971,
														"name": "ADDRESSES_PROVIDER",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 961,
														"src": "652:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IPoolAddressesProvider_$1895",
															"typeString": "contract IPoolAddressesProvider"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 972,
														"name": "provider",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 968,
														"src": "673:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IPoolAddressesProvider_$1895",
															"typeString": "contract IPoolAddressesProvider"
														}
													},
													"src": "652:29:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IPoolAddressesProvider_$1895",
														"typeString": "contract IPoolAddressesProvider"
													}
												},
												"id": 974,
												"nodeType": "ExpressionStatement",
												"src": "652:29:8"
											},
											{
												"expression": {
													"id": 981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 975,
														"name": "POOL",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 965,
														"src": "687:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IPool_$1686",
															"typeString": "contract IPool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 977,
																		"name": "provider",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 968,
																		"src": "700:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IPoolAddressesProvider_$1895",
																			"typeString": "contract IPoolAddressesProvider"
																		}
																	},
																	"id": 978,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "709:7:8",
																	"memberName": "getPool",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1816,
																	"src": "700:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																		"typeString": "function () view external returns (address)"
																	}
																},
																"id": 979,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "700:18:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 976,
															"name": "IPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1686,
															"src": "694:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IPool_$1686_$",
																"typeString": "type(contract IPool)"
															}
														},
														"id": 980,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "694:25:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IPool_$1686",
															"typeString": "contract IPool"
														}
													},
													"src": "687:32:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IPool_$1686",
														"typeString": "contract IPool"
													}
												},
												"id": 982,
												"nodeType": "ExpressionStatement",
												"src": "687:32:8"
											}
										]
									},
									"id": 984,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 968,
												"mutability": "mutable",
												"name": "provider",
												"nameLocation": "636:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "613:31:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IPoolAddressesProvider_$1895",
													"typeString": "contract IPoolAddressesProvider"
												},
												"typeName": {
													"id": 967,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 966,
														"name": "IPoolAddressesProvider",
														"nameLocations": [
															"613:22:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1895,
														"src": "613:22:8"
													},
													"referencedDeclaration": 1895,
													"src": "613:22:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IPoolAddressesProvider_$1895",
														"typeString": "contract IPoolAddressesProvider"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "612:33:8"
									},
									"returnParameters": {
										"id": 970,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "646:0:8"
									},
									"scope": 985,
									"src": "601:123:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 986,
							"src": "411:315:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "37:690:8"
				},
				"id": 8
			},
			"@aave/core-v3/contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol": {
				"ast": {
					"absolutePath": "@aave/core-v3/contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol",
					"exportedSymbols": {
						"IFlashLoanSimpleReceiver": [
							1021
						],
						"IPool": [
							1686
						],
						"IPoolAddressesProvider": [
							1895
						]
					},
					"id": 1022,
					"license": "AGPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 987,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:9"
						},
						{
							"absolutePath": "@aave/core-v3/contracts/interfaces/IPoolAddressesProvider.sol",
							"file": "../../interfaces/IPoolAddressesProvider.sol",
							"id": 989,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1022,
							"sourceUnit": 1896,
							"src": "62:83:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 988,
										"name": "IPoolAddressesProvider",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1895,
										"src": "70:22:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@aave/core-v3/contracts/interfaces/IPool.sol",
							"file": "../../interfaces/IPool.sol",
							"id": 991,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1022,
							"sourceUnit": 1687,
							"src": "146:49:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 990,
										"name": "IPool",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1686,
										"src": "154:5:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IFlashLoanSimpleReceiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 992,
								"nodeType": "StructuredDocumentation",
								"src": "197:225:9",
								"text": " @title IFlashLoanSimpleReceiver\n @author Aave\n @notice Defines the basic interface of a flashloan-receiver contract.\n @dev Implement this interface to develop a flashloan-compatible flashLoanReceiver contract"
							},
							"fullyImplemented": false,
							"id": 1021,
							"linearizedBaseContracts": [
								1021
							],
							"name": "IFlashLoanSimpleReceiver",
							"nameLocation": "433:24:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 993,
										"nodeType": "StructuredDocumentation",
										"src": "462:635:9",
										"text": " @notice Executes an operation after receiving the flash-borrowed asset\n @dev Ensure that the contract can return the debt + premium, e.g., has\n      enough funds to repay and has approved the Pool to pull the total amount\n @param asset The address of the flash-borrowed asset\n @param amount The amount of the flash-borrowed asset\n @param premium The fee of the flash-borrowed asset\n @param initiator The address of the flashloan initiator\n @param params The byte-encoded params passed when initiating the flashloan\n @return True if the execution of the operation succeeds, false otherwise"
									},
									"functionSelector": "1b11d0ff",
									"id": 1008,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "executeOperation",
									"nameLocation": "1109:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1004,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 995,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "1139:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1008,
												"src": "1131:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 994,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1131:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 997,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1158:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1008,
												"src": "1150:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 996,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1150:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "premium",
												"nameLocation": "1178:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1008,
												"src": "1170:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 998,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1170:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1001,
												"mutability": "mutable",
												"name": "initiator",
												"nameLocation": "1199:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1008,
												"src": "1191:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1000,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1191:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1003,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "1229:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1008,
												"src": "1214:21:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1002,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1214:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1125:114:9"
									},
									"returnParameters": {
										"id": 1007,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1006,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1008,
												"src": "1258:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1005,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1258:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1257:6:9"
									},
									"scope": 1021,
									"src": "1100:164:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0542975c",
									"id": 1014,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ADDRESSES_PROVIDER",
									"nameLocation": "1277:18:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1009,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1295:2:9"
									},
									"returnParameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "1321:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IPoolAddressesProvider_$1895",
													"typeString": "contract IPoolAddressesProvider"
												},
												"typeName": {
													"id": 1011,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1010,
														"name": "IPoolAddressesProvider",
														"nameLocations": [
															"1321:22:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1895,
														"src": "1321:22:9"
													},
													"referencedDeclaration": 1895,
													"src": "1321:22:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IPoolAddressesProvider_$1895",
														"typeString": "contract IPoolAddressesProvider"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1320:24:9"
									},
									"scope": 1021,
									"src": "1268:77:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7535d246",
									"id": 1020,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "POOL",
									"nameLocation": "1358:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1015,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1362:2:9"
									},
									"returnParameters": {
										"id": 1019,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1018,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1020,
												"src": "1388:5:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IPool_$1686",
													"typeString": "contract IPool"
												},
												"typeName": {
													"id": 1017,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1016,
														"name": "IPool",
														"nameLocations": [
															"1388:5:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1686,
														"src": "1388:5:9"
													},
													"referencedDeclaration": 1686,
													"src": "1388:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IPool_$1686",
														"typeString": "contract IPool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1387:7:9"
									},
									"scope": 1021,
									"src": "1349:46:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1022,
							"src": "423:974:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "37:1361:9"
				},
				"id": 9
			},
			"@aave/core-v3/contracts/interfaces/IERC20WithPermit.sol": {
				"ast": {
					"absolutePath": "@aave/core-v3/contracts/interfaces/IERC20WithPermit.sol",
					"exportedSymbols": {
						"IERC20": [
							471
						],
						"IERC20WithPermit": [
							1047
						]
					},
					"id": 1048,
					"license": "AGPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1023,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:10"
						},
						{
							"absolutePath": "@aave/core-v3/contracts/dependencies/openzeppelin/contracts/IERC20.sol",
							"file": "../dependencies/openzeppelin/contracts/IERC20.sol",
							"id": 1025,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1048,
							"sourceUnit": 472,
							"src": "62:73:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1024,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 471,
										"src": "70:6:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1027,
										"name": "IERC20",
										"nameLocations": [
											"274:6:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 471,
										"src": "274:6:10"
									},
									"id": 1028,
									"nodeType": "InheritanceSpecifier",
									"src": "274:6:10"
								}
							],
							"canonicalName": "IERC20WithPermit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1026,
								"nodeType": "StructuredDocumentation",
								"src": "137:106:10",
								"text": " @title IERC20WithPermit\n @author Aave\n @notice Interface for the permit function (EIP-2612)"
							},
							"fullyImplemented": false,
							"id": 1047,
							"linearizedBaseContracts": [
								1047,
								471
							],
							"name": "IERC20WithPermit",
							"nameLocation": "254:16:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1029,
										"nodeType": "StructuredDocumentation",
										"src": "285:494:10",
										"text": " @notice Allow passing a signed message to approve spending\n @dev implements the permit function as for\n https://github.com/ethereum/EIPs/blob/8a34d644aacf0f9f8f00815307fd7dd5da07655f/EIPS/eip-2612.md\n @param owner The owner of the funds\n @param spender The spender\n @param value The amount\n @param deadline The deadline timestamp, type(uint256).max for max deadline\n @param v Signature param\n @param s Signature param\n @param r Signature param"
									},
									"functionSelector": "d505accf",
									"id": 1046,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "791:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1044,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1031,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "811:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "803:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1030,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1033,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "830:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "822:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1032,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "851:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "843:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1034,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "843:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1037,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "870:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "862:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1036,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "862:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "890:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "884:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1038,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "884:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "905:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "897:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1040,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "897:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1043,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "920:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "912:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1042,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "912:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "797:128:10"
									},
									"returnParameters": {
										"id": 1045,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "934:0:10"
									},
									"scope": 1047,
									"src": "782:153:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1048,
							"src": "244:693:10",
							"usedErrors": [],
							"usedEvents": [
								461,
								470
							]
						}
					],
					"src": "37:901:10"
				},
				"id": 10
			},
			"@aave/core-v3/contracts/interfaces/IPool.sol": {
				"ast": {
					"absolutePath": "@aave/core-v3/contracts/interfaces/IPool.sol",
					"exportedSymbols": {
						"DataTypes": [
							2305
						],
						"IPool": [
							1686
						],
						"IPoolAddressesProvider": [
							1895
						]
					},
					"id": 1687,
					"license": "AGPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1049,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:11"
						},
						{
							"absolutePath": "@aave/core-v3/contracts/interfaces/IPoolAddressesProvider.sol",
							"file": "./IPoolAddressesProvider.sol",
							"id": 1051,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1687,
							"sourceUnit": 1896,
							"src": "62:68:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1050,
										"name": "IPoolAddressesProvider",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1895,
										"src": "70:22:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol",
							"file": "../protocol/libraries/types/DataTypes.sol",
							"id": 1053,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1687,
							"sourceUnit": 2306,
							"src": "131:68:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1052,
										"name": "DataTypes",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2305,
										"src": "139:9:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IPool",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1054,
								"nodeType": "StructuredDocumentation",
								"src": "201:96:11",
								"text": " @title IPool\n @author Aave\n @notice Defines the basic interface for an Aave Pool."
							},
							"fullyImplemented": false,
							"id": 1686,
							"linearizedBaseContracts": [
								1686
							],
							"name": "IPool",
							"nameLocation": "308:5:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1055,
										"nodeType": "StructuredDocumentation",
										"src": "318:349:11",
										"text": " @dev Emitted on mintUnbacked()\n @param reserve The address of the underlying asset of the reserve\n @param user The address initiating the supply\n @param onBehalfOf The beneficiary of the supplied assets, receiving the aTokens\n @param amount The amount of supplied assets\n @param referralCode The referral code used"
									},
									"eventSelector": "f25af37b3d3ec226063dc9bdc103ece7eb110a50f340fe854bb7bc1b0676d7d0",
									"id": 1067,
									"name": "MintUnbacked",
									"nameLocation": "676:12:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1066,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1057,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "710:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "694:23:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1056,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "694:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1059,
												"indexed": false,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "731:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "723:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1058,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "723:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1061,
												"indexed": true,
												"mutability": "mutable",
												"name": "onBehalfOf",
												"nameLocation": "757:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "741:26:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1060,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "741:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1063,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "781:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "773:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1062,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "773:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1065,
												"indexed": true,
												"mutability": "mutable",
												"name": "referralCode",
												"nameLocation": "808:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "793:27:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1064,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "793:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "688:136:11"
									},
									"src": "670:155:11"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1068,
										"nodeType": "StructuredDocumentation",
										"src": "829:257:11",
										"text": " @dev Emitted on backUnbacked()\n @param reserve The address of the underlying asset of the reserve\n @param backer The address paying for the backing\n @param amount The amount added as backing\n @param fee The amount paid in fees"
									},
									"eventSelector": "281596e92b2d974beb7d4f124df30a0b39067b096893e95011ce4bdad798b759",
									"id": 1078,
									"name": "BackUnbacked",
									"nameLocation": "1095:12:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1077,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1070,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "1124:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "1108:23:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1069,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1108:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1072,
												"indexed": true,
												"mutability": "mutable",
												"name": "backer",
												"nameLocation": "1149:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "1133:22:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1071,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1133:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1074,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1165:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "1157:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1073,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1076,
												"indexed": false,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "1181:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "1173:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1075,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1173:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1107:78:11"
									},
									"src": "1089:97:11"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1079,
										"nodeType": "StructuredDocumentation",
										"src": "1190:324:11",
										"text": " @dev Emitted on supply()\n @param reserve The address of the underlying asset of the reserve\n @param user The address initiating the supply\n @param onBehalfOf The beneficiary of the supply, receiving the aTokens\n @param amount The amount supplied\n @param referralCode The referral code used"
									},
									"eventSelector": "2b627736bca15cd5381dcf80b0bf11fd197d01a037c52b927a881a10fb73ba61",
									"id": 1091,
									"name": "Supply",
									"nameLocation": "1523:6:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1081,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "1551:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "1535:23:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1080,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1535:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1083,
												"indexed": false,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1572:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "1564:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1082,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1564:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1085,
												"indexed": true,
												"mutability": "mutable",
												"name": "onBehalfOf",
												"nameLocation": "1598:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "1582:26:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1084,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1087,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1622:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "1614:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1086,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1614:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1089,
												"indexed": true,
												"mutability": "mutable",
												"name": "referralCode",
												"nameLocation": "1649:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "1634:27:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1088,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1529:136:11"
									},
									"src": "1517:149:11"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1092,
										"nodeType": "StructuredDocumentation",
										"src": "1670:292:11",
										"text": " @dev Emitted on withdraw()\n @param reserve The address of the underlying asset being withdrawn\n @param user The address initiating the withdrawal, owner of aTokens\n @param to The address that will receive the underlying\n @param amount The amount to be withdrawn"
									},
									"eventSelector": "3115d1449a7b732c986cba18244e897a450f61e1bb8d589cd2e69e6c8924f9f7",
									"id": 1102,
									"name": "Withdraw",
									"nameLocation": "1971:8:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1094,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "1996:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1102,
												"src": "1980:23:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1093,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1980:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1096,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2021:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1102,
												"src": "2005:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1095,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2005:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1098,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2043:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 1102,
												"src": "2027:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1097,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2027:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1100,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2055:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1102,
												"src": "2047:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1099,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2047:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1979:83:11"
									},
									"src": "1965:98:11"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1103,
										"nodeType": "StructuredDocumentation",
										"src": "2067:628:11",
										"text": " @dev Emitted on borrow() and flashLoan() when debt needs to be opened\n @param reserve The address of the underlying asset being borrowed\n @param user The address of the user initiating the borrow(), receiving the funds on borrow() or just\n initiator of the transaction on flashLoan()\n @param onBehalfOf The address that will be getting the debt\n @param amount The amount borrowed out\n @param interestRateMode The rate mode: 1 for Stable, 2 for Variable\n @param borrowRate The numeric rate at which the user has borrowed, expressed in ray\n @param referralCode The referral code used"
									},
									"eventSelector": "b3d084820fb1a9decffb176436bd02558d15fac9b0ddfed8c465bc7359d7dce0",
									"id": 1120,
									"name": "Borrow",
									"nameLocation": "2704:6:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1105,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "2732:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1120,
												"src": "2716:23:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2716:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1107,
												"indexed": false,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2753:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1120,
												"src": "2745:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2745:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1109,
												"indexed": true,
												"mutability": "mutable",
												"name": "onBehalfOf",
												"nameLocation": "2779:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 1120,
												"src": "2763:26:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2763:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1111,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2803:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1120,
												"src": "2795:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2795:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1114,
												"indexed": false,
												"mutability": "mutable",
												"name": "interestRateMode",
												"nameLocation": "2842:16:11",
												"nodeType": "VariableDeclaration",
												"scope": 1120,
												"src": "2815:43:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_InterestRateMode_$2009",
													"typeString": "enum DataTypes.InterestRateMode"
												},
												"typeName": {
													"id": 1113,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1112,
														"name": "DataTypes.InterestRateMode",
														"nameLocations": [
															"2815:9:11",
															"2825:16:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2009,
														"src": "2815:26:11"
													},
													"referencedDeclaration": 2009,
													"src": "2815:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_InterestRateMode_$2009",
														"typeString": "enum DataTypes.InterestRateMode"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1116,
												"indexed": false,
												"mutability": "mutable",
												"name": "borrowRate",
												"nameLocation": "2872:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 1120,
												"src": "2864:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1115,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2864:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1118,
												"indexed": true,
												"mutability": "mutable",
												"name": "referralCode",
												"nameLocation": "2903:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1120,
												"src": "2888:27:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1117,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "2888:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:209:11"
									},
									"src": "2698:222:11"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1121,
										"nodeType": "StructuredDocumentation",
										"src": "2924:425:11",
										"text": " @dev Emitted on repay()\n @param reserve The address of the underlying asset of the reserve\n @param user The beneficiary of the repayment, getting his debt reduced\n @param repayer The address of the user initiating the repay(), providing the funds\n @param amount The amount repaid\n @param useATokens True if the repayment is done using aTokens, `false` if done with underlying asset directly"
									},
									"eventSelector": "a534c8dbe71f871f9f3530e97a74601fea17b426cae02e1c5aee42c96c784051",
									"id": 1133,
									"name": "Repay",
									"nameLocation": "3358:5:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1123,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "3385:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1133,
												"src": "3369:23:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3369:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1125,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "3414:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1133,
												"src": "3398:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1124,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3398:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1127,
												"indexed": true,
												"mutability": "mutable",
												"name": "repayer",
												"nameLocation": "3440:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1133,
												"src": "3424:23:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3424:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1129,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3461:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1133,
												"src": "3453:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3453:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1131,
												"indexed": false,
												"mutability": "mutable",
												"name": "useATokens",
												"nameLocation": "3478:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 1133,
												"src": "3473:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1130,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3473:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:129:11"
									},
									"src": "3352:141:11"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1134,
										"nodeType": "StructuredDocumentation",
										"src": "3497:306:11",
										"text": " @dev Emitted on swapBorrowRateMode()\n @param reserve The address of the underlying asset of the reserve\n @param user The address of the user swapping his rate mode\n @param interestRateMode The current interest rate mode of the position being swapped: 1 for Stable, 2 for Variable"
									},
									"eventSelector": "7962b394d85a534033ba2efcf43cd36de57b7ebeb3de0ca4428965d9b3ddc481",
									"id": 1143,
									"name": "SwapBorrowRateMode",
									"nameLocation": "3812:18:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1136,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "3852:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "3836:23:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1135,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3836:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1138,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "3881:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "3865:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1137,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1141,
												"indexed": false,
												"mutability": "mutable",
												"name": "interestRateMode",
												"nameLocation": "3918:16:11",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "3891:43:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_InterestRateMode_$2009",
													"typeString": "enum DataTypes.InterestRateMode"
												},
												"typeName": {
													"id": 1140,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1139,
														"name": "DataTypes.InterestRateMode",
														"nameLocations": [
															"3891:9:11",
															"3901:16:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2009,
														"src": "3891:26:11"
													},
													"referencedDeclaration": 2009,
													"src": "3891:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_InterestRateMode_$2009",
														"typeString": "enum DataTypes.InterestRateMode"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3830:108:11"
									},
									"src": "3806:133:11"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1144,
										"nodeType": "StructuredDocumentation",
										"src": "3943:234:11",
										"text": " @dev Emitted on borrow(), repay() and liquidationCall() when using isolated assets\n @param asset The address of the underlying asset of the reserve\n @param totalDebt The total isolation mode debt for the reserve"
									},
									"eventSelector": "aef84d3b40895fd58c561f3998000f0583abb992a52fbdc99ace8e8de4d676a5",
									"id": 1150,
									"name": "IsolationModeTotalDebtUpdated",
									"nameLocation": "4186:29:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1146,
												"indexed": true,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "4232:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "4216:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4216:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1148,
												"indexed": false,
												"mutability": "mutable",
												"name": "totalDebt",
												"nameLocation": "4247:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "4239:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4239:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4215:42:11"
									},
									"src": "4180:78:11"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1151,
										"nodeType": "StructuredDocumentation",
										"src": "4262:164:11",
										"text": " @dev Emitted when the user selects a certain asset category for eMode\n @param user The address of the user\n @param categoryId The category id"
									},
									"eventSelector": "d728da875fc88944cbf17638bcbe4af0eedaef63becd1d1c57cc097eb4608d84",
									"id": 1157,
									"name": "UserEModeSet",
									"nameLocation": "4435:12:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1153,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "4464:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1157,
												"src": "4448:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4448:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1155,
												"indexed": false,
												"mutability": "mutable",
												"name": "categoryId",
												"nameLocation": "4476:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 1157,
												"src": "4470:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1154,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4470:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4447:40:11"
									},
									"src": "4429:59:11"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1158,
										"nodeType": "StructuredDocumentation",
										"src": "4492:207:11",
										"text": " @dev Emitted on setUserUseReserveAsCollateral()\n @param reserve The address of the underlying asset of the reserve\n @param user The address of the user enabling the usage as collateral"
									},
									"eventSelector": "00058a56ea94653cdf4f152d227ace22d4c00ad99e2a43f58cb7d9e3feb295f2",
									"id": 1164,
									"name": "ReserveUsedAsCollateralEnabled",
									"nameLocation": "4708:30:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1160,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "4755:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1164,
												"src": "4739:23:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4739:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1162,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "4780:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1164,
												"src": "4764:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4764:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4738:47:11"
									},
									"src": "4702:84:11"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1165,
										"nodeType": "StructuredDocumentation",
										"src": "4790:207:11",
										"text": " @dev Emitted on setUserUseReserveAsCollateral()\n @param reserve The address of the underlying asset of the reserve\n @param user The address of the user enabling the usage as collateral"
									},
									"eventSelector": "44c58d81365b66dd4b1a7f36c25aa97b8c71c361ee4937adc1a00000227db5dd",
									"id": 1171,
									"name": "ReserveUsedAsCollateralDisabled",
									"nameLocation": "5006:31:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1167,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "5054:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1171,
												"src": "5038:23:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5038:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1169,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "5079:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1171,
												"src": "5063:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5063:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5037:47:11"
									},
									"src": "5000:85:11"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1172,
										"nodeType": "StructuredDocumentation",
										"src": "5089:212:11",
										"text": " @dev Emitted on rebalanceStableBorrowRate()\n @param reserve The address of the underlying asset of the reserve\n @param user The address of the user for which the rebalance has been executed"
									},
									"eventSelector": "9f439ae0c81e41a04d3fdfe07aed54e6a179fb0db15be7702eb66fa8ef6f5300",
									"id": 1178,
									"name": "RebalanceStableBorrowRate",
									"nameLocation": "5310:25:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1174,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "5352:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "5336:23:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5336:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1176,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "5377:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "5361:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1175,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5361:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5335:47:11"
									},
									"src": "5304:79:11"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1179,
										"nodeType": "StructuredDocumentation",
										"src": "5387:482:11",
										"text": " @dev Emitted on flashLoan()\n @param target The address of the flash loan receiver contract\n @param initiator The address initiating the flash loan\n @param asset The address of the asset being flash borrowed\n @param amount The amount flash borrowed\n @param interestRateMode The flashloan mode: 0 for regular flashloan, 1 for Stable debt, 2 for Variable debt\n @param premium The fee flash borrowed\n @param referralCode The referral code used"
									},
									"eventSelector": "efefaba5e921573100900a3ad9cf29f222d995fb3b6045797eaea7521bd8d6f0",
									"id": 1196,
									"name": "FlashLoan",
									"nameLocation": "5878:9:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1181,
												"indexed": true,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5909:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1196,
												"src": "5893:22:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5893:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1183,
												"indexed": false,
												"mutability": "mutable",
												"name": "initiator",
												"nameLocation": "5929:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1196,
												"src": "5921:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5921:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1185,
												"indexed": true,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "5960:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1196,
												"src": "5944:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5944:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1187,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5979:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1196,
												"src": "5971:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5971:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1190,
												"indexed": false,
												"mutability": "mutable",
												"name": "interestRateMode",
												"nameLocation": "6018:16:11",
												"nodeType": "VariableDeclaration",
												"scope": 1196,
												"src": "5991:43:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_InterestRateMode_$2009",
													"typeString": "enum DataTypes.InterestRateMode"
												},
												"typeName": {
													"id": 1189,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1188,
														"name": "DataTypes.InterestRateMode",
														"nameLocations": [
															"5991:9:11",
															"6001:16:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2009,
														"src": "5991:26:11"
													},
													"referencedDeclaration": 2009,
													"src": "5991:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_InterestRateMode_$2009",
														"typeString": "enum DataTypes.InterestRateMode"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1192,
												"indexed": false,
												"mutability": "mutable",
												"name": "premium",
												"nameLocation": "6048:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1196,
												"src": "6040:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6040:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1194,
												"indexed": true,
												"mutability": "mutable",
												"name": "referralCode",
												"nameLocation": "6076:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1196,
												"src": "6061:27:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1193,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "6061:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5887:205:11"
									},
									"src": "5872:221:11"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1197,
										"nodeType": "StructuredDocumentation",
										"src": "6097:749:11",
										"text": " @dev Emitted when a borrower is liquidated.\n @param collateralAsset The address of the underlying asset used as collateral, to receive as result of the liquidation\n @param debtAsset The address of the underlying borrowed asset to be repaid with the liquidation\n @param user The address of the borrower getting liquidated\n @param debtToCover The debt amount of borrowed `asset` the liquidator wants to cover\n @param liquidatedCollateralAmount The amount of collateral received by the liquidator\n @param liquidator The address of the liquidator\n @param receiveAToken True if the liquidators wants to receive the collateral aTokens, `false` if he wants\n to receive the underlying collateral asset directly"
									},
									"eventSelector": "e413a321e8681d831f4dbccbca790d2952b56f977908e45be37335533e005286",
									"id": 1213,
									"name": "LiquidationCall",
									"nameLocation": "6855:15:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1199,
												"indexed": true,
												"mutability": "mutable",
												"name": "collateralAsset",
												"nameLocation": "6892:15:11",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "6876:31:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6876:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1201,
												"indexed": true,
												"mutability": "mutable",
												"name": "debtAsset",
												"nameLocation": "6929:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "6913:25:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6913:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1203,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "6960:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "6944:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6944:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1205,
												"indexed": false,
												"mutability": "mutable",
												"name": "debtToCover",
												"nameLocation": "6978:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "6970:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6970:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1207,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidatedCollateralAmount",
												"nameLocation": "7003:26:11",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "6995:34:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6995:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1209,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidator",
												"nameLocation": "7043:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "7035:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7035:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1211,
												"indexed": false,
												"mutability": "mutable",
												"name": "receiveAToken",
												"nameLocation": "7064:13:11",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "7059:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1210,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7059:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6870:211:11"
									},
									"src": "6849:233:11"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1214,
										"nodeType": "StructuredDocumentation",
										"src": "7086:421:11",
										"text": " @dev Emitted when the state of a reserve is updated.\n @param reserve The address of the underlying asset of the reserve\n @param liquidityRate The next liquidity rate\n @param stableBorrowRate The next stable borrow rate\n @param variableBorrowRate The next variable borrow rate\n @param liquidityIndex The next liquidity index\n @param variableBorrowIndex The next variable borrow index"
									},
									"eventSelector": "804c9b842b2748a22bb64b345453a3de7ca54a6ca45ce00d415894979e22897a",
									"id": 1228,
									"name": "ReserveDataUpdated",
									"nameLocation": "7516:18:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1216,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "7556:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "7540:23:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7540:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1218,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidityRate",
												"nameLocation": "7577:13:11",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "7569:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1217,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7569:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1220,
												"indexed": false,
												"mutability": "mutable",
												"name": "stableBorrowRate",
												"nameLocation": "7604:16:11",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "7596:24:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7596:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1222,
												"indexed": false,
												"mutability": "mutable",
												"name": "variableBorrowRate",
												"nameLocation": "7634:18:11",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "7626:26:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7626:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1224,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidityIndex",
												"nameLocation": "7666:14:11",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "7658:22:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7658:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1226,
												"indexed": false,
												"mutability": "mutable",
												"name": "variableBorrowIndex",
												"nameLocation": "7694:19:11",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "7686:27:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7686:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7534:183:11"
									},
									"src": "7510:208:11"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1229,
										"nodeType": "StructuredDocumentation",
										"src": "7722:211:11",
										"text": " @dev Emitted when the protocol treasury receives minted aTokens from the accrued interest.\n @param reserve The address of the reserve\n @param amountMinted The amount minted to the treasury"
									},
									"eventSelector": "bfa21aa5d5f9a1f0120a95e7c0749f389863cbdbfff531aa7339077a5bc919de",
									"id": 1235,
									"name": "MintedToTreasury",
									"nameLocation": "7942:16:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1231,
												"indexed": true,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "7975:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "7959:23:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7959:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1233,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountMinted",
												"nameLocation": "7992:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "7984:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7984:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7958:47:11"
									},
									"src": "7936:70:11"
								},
								{
									"documentation": {
										"id": 1236,
										"nodeType": "StructuredDocumentation",
										"src": "8010:428:11",
										"text": " @notice Mints an `amount` of aTokens to the `onBehalfOf`\n @param asset The address of the underlying asset to mint\n @param amount The amount to mint\n @param onBehalfOf The address that will receive the aTokens\n @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   0 if the action is executed directly by the user, without any middle-man"
									},
									"functionSelector": "69a933a5",
									"id": 1247,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mintUnbacked",
									"nameLocation": "8450:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "8476:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1247,
												"src": "8468:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8468:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1240,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8495:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1247,
												"src": "8487:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8487:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1242,
												"mutability": "mutable",
												"name": "onBehalfOf",
												"nameLocation": "8515:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 1247,
												"src": "8507:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8507:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1244,
												"mutability": "mutable",
												"name": "referralCode",
												"nameLocation": "8538:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1247,
												"src": "8531:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1243,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "8531:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8462:92:11"
									},
									"returnParameters": {
										"id": 1246,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8563:0:11"
									},
									"scope": 1686,
									"src": "8441:123:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1248,
										"nodeType": "StructuredDocumentation",
										"src": "8568:259:11",
										"text": " @notice Back the current unbacked underlying with `amount` and pay `fee`.\n @param asset The address of the underlying asset to back\n @param amount The amount to back\n @param fee The amount paid in fees\n @return The backed amount"
									},
									"functionSelector": "d65dc7a1",
									"id": 1259,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "backUnbacked",
									"nameLocation": "8839:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1250,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "8860:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "8852:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8852:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1252,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8875:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "8867:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1251,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8867:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1254,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "8891:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "8883:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1253,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8883:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8851:44:11"
									},
									"returnParameters": {
										"id": 1258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1257,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "8914:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1256,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8914:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8913:9:11"
									},
									"scope": 1686,
									"src": "8830:93:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1260,
										"nodeType": "StructuredDocumentation",
										"src": "8927:712:11",
										"text": " @notice Supplies an `amount` of underlying asset into the reserve, receiving in return overlying aTokens.\n - E.g. User supplies 100 USDC and gets in return 100 aUSDC\n @param asset The address of the underlying asset to supply\n @param amount The amount to be supplied\n @param onBehalfOf The address that will receive the aTokens, same as msg.sender if the user\n   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens\n   is a different wallet\n @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   0 if the action is executed directly by the user, without any middle-man"
									},
									"functionSelector": "617ba037",
									"id": 1271,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supply",
									"nameLocation": "9651:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1262,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "9666:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1271,
												"src": "9658:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9658:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1264,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9681:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1271,
												"src": "9673:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1263,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9673:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1266,
												"mutability": "mutable",
												"name": "onBehalfOf",
												"nameLocation": "9697:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 1271,
												"src": "9689:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9689:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1268,
												"mutability": "mutable",
												"name": "referralCode",
												"nameLocation": "9716:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1271,
												"src": "9709:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1267,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "9709:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9657:72:11"
									},
									"returnParameters": {
										"id": 1270,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9738:0:11"
									},
									"scope": 1686,
									"src": "9642:97:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1272,
										"nodeType": "StructuredDocumentation",
										"src": "9743:962:11",
										"text": " @notice Supply with transfer approval of asset to be supplied done via permit function\n see: https://eips.ethereum.org/EIPS/eip-2612 and https://eips.ethereum.org/EIPS/eip-713\n @param asset The address of the underlying asset to supply\n @param amount The amount to be supplied\n @param onBehalfOf The address that will receive the aTokens, same as msg.sender if the user\n   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens\n   is a different wallet\n @param deadline The deadline timestamp that the permit is valid\n @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   0 if the action is executed directly by the user, without any middle-man\n @param permitV The V parameter of ERC712 permit sig\n @param permitR The R parameter of ERC712 permit sig\n @param permitS The S parameter of ERC712 permit sig"
									},
									"functionSelector": "02c205f0",
									"id": 1291,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supplyWithPermit",
									"nameLocation": "10717:16:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1274,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "10747:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1291,
												"src": "10739:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10739:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1276,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10766:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1291,
												"src": "10758:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10758:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1278,
												"mutability": "mutable",
												"name": "onBehalfOf",
												"nameLocation": "10786:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 1291,
												"src": "10778:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1277,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10778:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1280,
												"mutability": "mutable",
												"name": "referralCode",
												"nameLocation": "10809:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1291,
												"src": "10802:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1279,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "10802:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1282,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "10835:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1291,
												"src": "10827:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1281,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10827:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1284,
												"mutability": "mutable",
												"name": "permitV",
												"nameLocation": "10855:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1291,
												"src": "10849:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1283,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "10849:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1286,
												"mutability": "mutable",
												"name": "permitR",
												"nameLocation": "10876:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1291,
												"src": "10868:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1285,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "10868:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1288,
												"mutability": "mutable",
												"name": "permitS",
												"nameLocation": "10897:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1291,
												"src": "10889:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1287,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "10889:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10733:175:11"
									},
									"returnParameters": {
										"id": 1290,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10917:0:11"
									},
									"scope": 1686,
									"src": "10708:210:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1292,
										"nodeType": "StructuredDocumentation",
										"src": "10922:671:11",
										"text": " @notice Withdraws an `amount` of underlying asset from the reserve, burning the equivalent aTokens owned\n E.g. User has 100 aUSDC, calls withdraw() and receives 100 USDC, burning the 100 aUSDC\n @param asset The address of the underlying asset to withdraw\n @param amount The underlying amount to be withdrawn\n   - Send the value type(uint256).max in order to withdraw the whole aToken balance\n @param to The address that will receive the underlying, same as msg.sender if the user\n   wants to receive it on his own wallet, or a different address if the beneficiary is a\n   different wallet\n @return The final amount withdrawn"
									},
									"functionSelector": "69328dec",
									"id": 1303,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "11605:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1294,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "11622:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "11614:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11614:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1296,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11637:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "11629:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11629:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1298,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11653:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "11645:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1297,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11645:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11613:43:11"
									},
									"returnParameters": {
										"id": 1302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1301,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "11675:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11675:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11674:9:11"
									},
									"scope": 1686,
									"src": "11596:88:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1304,
										"nodeType": "StructuredDocumentation",
										"src": "11688:1198:11",
										"text": " @notice Allows users to borrow a specific `amount` of the reserve underlying asset, provided that the borrower\n already supplied enough collateral, or he was given enough allowance by a credit delegator on the\n corresponding debt token (StableDebtToken or VariableDebtToken)\n - E.g. User borrows 100 USDC passing as `onBehalfOf` his own address, receiving the 100 USDC in his wallet\n   and 100 stable/variable debt tokens, depending on the `interestRateMode`\n @param asset The address of the underlying asset to borrow\n @param amount The amount to be borrowed\n @param interestRateMode The interest rate mode at which the user wants to borrow: 1 for Stable, 2 for Variable\n @param referralCode The code used to register the integrator originating the operation, for potential rewards.\n   0 if the action is executed directly by the user, without any middle-man\n @param onBehalfOf The address of the user who will receive the debt. Should be the address of the borrower itself\n calling the function if he wants to borrow against his own collateral, or the address of the credit delegator\n if he has been given credit delegation allowance"
									},
									"functionSelector": "a415bcad",
									"id": 1317,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "borrow",
									"nameLocation": "12898:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1306,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "12918:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1317,
												"src": "12910:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12910:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1308,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12937:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1317,
												"src": "12929:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1307,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12929:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1310,
												"mutability": "mutable",
												"name": "interestRateMode",
												"nameLocation": "12957:16:11",
												"nodeType": "VariableDeclaration",
												"scope": 1317,
												"src": "12949:24:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1309,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12949:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1312,
												"mutability": "mutable",
												"name": "referralCode",
												"nameLocation": "12986:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1317,
												"src": "12979:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1311,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "12979:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1314,
												"mutability": "mutable",
												"name": "onBehalfOf",
												"nameLocation": "13012:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 1317,
												"src": "13004:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13004:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12904:122:11"
									},
									"returnParameters": {
										"id": 1316,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13035:0:11"
									},
									"scope": 1686,
									"src": "12889:147:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1318,
										"nodeType": "StructuredDocumentation",
										"src": "13040:873:11",
										"text": " @notice Repays a borrowed `amount` on a specific reserve, burning the equivalent debt tokens owned\n - E.g. User repays 100 USDC, burning 100 variable/stable debt tokens of the `onBehalfOf` address\n @param asset The address of the borrowed underlying asset previously borrowed\n @param amount The amount to repay\n - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\n @param interestRateMode The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\n @param onBehalfOf The address of the user who will get his debt reduced/removed. Should be the address of the\n user calling the function if he wants to reduce/remove his own debt, or the address of any other\n other borrower whose debt should be removed\n @return The final amount repaid"
									},
									"functionSelector": "573ade81",
									"id": 1331,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "repay",
									"nameLocation": "13925:5:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1320,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "13944:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1331,
												"src": "13936:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1319,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13936:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1322,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "13963:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1331,
												"src": "13955:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1321,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13955:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1324,
												"mutability": "mutable",
												"name": "interestRateMode",
												"nameLocation": "13983:16:11",
												"nodeType": "VariableDeclaration",
												"scope": 1331,
												"src": "13975:24:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1323,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13975:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1326,
												"mutability": "mutable",
												"name": "onBehalfOf",
												"nameLocation": "14013:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 1331,
												"src": "14005:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1325,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14005:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13930:97:11"
									},
									"returnParameters": {
										"id": 1330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1329,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1331,
												"src": "14046:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1328,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14046:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14045:9:11"
									},
									"scope": 1686,
									"src": "13916:139:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1332,
										"nodeType": "StructuredDocumentation",
										"src": "14059:1085:11",
										"text": " @notice Repay with transfer approval of asset to be repaid done via permit function\n see: https://eips.ethereum.org/EIPS/eip-2612 and https://eips.ethereum.org/EIPS/eip-713\n @param asset The address of the borrowed underlying asset previously borrowed\n @param amount The amount to repay\n - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\n @param interestRateMode The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\n @param onBehalfOf Address of the user who will get his debt reduced/removed. Should be the address of the\n user calling the function if he wants to reduce/remove his own debt, or the address of any other\n other borrower whose debt should be removed\n @param deadline The deadline timestamp that the permit is valid\n @param permitV The V parameter of ERC712 permit sig\n @param permitR The R parameter of ERC712 permit sig\n @param permitS The S parameter of ERC712 permit sig\n @return The final amount repaid"
									},
									"functionSelector": "ee3e210b",
									"id": 1353,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "repayWithPermit",
									"nameLocation": "15156:15:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1334,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "15185:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1353,
												"src": "15177:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15177:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1336,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "15204:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1353,
												"src": "15196:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1335,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15196:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1338,
												"mutability": "mutable",
												"name": "interestRateMode",
												"nameLocation": "15224:16:11",
												"nodeType": "VariableDeclaration",
												"scope": 1353,
												"src": "15216:24:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1337,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15216:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1340,
												"mutability": "mutable",
												"name": "onBehalfOf",
												"nameLocation": "15254:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 1353,
												"src": "15246:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15246:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1342,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "15278:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1353,
												"src": "15270:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15270:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1344,
												"mutability": "mutable",
												"name": "permitV",
												"nameLocation": "15298:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1353,
												"src": "15292:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1343,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "15292:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1346,
												"mutability": "mutable",
												"name": "permitR",
												"nameLocation": "15319:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1353,
												"src": "15311:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1345,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "15311:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1348,
												"mutability": "mutable",
												"name": "permitS",
												"nameLocation": "15340:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1353,
												"src": "15332:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1347,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "15332:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15171:180:11"
									},
									"returnParameters": {
										"id": 1352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1351,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1353,
												"src": "15370:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15370:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15369:9:11"
									},
									"scope": 1686,
									"src": "15147:232:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1354,
										"nodeType": "StructuredDocumentation",
										"src": "15383:779:11",
										"text": " @notice Repays a borrowed `amount` on a specific reserve using the reserve aTokens, burning the\n equivalent debt tokens\n - E.g. User repays 100 USDC using 100 aUSDC, burning 100 variable/stable debt tokens\n @dev  Passing uint256.max as amount will clean up any residual aToken dust balance, if the user aToken\n balance is not enough to cover the whole debt\n @param asset The address of the borrowed underlying asset previously borrowed\n @param amount The amount to repay\n - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\n @param interestRateMode The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\n @return The final amount repaid"
									},
									"functionSelector": "2dad97d4",
									"id": 1365,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "repayWithATokens",
									"nameLocation": "16174:16:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1356,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "16204:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "16196:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1355,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16196:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1358,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "16223:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "16215:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1357,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16215:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1360,
												"mutability": "mutable",
												"name": "interestRateMode",
												"nameLocation": "16243:16:11",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "16235:24:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1359,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16235:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16190:73:11"
									},
									"returnParameters": {
										"id": 1364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1363,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "16282:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1362,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16282:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16281:9:11"
									},
									"scope": 1686,
									"src": "16165:126:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1366,
										"nodeType": "StructuredDocumentation",
										"src": "16295:288:11",
										"text": " @notice Allows a borrower to swap his debt between stable and variable mode, or vice versa\n @param asset The address of the underlying asset borrowed\n @param interestRateMode The current interest rate mode of the position being swapped: 1 for Stable, 2 for Variable"
									},
									"functionSelector": "94ba89a2",
									"id": 1373,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapBorrowRateMode",
									"nameLocation": "16595:18:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1368,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "16622:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1373,
												"src": "16614:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16614:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1370,
												"mutability": "mutable",
												"name": "interestRateMode",
												"nameLocation": "16637:16:11",
												"nodeType": "VariableDeclaration",
												"scope": 1373,
												"src": "16629:24:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16629:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16613:41:11"
									},
									"returnParameters": {
										"id": 1372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16663:0:11"
									},
									"scope": 1686,
									"src": "16586:78:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1374,
										"nodeType": "StructuredDocumentation",
										"src": "16668:553:11",
										"text": " @notice Rebalances the stable interest rate of a user to the current stable rate defined on the reserve.\n - Users can be rebalanced if the following conditions are satisfied:\n     1. Usage ratio is above 95%\n     2. the current supply APY is below REBALANCE_UP_THRESHOLD * maxVariableBorrowRate, which means that too\n        much has been borrowed at a stable rate and suppliers are not earning enough\n @param asset The address of the underlying asset borrowed\n @param user The address of the user to be rebalanced"
									},
									"functionSelector": "cd112382",
									"id": 1381,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "rebalanceStableBorrowRate",
									"nameLocation": "17233:25:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1376,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "17267:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1381,
												"src": "17259:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1375,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17259:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1378,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "17282:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1381,
												"src": "17274:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17274:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17258:29:11"
									},
									"returnParameters": {
										"id": 1380,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17296:0:11"
									},
									"scope": 1686,
									"src": "17224:73:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1382,
										"nodeType": "StructuredDocumentation",
										"src": "17301:260:11",
										"text": " @notice Allows suppliers to enable/disable a specific supplied asset as collateral\n @param asset The address of the underlying asset supplied\n @param useAsCollateral True if the user wants to use the supply as collateral, false otherwise"
									},
									"functionSelector": "5a3b74b9",
									"id": 1389,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setUserUseReserveAsCollateral",
									"nameLocation": "17573:29:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1384,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "17611:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1389,
												"src": "17603:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17603:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1386,
												"mutability": "mutable",
												"name": "useAsCollateral",
												"nameLocation": "17623:15:11",
												"nodeType": "VariableDeclaration",
												"scope": 1389,
												"src": "17618:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1385,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17618:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17602:37:11"
									},
									"returnParameters": {
										"id": 1388,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17648:0:11"
									},
									"scope": 1686,
									"src": "17564:85:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1390,
										"nodeType": "StructuredDocumentation",
										"src": "17653:860:11",
										"text": " @notice Function to liquidate a non-healthy position collateral-wise, with Health Factor below 1\n - The caller (liquidator) covers `debtToCover` amount of debt of the user getting liquidated, and receives\n   a proportionally amount of the `collateralAsset` plus a bonus to cover market risk\n @param collateralAsset The address of the underlying asset used as collateral, to receive as result of the liquidation\n @param debtAsset The address of the underlying borrowed asset to be repaid with the liquidation\n @param user The address of the borrower getting liquidated\n @param debtToCover The debt amount of borrowed `asset` the liquidator wants to cover\n @param receiveAToken True if the liquidators wants to receive the collateral aTokens, `false` if he wants\n to receive the underlying collateral asset directly"
									},
									"functionSelector": "00a718a9",
									"id": 1403,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "liquidationCall",
									"nameLocation": "18525:15:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1392,
												"mutability": "mutable",
												"name": "collateralAsset",
												"nameLocation": "18554:15:11",
												"nodeType": "VariableDeclaration",
												"scope": 1403,
												"src": "18546:23:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1391,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18546:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1394,
												"mutability": "mutable",
												"name": "debtAsset",
												"nameLocation": "18583:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1403,
												"src": "18575:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1393,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18575:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1396,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "18606:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1403,
												"src": "18598:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1395,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18598:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1398,
												"mutability": "mutable",
												"name": "debtToCover",
												"nameLocation": "18624:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1403,
												"src": "18616:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1397,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18616:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1400,
												"mutability": "mutable",
												"name": "receiveAToken",
												"nameLocation": "18646:13:11",
												"nodeType": "VariableDeclaration",
												"scope": 1403,
												"src": "18641:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1399,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "18641:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18540:123:11"
									},
									"returnParameters": {
										"id": 1402,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18672:0:11"
									},
									"scope": 1686,
									"src": "18516:157:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1404,
										"nodeType": "StructuredDocumentation",
										"src": "18677:1407:11",
										"text": " @notice Allows smartcontracts to access the liquidity of the pool within one transaction,\n as long as the amount taken plus a fee is returned.\n @dev IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept\n into consideration. For further details please visit https://docs.aave.com/developers/\n @param receiverAddress The address of the contract receiving the funds, implementing IFlashLoanReceiver interface\n @param assets The addresses of the assets being flash-borrowed\n @param amounts The amounts of the assets being flash-borrowed\n @param interestRateModes Types of the debt to open if the flash loan is not returned:\n   0 -> Don't open any debt, just revert if funds can't be transferred from the receiver\n   1 -> Open debt at stable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\n   2 -> Open debt at variable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\n @param onBehalfOf The address  that will receive the debt in the case of using on `modes` 1 or 2\n @param params Variadic packed params to pass to the receiver as extra information\n @param referralCode The code used to register the integrator originating the operation, for potential rewards.\n   0 if the action is executed directly by the user, without any middle-man"
									},
									"functionSelector": "ab9c4b5d",
									"id": 1424,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "flashLoan",
									"nameLocation": "20096:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1406,
												"mutability": "mutable",
												"name": "receiverAddress",
												"nameLocation": "20119:15:11",
												"nodeType": "VariableDeclaration",
												"scope": 1424,
												"src": "20111:23:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1405,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20111:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1409,
												"mutability": "mutable",
												"name": "assets",
												"nameLocation": "20159:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1424,
												"src": "20140:25:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1407,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "20140:7:11",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1408,
													"nodeType": "ArrayTypeName",
													"src": "20140:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1412,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "20190:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1424,
												"src": "20171:26:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1410,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "20171:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1411,
													"nodeType": "ArrayTypeName",
													"src": "20171:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1415,
												"mutability": "mutable",
												"name": "interestRateModes",
												"nameLocation": "20222:17:11",
												"nodeType": "VariableDeclaration",
												"scope": 1424,
												"src": "20203:36:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1413,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "20203:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1414,
													"nodeType": "ArrayTypeName",
													"src": "20203:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1417,
												"mutability": "mutable",
												"name": "onBehalfOf",
												"nameLocation": "20253:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 1424,
												"src": "20245:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20245:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1419,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "20284:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1424,
												"src": "20269:21:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1418,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "20269:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1421,
												"mutability": "mutable",
												"name": "referralCode",
												"nameLocation": "20303:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1424,
												"src": "20296:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1420,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "20296:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20105:214:11"
									},
									"returnParameters": {
										"id": 1423,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20328:0:11"
									},
									"scope": 1686,
									"src": "20087:242:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1425,
										"nodeType": "StructuredDocumentation",
										"src": "20333:902:11",
										"text": " @notice Allows smartcontracts to access the liquidity of the pool within one transaction,\n as long as the amount taken plus a fee is returned.\n @dev IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept\n into consideration. For further details please visit https://docs.aave.com/developers/\n @param receiverAddress The address of the contract receiving the funds, implementing IFlashLoanSimpleReceiver interface\n @param asset The address of the asset being flash-borrowed\n @param amount The amount of the asset being flash-borrowed\n @param params Variadic packed params to pass to the receiver as extra information\n @param referralCode The code used to register the integrator originating the operation, for potential rewards.\n   0 if the action is executed directly by the user, without any middle-man"
									},
									"functionSelector": "42b0b77c",
									"id": 1438,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "flashLoanSimple",
									"nameLocation": "21247:15:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1427,
												"mutability": "mutable",
												"name": "receiverAddress",
												"nameLocation": "21276:15:11",
												"nodeType": "VariableDeclaration",
												"scope": 1438,
												"src": "21268:23:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1426,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21268:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1429,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "21305:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1438,
												"src": "21297:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21297:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1431,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "21324:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1438,
												"src": "21316:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21316:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1433,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "21351:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1438,
												"src": "21336:21:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1432,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "21336:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1435,
												"mutability": "mutable",
												"name": "referralCode",
												"nameLocation": "21370:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1438,
												"src": "21363:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1434,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "21363:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21262:124:11"
									},
									"returnParameters": {
										"id": 1437,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21395:0:11"
									},
									"scope": 1686,
									"src": "21238:158:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1439,
										"nodeType": "StructuredDocumentation",
										"src": "21400:630:11",
										"text": " @notice Returns the user account data across all the reserves\n @param user The address of the user\n @return totalCollateralBase The total collateral of the user in the base currency used by the price feed\n @return totalDebtBase The total debt of the user in the base currency used by the price feed\n @return availableBorrowsBase The borrowing power left of the user in the base currency used by the price feed\n @return currentLiquidationThreshold The liquidation threshold of the user\n @return ltv The loan to value of The user\n @return healthFactor The current health factor of the user"
									},
									"functionSelector": "bf92857c",
									"id": 1456,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getUserAccountData",
									"nameLocation": "22042:18:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1441,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "22074:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1456,
												"src": "22066:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1440,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22066:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22060:22:11"
									},
									"returnParameters": {
										"id": 1455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1444,
												"mutability": "mutable",
												"name": "totalCollateralBase",
												"nameLocation": "22133:19:11",
												"nodeType": "VariableDeclaration",
												"scope": 1456,
												"src": "22125:27:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1443,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22125:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1446,
												"mutability": "mutable",
												"name": "totalDebtBase",
												"nameLocation": "22168:13:11",
												"nodeType": "VariableDeclaration",
												"scope": 1456,
												"src": "22160:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1445,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22160:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1448,
												"mutability": "mutable",
												"name": "availableBorrowsBase",
												"nameLocation": "22197:20:11",
												"nodeType": "VariableDeclaration",
												"scope": 1456,
												"src": "22189:28:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1447,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22189:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1450,
												"mutability": "mutable",
												"name": "currentLiquidationThreshold",
												"nameLocation": "22233:27:11",
												"nodeType": "VariableDeclaration",
												"scope": 1456,
												"src": "22225:35:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22225:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1452,
												"mutability": "mutable",
												"name": "ltv",
												"nameLocation": "22276:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1456,
												"src": "22268:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1451,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22268:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1454,
												"mutability": "mutable",
												"name": "healthFactor",
												"nameLocation": "22295:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1456,
												"src": "22287:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1453,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22287:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22117:196:11"
									},
									"scope": 1686,
									"src": "22033:281:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1457,
										"nodeType": "StructuredDocumentation",
										"src": "22318:645:11",
										"text": " @notice Initializes a reserve, activating it, assigning an aToken and debt tokens and an\n interest rate strategy\n @dev Only callable by the PoolConfigurator contract\n @param asset The address of the underlying asset of the reserve\n @param aTokenAddress The address of the aToken that will be assigned to the reserve\n @param stableDebtAddress The address of the StableDebtToken that will be assigned to the reserve\n @param variableDebtAddress The address of the VariableDebtToken that will be assigned to the reserve\n @param interestRateStrategyAddress The address of the interest rate strategy contract"
									},
									"functionSelector": "7a708e92",
									"id": 1470,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initReserve",
									"nameLocation": "22975:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1459,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "23000:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1470,
												"src": "22992:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1458,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22992:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1461,
												"mutability": "mutable",
												"name": "aTokenAddress",
												"nameLocation": "23019:13:11",
												"nodeType": "VariableDeclaration",
												"scope": 1470,
												"src": "23011:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23011:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1463,
												"mutability": "mutable",
												"name": "stableDebtAddress",
												"nameLocation": "23046:17:11",
												"nodeType": "VariableDeclaration",
												"scope": 1470,
												"src": "23038:25:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1462,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23038:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1465,
												"mutability": "mutable",
												"name": "variableDebtAddress",
												"nameLocation": "23077:19:11",
												"nodeType": "VariableDeclaration",
												"scope": 1470,
												"src": "23069:27:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1464,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23069:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1467,
												"mutability": "mutable",
												"name": "interestRateStrategyAddress",
												"nameLocation": "23110:27:11",
												"nodeType": "VariableDeclaration",
												"scope": 1470,
												"src": "23102:35:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1466,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23102:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22986:155:11"
									},
									"returnParameters": {
										"id": 1469,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23150:0:11"
									},
									"scope": 1686,
									"src": "22966:185:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1471,
										"nodeType": "StructuredDocumentation",
										"src": "23155:163:11",
										"text": " @notice Drop a reserve\n @dev Only callable by the PoolConfigurator contract\n @param asset The address of the underlying asset of the reserve"
									},
									"functionSelector": "63c9b860",
									"id": 1476,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "dropReserve",
									"nameLocation": "23330:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1473,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "23350:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1476,
												"src": "23342:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1472,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23342:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23341:15:11"
									},
									"returnParameters": {
										"id": 1475,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23365:0:11"
									},
									"scope": 1686,
									"src": "23321:45:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1477,
										"nodeType": "StructuredDocumentation",
										"src": "23370:290:11",
										"text": " @notice Updates the address of the interest rate strategy contract\n @dev Only callable by the PoolConfigurator contract\n @param asset The address of the underlying asset of the reserve\n @param rateStrategyAddress The address of the interest rate strategy contract"
									},
									"functionSelector": "1d2118f9",
									"id": 1484,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setReserveInterestRateStrategyAddress",
									"nameLocation": "23672:37:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1479,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "23723:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1484,
												"src": "23715:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23715:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1481,
												"mutability": "mutable",
												"name": "rateStrategyAddress",
												"nameLocation": "23742:19:11",
												"nodeType": "VariableDeclaration",
												"scope": 1484,
												"src": "23734:27:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1480,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23734:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23709:56:11"
									},
									"returnParameters": {
										"id": 1483,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23774:0:11"
									},
									"scope": 1686,
									"src": "23663:112:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1485,
										"nodeType": "StructuredDocumentation",
										"src": "23779:259:11",
										"text": " @notice Sets the configuration bitmap of the reserve as a whole\n @dev Only callable by the PoolConfigurator contract\n @param asset The address of the underlying asset of the reserve\n @param configuration The new configuration bitmap"
									},
									"functionSelector": "f51e435b",
									"id": 1493,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setConfiguration",
									"nameLocation": "24050:16:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1487,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "24080:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1493,
												"src": "24072:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24072:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1490,
												"mutability": "mutable",
												"name": "configuration",
												"nameLocation": "24134:13:11",
												"nodeType": "VariableDeclaration",
												"scope": 1493,
												"src": "24091:56:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReserveConfigurationMap_$1990_calldata_ptr",
													"typeString": "struct DataTypes.ReserveConfigurationMap"
												},
												"typeName": {
													"id": 1489,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1488,
														"name": "DataTypes.ReserveConfigurationMap",
														"nameLocations": [
															"24091:9:11",
															"24101:23:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1990,
														"src": "24091:33:11"
													},
													"referencedDeclaration": 1990,
													"src": "24091:33:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReserveConfigurationMap_$1990_storage_ptr",
														"typeString": "struct DataTypes.ReserveConfigurationMap"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24066:85:11"
									},
									"returnParameters": {
										"id": 1492,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24160:0:11"
									},
									"scope": 1686,
									"src": "24041:120:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1494,
										"nodeType": "StructuredDocumentation",
										"src": "24165:178:11",
										"text": " @notice Returns the configuration of the reserve\n @param asset The address of the underlying asset of the reserve\n @return The configuration of the reserve"
									},
									"functionSelector": "c44b11f7",
									"id": 1502,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getConfiguration",
									"nameLocation": "24355:16:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1496,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "24385:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1502,
												"src": "24377:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1495,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24377:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24371:23:11"
									},
									"returnParameters": {
										"id": 1501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1500,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1502,
												"src": "24418:40:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReserveConfigurationMap_$1990_memory_ptr",
													"typeString": "struct DataTypes.ReserveConfigurationMap"
												},
												"typeName": {
													"id": 1499,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1498,
														"name": "DataTypes.ReserveConfigurationMap",
														"nameLocations": [
															"24418:9:11",
															"24428:23:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1990,
														"src": "24418:33:11"
													},
													"referencedDeclaration": 1990,
													"src": "24418:33:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReserveConfigurationMap_$1990_storage_ptr",
														"typeString": "struct DataTypes.ReserveConfigurationMap"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24417:42:11"
									},
									"scope": 1686,
									"src": "24346:114:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1503,
										"nodeType": "StructuredDocumentation",
										"src": "24464:161:11",
										"text": " @notice Returns the configuration of the user across all the reserves\n @param user The user address\n @return The configuration of the user"
									},
									"functionSelector": "4417a583",
									"id": 1511,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getUserConfiguration",
									"nameLocation": "24637:20:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1505,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "24671:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1511,
												"src": "24663:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1504,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24663:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24657:22:11"
									},
									"returnParameters": {
										"id": 1510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1509,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1511,
												"src": "24703:37:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserConfigurationMap_$1994_memory_ptr",
													"typeString": "struct DataTypes.UserConfigurationMap"
												},
												"typeName": {
													"id": 1508,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1507,
														"name": "DataTypes.UserConfigurationMap",
														"nameLocations": [
															"24703:9:11",
															"24713:20:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1994,
														"src": "24703:30:11"
													},
													"referencedDeclaration": 1994,
													"src": "24703:30:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserConfigurationMap_$1994_storage_ptr",
														"typeString": "struct DataTypes.UserConfigurationMap"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24702:39:11"
									},
									"scope": 1686,
									"src": "24628:114:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1512,
										"nodeType": "StructuredDocumentation",
										"src": "24746:181:11",
										"text": " @notice Returns the normalized income of the reserve\n @param asset The address of the underlying asset of the reserve\n @return The reserve's normalized income"
									},
									"functionSelector": "d15e0053",
									"id": 1519,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReserveNormalizedIncome",
									"nameLocation": "24939:26:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1514,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "24974:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1519,
												"src": "24966:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1513,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24966:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24965:15:11"
									},
									"returnParameters": {
										"id": 1518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1517,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1519,
												"src": "25004:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1516,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25004:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25003:9:11"
									},
									"scope": 1686,
									"src": "24930:83:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1520,
										"nodeType": "StructuredDocumentation",
										"src": "25017:805:11",
										"text": " @notice Returns the normalized variable debt per unit of asset\n @dev WARNING: This function is intended to be used primarily by the protocol itself to get a\n \"dynamic\" variable index based on time, current stored index and virtual rate at the current\n moment (approx. a borrower would get if opening a position). This means that is always used in\n combination with variable debt supply/balances.\n If using this function externally, consider that is possible to have an increasing normalized\n variable debt that is not equivalent to how the variable debt index would be updated in storage\n (e.g. only updates with non-zero variable debt supply)\n @param asset The address of the underlying asset of the reserve\n @return The reserve normalized variable debt"
									},
									"functionSelector": "386497fd",
									"id": 1527,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReserveNormalizedVariableDebt",
									"nameLocation": "25834:32:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1522,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "25875:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1527,
												"src": "25867:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25867:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25866:15:11"
									},
									"returnParameters": {
										"id": 1526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1525,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1527,
												"src": "25905:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1524,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25905:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25904:9:11"
									},
									"scope": 1686,
									"src": "25825:89:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1528,
										"nodeType": "StructuredDocumentation",
										"src": "25918:203:11",
										"text": " @notice Returns the state and configuration of the reserve\n @param asset The address of the underlying asset of the reserve\n @return The state and configuration data of the reserve"
									},
									"functionSelector": "35ea6a75",
									"id": 1536,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReserveData",
									"nameLocation": "26133:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1530,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "26156:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1536,
												"src": "26148:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1529,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26148:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26147:15:11"
									},
									"returnParameters": {
										"id": 1535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1534,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1536,
												"src": "26186:28:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReserveData_$1987_memory_ptr",
													"typeString": "struct DataTypes.ReserveData"
												},
												"typeName": {
													"id": 1533,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1532,
														"name": "DataTypes.ReserveData",
														"nameLocations": [
															"26186:9:11",
															"26196:11:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1987,
														"src": "26186:21:11"
													},
													"referencedDeclaration": 1987,
													"src": "26186:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReserveData_$1987_storage_ptr",
														"typeString": "struct DataTypes.ReserveData"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26185:30:11"
									},
									"scope": 1686,
									"src": "26124:92:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1537,
										"nodeType": "StructuredDocumentation",
										"src": "26220:537:11",
										"text": " @notice Validates and finalizes an aToken transfer\n @dev Only callable by the overlying aToken of the `asset`\n @param asset The address of the underlying asset of the aToken\n @param from The user from which the aTokens are transferred\n @param to The user receiving the aTokens\n @param amount The amount being transferred/withdrawn\n @param balanceFromBefore The aToken balance of the `from` user before the transfer\n @param balanceToBefore The aToken balance of the `to` user before the transfer"
									},
									"functionSelector": "d5ed3933",
									"id": 1552,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "finalizeTransfer",
									"nameLocation": "26769:16:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1539,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "26799:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1552,
												"src": "26791:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1538,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26791:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1541,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "26818:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1552,
												"src": "26810:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26810:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1543,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "26836:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 1552,
												"src": "26828:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1542,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26828:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1545,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "26852:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1552,
												"src": "26844:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1544,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26844:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1547,
												"mutability": "mutable",
												"name": "balanceFromBefore",
												"nameLocation": "26872:17:11",
												"nodeType": "VariableDeclaration",
												"scope": 1552,
												"src": "26864:25:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1546,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26864:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1549,
												"mutability": "mutable",
												"name": "balanceToBefore",
												"nameLocation": "26903:15:11",
												"nodeType": "VariableDeclaration",
												"scope": 1552,
												"src": "26895:23:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26895:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26785:137:11"
									},
									"returnParameters": {
										"id": 1551,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26931:0:11"
									},
									"scope": 1686,
									"src": "26760:172:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1553,
										"nodeType": "StructuredDocumentation",
										"src": "26936:223:11",
										"text": " @notice Returns the list of the underlying assets of all the initialized reserves\n @dev It does not include dropped reserves\n @return The addresses of the underlying assets of the initialized reserves"
									},
									"functionSelector": "d1946dbc",
									"id": 1559,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReservesList",
									"nameLocation": "27171:15:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1554,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27186:2:11"
									},
									"returnParameters": {
										"id": 1558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1557,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "27212:16:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1555,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "27212:7:11",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1556,
													"nodeType": "ArrayTypeName",
													"src": "27212:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27211:18:11"
									},
									"scope": 1686,
									"src": "27162:68:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1560,
										"nodeType": "StructuredDocumentation",
										"src": "27234:285:11",
										"text": " @notice Returns the address of the underlying asset of a reserve by the reserve id as stored in the DataTypes.ReserveData struct\n @param id The id of the reserve as stored in the DataTypes.ReserveData struct\n @return The address of the reserve associated with id"
									},
									"functionSelector": "52751797",
									"id": 1567,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReserveAddressById",
									"nameLocation": "27531:21:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1562,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "27560:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 1567,
												"src": "27553:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1561,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "27553:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27552:11:11"
									},
									"returnParameters": {
										"id": 1566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1565,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1567,
												"src": "27587:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1564,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27587:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27586:9:11"
									},
									"scope": 1686,
									"src": "27522:74:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1568,
										"nodeType": "StructuredDocumentation",
										"src": "27600:137:11",
										"text": " @notice Returns the PoolAddressesProvider connected to this contract\n @return The address of the PoolAddressesProvider"
									},
									"functionSelector": "0542975c",
									"id": 1574,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ADDRESSES_PROVIDER",
									"nameLocation": "27749:18:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1569,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27767:2:11"
									},
									"returnParameters": {
										"id": 1573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1572,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1574,
												"src": "27793:22:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IPoolAddressesProvider_$1895",
													"typeString": "contract IPoolAddressesProvider"
												},
												"typeName": {
													"id": 1571,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1570,
														"name": "IPoolAddressesProvider",
														"nameLocations": [
															"27793:22:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1895,
														"src": "27793:22:11"
													},
													"referencedDeclaration": 1895,
													"src": "27793:22:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IPoolAddressesProvider_$1895",
														"typeString": "contract IPoolAddressesProvider"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27792:24:11"
									},
									"scope": 1686,
									"src": "27740:77:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1575,
										"nodeType": "StructuredDocumentation",
										"src": "27821:147:11",
										"text": " @notice Updates the protocol fee on the bridging\n @param bridgeProtocolFee The part of the premium sent to the protocol treasury"
									},
									"functionSelector": "3036b439",
									"id": 1580,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateBridgeProtocolFee",
									"nameLocation": "27980:23:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1577,
												"mutability": "mutable",
												"name": "bridgeProtocolFee",
												"nameLocation": "28012:17:11",
												"nodeType": "VariableDeclaration",
												"scope": 1580,
												"src": "28004:25:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1576,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28004:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28003:27:11"
									},
									"returnParameters": {
										"id": 1579,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28039:0:11"
									},
									"scope": 1686,
									"src": "27971:69:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1581,
										"nodeType": "StructuredDocumentation",
										"src": "28044:650:11",
										"text": " @notice Updates flash loan premiums. Flash loan premium consists of two parts:\n - A part is sent to aToken holders as extra, one time accumulated interest\n - A part is collected by the protocol treasury\n @dev The total premium is calculated on the total borrowed amount\n @dev The premium to protocol is calculated on the total premium, being a percentage of `flashLoanPremiumTotal`\n @dev Only callable by the PoolConfigurator contract\n @param flashLoanPremiumTotal The total premium, expressed in bps\n @param flashLoanPremiumToProtocol The part of the premium sent to the protocol treasury, expressed in bps"
									},
									"functionSelector": "bcb6e522",
									"id": 1588,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateFlashloanPremiums",
									"nameLocation": "28706:23:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1583,
												"mutability": "mutable",
												"name": "flashLoanPremiumTotal",
												"nameLocation": "28743:21:11",
												"nodeType": "VariableDeclaration",
												"scope": 1588,
												"src": "28735:29:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1582,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "28735:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1585,
												"mutability": "mutable",
												"name": "flashLoanPremiumToProtocol",
												"nameLocation": "28778:26:11",
												"nodeType": "VariableDeclaration",
												"scope": 1588,
												"src": "28770:34:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1584,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "28770:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28729:79:11"
									},
									"returnParameters": {
										"id": 1587,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28817:0:11"
									},
									"scope": 1686,
									"src": "28697:121:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1589,
										"nodeType": "StructuredDocumentation",
										"src": "28822:331:11",
										"text": " @notice Configures a new category for the eMode.\n @dev In eMode, the protocol allows very high borrowing power to borrow assets of the same category.\n The category 0 is reserved as it's the default for volatile assets\n @param id The id of the category\n @param config The configuration of the category"
									},
									"functionSelector": "d579ea7d",
									"id": 1597,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "configureEModeCategory",
									"nameLocation": "29165:22:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1591,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "29194:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 1597,
												"src": "29188:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1590,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "29188:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1594,
												"mutability": "mutable",
												"name": "config",
												"nameLocation": "29229:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1597,
												"src": "29198:37:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_EModeCategory_$2005_memory_ptr",
													"typeString": "struct DataTypes.EModeCategory"
												},
												"typeName": {
													"id": 1593,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1592,
														"name": "DataTypes.EModeCategory",
														"nameLocations": [
															"29198:9:11",
															"29208:13:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2005,
														"src": "29198:23:11"
													},
													"referencedDeclaration": 2005,
													"src": "29198:23:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_EModeCategory_$2005_storage_ptr",
														"typeString": "struct DataTypes.EModeCategory"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29187:49:11"
									},
									"returnParameters": {
										"id": 1596,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29245:0:11"
									},
									"scope": 1686,
									"src": "29156:90:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1598,
										"nodeType": "StructuredDocumentation",
										"src": "29250:150:11",
										"text": " @notice Returns the data of an eMode category\n @param id The id of the category\n @return The configuration data of the category"
									},
									"functionSelector": "6c6f6ae1",
									"id": 1606,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getEModeCategoryData",
									"nameLocation": "29412:20:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1600,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "29439:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 1606,
												"src": "29433:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1599,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "29433:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29432:10:11"
									},
									"returnParameters": {
										"id": 1605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1604,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1606,
												"src": "29466:30:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_EModeCategory_$2005_memory_ptr",
													"typeString": "struct DataTypes.EModeCategory"
												},
												"typeName": {
													"id": 1603,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1602,
														"name": "DataTypes.EModeCategory",
														"nameLocations": [
															"29466:9:11",
															"29476:13:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2005,
														"src": "29466:23:11"
													},
													"referencedDeclaration": 2005,
													"src": "29466:23:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_EModeCategory_$2005_storage_ptr",
														"typeString": "struct DataTypes.EModeCategory"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29465:32:11"
									},
									"scope": 1686,
									"src": "29403:95:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1607,
										"nodeType": "StructuredDocumentation",
										"src": "29502:111:11",
										"text": " @notice Allows a user to use the protocol in eMode\n @param categoryId The id of the category"
									},
									"functionSelector": "28530a47",
									"id": 1612,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setUserEMode",
									"nameLocation": "29625:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1609,
												"mutability": "mutable",
												"name": "categoryId",
												"nameLocation": "29644:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 1612,
												"src": "29638:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1608,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "29638:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29637:18:11"
									},
									"returnParameters": {
										"id": 1611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29664:0:11"
									},
									"scope": 1686,
									"src": "29616:49:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1613,
										"nodeType": "StructuredDocumentation",
										"src": "29669:125:11",
										"text": " @notice Returns the eMode the user is using\n @param user The address of the user\n @return The eMode id"
									},
									"functionSelector": "eddf1b79",
									"id": 1620,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getUserEMode",
									"nameLocation": "29806:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1615,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "29827:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1620,
												"src": "29819:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1614,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29819:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29818:14:11"
									},
									"returnParameters": {
										"id": 1619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1618,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1620,
												"src": "29856:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1617,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29856:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29855:9:11"
									},
									"scope": 1686,
									"src": "29797:68:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1621,
										"nodeType": "StructuredDocumentation",
										"src": "29869:236:11",
										"text": " @notice Resets the isolation mode total debt of the given asset to zero\n @dev It requires the given asset has zero debt ceiling\n @param asset The address of the underlying asset to reset the isolationModeTotalDebt"
									},
									"functionSelector": "e43e88a1",
									"id": 1626,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "resetIsolationModeTotalDebt",
									"nameLocation": "30117:27:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1623,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "30153:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1626,
												"src": "30145:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1622,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30145:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30144:15:11"
									},
									"returnParameters": {
										"id": 1625,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30168:0:11"
									},
									"scope": 1686,
									"src": "30108:61:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1627,
										"nodeType": "StructuredDocumentation",
										"src": "30173:191:11",
										"text": " @notice Returns the percentage of available liquidity that can be borrowed at once at stable rate\n @return The percentage of available liquidity to borrow, expressed in bps"
									},
									"functionSelector": "e82fec2f",
									"id": 1632,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "MAX_STABLE_RATE_BORROW_SIZE_PERCENT",
									"nameLocation": "30376:35:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1628,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30411:2:11"
									},
									"returnParameters": {
										"id": 1631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1630,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1632,
												"src": "30437:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1629,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30437:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30436:9:11"
									},
									"scope": 1686,
									"src": "30367:79:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1633,
										"nodeType": "StructuredDocumentation",
										"src": "30450:100:11",
										"text": " @notice Returns the total fee on flash loans\n @return The total fee on flashloans"
									},
									"functionSelector": "074b2e43",
									"id": 1638,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "FLASHLOAN_PREMIUM_TOTAL",
									"nameLocation": "30562:23:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1634,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30585:2:11"
									},
									"returnParameters": {
										"id": 1637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1636,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1638,
												"src": "30611:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1635,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "30611:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30610:9:11"
									},
									"scope": 1686,
									"src": "30553:67:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1639,
										"nodeType": "StructuredDocumentation",
										"src": "30624:133:11",
										"text": " @notice Returns the part of the bridge fees sent to protocol\n @return The bridge fee sent to the protocol treasury"
									},
									"functionSelector": "272d9072",
									"id": 1644,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "BRIDGE_PROTOCOL_FEE",
									"nameLocation": "30769:19:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1640,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30788:2:11"
									},
									"returnParameters": {
										"id": 1643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1642,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1644,
												"src": "30814:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1641,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30814:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30813:9:11"
									},
									"scope": 1686,
									"src": "30760:63:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1645,
										"nodeType": "StructuredDocumentation",
										"src": "30827:139:11",
										"text": " @notice Returns the part of the flashloan fees sent to protocol\n @return The flashloan fee sent to the protocol treasury"
									},
									"functionSelector": "6a99c036",
									"id": 1650,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "FLASHLOAN_PREMIUM_TO_PROTOCOL",
									"nameLocation": "30978:29:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31007:2:11"
									},
									"returnParameters": {
										"id": 1649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1648,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1650,
												"src": "31033:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1647,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "31033:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31032:9:11"
									},
									"scope": 1686,
									"src": "30969:73:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1651,
										"nodeType": "StructuredDocumentation",
										"src": "31046:151:11",
										"text": " @notice Returns the maximum number of reserves supported to be listed in this Pool\n @return The maximum number of reserves supported"
									},
									"functionSelector": "f8119d51",
									"id": 1656,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "MAX_NUMBER_RESERVES",
									"nameLocation": "31209:19:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1652,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31228:2:11"
									},
									"returnParameters": {
										"id": 1655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1654,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1656,
												"src": "31254:6:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1653,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "31254:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31253:8:11"
									},
									"scope": 1686,
									"src": "31200:62:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1657,
										"nodeType": "StructuredDocumentation",
										"src": "31266:196:11",
										"text": " @notice Mints the assets accrued through the reserve factor to the treasury in the form of aTokens\n @param assets The list of reserves for which the minting needs to be executed"
									},
									"functionSelector": "9cd19996",
									"id": 1663,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mintToTreasury",
									"nameLocation": "31474:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1660,
												"mutability": "mutable",
												"name": "assets",
												"nameLocation": "31508:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1663,
												"src": "31489:25:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1658,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "31489:7:11",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1659,
													"nodeType": "ArrayTypeName",
													"src": "31489:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31488:27:11"
									},
									"returnParameters": {
										"id": 1662,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31524:0:11"
									},
									"scope": 1686,
									"src": "31465:60:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1664,
										"nodeType": "StructuredDocumentation",
										"src": "31529:211:11",
										"text": " @notice Rescue and transfer tokens locked in this contract\n @param token The address of the token\n @param to The address of the recipient\n @param amount The amount of token to transfer"
									},
									"functionSelector": "cea9d26f",
									"id": 1673,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "rescueTokens",
									"nameLocation": "31752:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1666,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "31773:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1673,
												"src": "31765:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31765:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1668,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "31788:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 1673,
												"src": "31780:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31780:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1670,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "31800:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1673,
												"src": "31792:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31792:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31764:43:11"
									},
									"returnParameters": {
										"id": 1672,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31816:0:11"
									},
									"scope": 1686,
									"src": "31743:74:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1674,
										"nodeType": "StructuredDocumentation",
										"src": "31821:768:11",
										"text": " @notice Supplies an `amount` of underlying asset into the reserve, receiving in return overlying aTokens.\n - E.g. User supplies 100 USDC and gets in return 100 aUSDC\n @dev Deprecated: Use the `supply` function instead\n @param asset The address of the underlying asset to supply\n @param amount The amount to be supplied\n @param onBehalfOf The address that will receive the aTokens, same as msg.sender if the user\n   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens\n   is a different wallet\n @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   0 if the action is executed directly by the user, without any middle-man"
									},
									"functionSelector": "e8eda9df",
									"id": 1685,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "32601:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1676,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "32617:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1685,
												"src": "32609:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1675,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32609:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1678,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "32632:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1685,
												"src": "32624:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1677,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32624:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1680,
												"mutability": "mutable",
												"name": "onBehalfOf",
												"nameLocation": "32648:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 1685,
												"src": "32640:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1679,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32640:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1682,
												"mutability": "mutable",
												"name": "referralCode",
												"nameLocation": "32667:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1685,
												"src": "32660:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1681,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "32660:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32608:72:11"
									},
									"returnParameters": {
										"id": 1684,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32689:0:11"
									},
									"scope": 1686,
									"src": "32592:98:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1687,
							"src": "298:32394:11",
							"usedErrors": [],
							"usedEvents": [
								1067,
								1078,
								1091,
								1102,
								1120,
								1133,
								1143,
								1150,
								1157,
								1164,
								1171,
								1178,
								1196,
								1213,
								1228,
								1235
							]
						}
					],
					"src": "37:32656:11"
				},
				"id": 11
			},
			"@aave/core-v3/contracts/interfaces/IPoolAddressesProvider.sol": {
				"ast": {
					"absolutePath": "@aave/core-v3/contracts/interfaces/IPoolAddressesProvider.sol",
					"exportedSymbols": {
						"IPoolAddressesProvider": [
							1895
						]
					},
					"id": 1896,
					"license": "AGPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1688,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IPoolAddressesProvider",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1689,
								"nodeType": "StructuredDocumentation",
								"src": "62:126:12",
								"text": " @title IPoolAddressesProvider\n @author Aave\n @notice Defines the basic interface for a Pool Addresses Provider."
							},
							"fullyImplemented": false,
							"id": 1895,
							"linearizedBaseContracts": [
								1895
							],
							"name": "IPoolAddressesProvider",
							"nameLocation": "199:22:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1690,
										"nodeType": "StructuredDocumentation",
										"src": "226:164:12",
										"text": " @dev Emitted when the market identifier is updated.\n @param oldMarketId The old id of the market\n @param newMarketId The new id of the market"
									},
									"eventSelector": "e685c8cdecc6030c45030fd54778812cb84ed8e4467c38294403d68ba7860823",
									"id": 1696,
									"name": "MarketIdSet",
									"nameLocation": "399:11:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1692,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldMarketId",
												"nameLocation": "426:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1696,
												"src": "411:26:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1691,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "411:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1694,
												"indexed": true,
												"mutability": "mutable",
												"name": "newMarketId",
												"nameLocation": "454:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1696,
												"src": "439:26:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1693,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "439:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "410:56:12"
									},
									"src": "393:74:12"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1697,
										"nodeType": "StructuredDocumentation",
										"src": "471:155:12",
										"text": " @dev Emitted when the pool is updated.\n @param oldAddress The old address of the Pool\n @param newAddress The new address of the Pool"
									},
									"eventSelector": "90affc163f1a2dfedcd36aa02ed992eeeba8100a4014f0b4cdc20ea265a66627",
									"id": 1703,
									"name": "PoolUpdated",
									"nameLocation": "635:11:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1699,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldAddress",
												"nameLocation": "663:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 1703,
												"src": "647:26:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "647:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1701,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "691:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 1703,
												"src": "675:26:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "675:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "646:56:12"
									},
									"src": "629:74:12"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1704,
										"nodeType": "StructuredDocumentation",
										"src": "707:192:12",
										"text": " @dev Emitted when the pool configurator is updated.\n @param oldAddress The old address of the PoolConfigurator\n @param newAddress The new address of the PoolConfigurator"
									},
									"eventSelector": "8932892569eba59c8382a089d9b732d1f49272878775235761a2a6b0309cd465",
									"id": 1710,
									"name": "PoolConfiguratorUpdated",
									"nameLocation": "908:23:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1706,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldAddress",
												"nameLocation": "948:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 1710,
												"src": "932:26:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1705,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1708,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "976:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 1710,
												"src": "960:26:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1707,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "960:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "931:56:12"
									},
									"src": "902:86:12"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1711,
										"nodeType": "StructuredDocumentation",
										"src": "992:177:12",
										"text": " @dev Emitted when the price oracle is updated.\n @param oldAddress The old address of the PriceOracle\n @param newAddress The new address of the PriceOracle"
									},
									"eventSelector": "56b5f80d8cac1479698aa7d01605fd6111e90b15fc4d2b377417f46034876cbd",
									"id": 1717,
									"name": "PriceOracleUpdated",
									"nameLocation": "1178:18:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1713,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldAddress",
												"nameLocation": "1213:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 1717,
												"src": "1197:26:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1712,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1197:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1715,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "1241:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 1717,
												"src": "1225:26:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1714,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1225:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1196:56:12"
									},
									"src": "1172:81:12"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1718,
										"nodeType": "StructuredDocumentation",
										"src": "1257:174:12",
										"text": " @dev Emitted when the ACL manager is updated.\n @param oldAddress The old address of the ACLManager\n @param newAddress The new address of the ACLManager"
									},
									"eventSelector": "b30efa04327bb8a537d61cc1e5c48095345ad18ef7cc04e6bacf7dfb6caaf507",
									"id": 1724,
									"name": "ACLManagerUpdated",
									"nameLocation": "1440:17:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1720,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldAddress",
												"nameLocation": "1474:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 1724,
												"src": "1458:26:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1719,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1458:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1722,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "1502:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 1724,
												"src": "1486:26:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1721,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1486:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1457:56:12"
									},
									"src": "1434:80:12"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1725,
										"nodeType": "StructuredDocumentation",
										"src": "1518:168:12",
										"text": " @dev Emitted when the ACL admin is updated.\n @param oldAddress The old address of the ACLAdmin\n @param newAddress The new address of the ACLAdmin"
									},
									"eventSelector": "e9cf53972264dc95304fd424458745019ddfca0e37ae8f703d74772c41ad115b",
									"id": 1731,
									"name": "ACLAdminUpdated",
									"nameLocation": "1695:15:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1727,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldAddress",
												"nameLocation": "1727:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 1731,
												"src": "1711:26:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1726,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1711:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1729,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "1755:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 1731,
												"src": "1739:26:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1728,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1739:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1710:56:12"
									},
									"src": "1689:78:12"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1732,
										"nodeType": "StructuredDocumentation",
										"src": "1771:202:12",
										"text": " @dev Emitted when the price oracle sentinel is updated.\n @param oldAddress The old address of the PriceOracleSentinel\n @param newAddress The new address of the PriceOracleSentinel"
									},
									"eventSelector": "5326514eeca90494a14bedabcff812a0e683029ee85d1e23824d44fd14cd6ae7",
									"id": 1738,
									"name": "PriceOracleSentinelUpdated",
									"nameLocation": "1982:26:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1734,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldAddress",
												"nameLocation": "2025:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 1738,
												"src": "2009:26:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1733,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2009:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1736,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "2053:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 1738,
												"src": "2037:26:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1735,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2037:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:56:12"
									},
									"src": "1976:89:12"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1739,
										"nodeType": "StructuredDocumentation",
										"src": "2069:193:12",
										"text": " @dev Emitted when the pool data provider is updated.\n @param oldAddress The old address of the PoolDataProvider\n @param newAddress The new address of the PoolDataProvider"
									},
									"eventSelector": "c853974cfbf81487a14a23565917bee63f527853bcb5fa54f2ae1cdf8a38356d",
									"id": 1745,
									"name": "PoolDataProviderUpdated",
									"nameLocation": "2271:23:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1741,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldAddress",
												"nameLocation": "2311:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 1745,
												"src": "2295:26:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1740,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2295:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1743,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "2339:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 1745,
												"src": "2323:26:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1742,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2323:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2294:56:12"
									},
									"src": "2265:86:12"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1746,
										"nodeType": "StructuredDocumentation",
										"src": "2355:243:12",
										"text": " @dev Emitted when a new proxy is created.\n @param id The identifier of the proxy\n @param proxyAddress The address of the created proxy contract\n @param implementationAddress The address of the implementation contract"
									},
									"eventSelector": "4a465a9bd819d9662563c1e11ae958f8109e437e7f4bf1c6ef0b9a7b3f35d478",
									"id": 1754,
									"name": "ProxyCreated",
									"nameLocation": "2607:12:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1748,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "2641:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 1754,
												"src": "2625:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1747,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2625:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1750,
												"indexed": true,
												"mutability": "mutable",
												"name": "proxyAddress",
												"nameLocation": "2665:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 1754,
												"src": "2649:28:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1749,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2649:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1752,
												"indexed": true,
												"mutability": "mutable",
												"name": "implementationAddress",
												"nameLocation": "2699:21:12",
												"nodeType": "VariableDeclaration",
												"scope": 1754,
												"src": "2683:37:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1751,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2683:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2619:105:12"
									},
									"src": "2601:124:12"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1755,
										"nodeType": "StructuredDocumentation",
										"src": "2729:238:12",
										"text": " @dev Emitted when a new non-proxied contract address is registered.\n @param id The identifier of the contract\n @param oldAddress The address of the old contract\n @param newAddress The address of the new contract"
									},
									"eventSelector": "9ef0e8c8e52743bb38b83b17d9429141d494b8041ca6d616a6c77cebae9cd8b7",
									"id": 1763,
									"name": "AddressSet",
									"nameLocation": "2976:10:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1757,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3003:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 1763,
												"src": "2987:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1756,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2987:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1759,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldAddress",
												"nameLocation": "3023:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 1763,
												"src": "3007:26:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1758,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3007:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1761,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "3051:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 1763,
												"src": "3035:26:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3035:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2986:76:12"
									},
									"src": "2970:93:12"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1764,
										"nodeType": "StructuredDocumentation",
										"src": "3067:367:12",
										"text": " @dev Emitted when the implementation of the proxy registered with id is updated\n @param id The identifier of the contract\n @param proxyAddress The address of the proxy contract\n @param oldImplementationAddress The address of the old implementation contract\n @param newImplementationAddress The address of the new implementation contract"
									},
									"eventSelector": "3bbd45b5429b385e3fb37ad5cd1cd1435a3c8ec32196c7937597365a3fd3e99c",
									"id": 1774,
									"name": "AddressSetAsProxy",
									"nameLocation": "3443:17:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1766,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3482:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 1774,
												"src": "3466:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1765,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3466:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1768,
												"indexed": true,
												"mutability": "mutable",
												"name": "proxyAddress",
												"nameLocation": "3506:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 1774,
												"src": "3490:28:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1767,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3490:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1770,
												"indexed": false,
												"mutability": "mutable",
												"name": "oldImplementationAddress",
												"nameLocation": "3532:24:12",
												"nodeType": "VariableDeclaration",
												"scope": 1774,
												"src": "3524:32:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1769,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3524:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1772,
												"indexed": true,
												"mutability": "mutable",
												"name": "newImplementationAddress",
												"nameLocation": "3578:24:12",
												"nodeType": "VariableDeclaration",
												"scope": 1774,
												"src": "3562:40:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1771,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3562:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3460:146:12"
									},
									"src": "3437:170:12"
								},
								{
									"documentation": {
										"id": 1775,
										"nodeType": "StructuredDocumentation",
										"src": "3611:117:12",
										"text": " @notice Returns the id of the Aave market to which this contract points to.\n @return The market id"
									},
									"functionSelector": "568ef470",
									"id": 1780,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getMarketId",
									"nameLocation": "3740:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1776,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3751:2:12"
									},
									"returnParameters": {
										"id": 1779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1778,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1780,
												"src": "3777:13:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1777,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3777:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3776:15:12"
									},
									"scope": 1895,
									"src": "3731:61:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1781,
										"nodeType": "StructuredDocumentation",
										"src": "3796:252:12",
										"text": " @notice Associates an id with a specific PoolAddressesProvider.\n @dev This can be used to create an onchain registry of PoolAddressesProviders to\n identify and validate multiple Aave markets.\n @param newMarketId The market id"
									},
									"functionSelector": "f67b1847",
									"id": 1786,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setMarketId",
									"nameLocation": "4060:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1783,
												"mutability": "mutable",
												"name": "newMarketId",
												"nameLocation": "4088:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1786,
												"src": "4072:27:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1782,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4072:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4071:29:12"
									},
									"returnParameters": {
										"id": 1785,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4109:0:12"
									},
									"scope": 1895,
									"src": "4051:59:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1787,
										"nodeType": "StructuredDocumentation",
										"src": "4114:306:12",
										"text": " @notice Returns an address by its identifier.\n @dev The returned address might be an EOA or a contract, potentially proxied\n @dev It returns ZERO if there is no registered address with the given id\n @param id The id\n @return The address of the registered for the specified id"
									},
									"functionSelector": "21f8a721",
									"id": 1794,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAddress",
									"nameLocation": "4432:10:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1789,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "4451:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 1794,
												"src": "4443:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1788,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4443:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4442:12:12"
									},
									"returnParameters": {
										"id": 1793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1792,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1794,
												"src": "4478:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1791,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4478:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4477:9:12"
									},
									"scope": 1895,
									"src": "4423:64:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1795,
										"nodeType": "StructuredDocumentation",
										"src": "4491:485:12",
										"text": " @notice General function to update the implementation of a proxy registered with\n certain `id`. If there is no proxy registered, it will instantiate one and\n set as implementation the `newImplementationAddress`.\n @dev IMPORTANT Use this function carefully, only for ids that don't have an explicit\n setter function, in order to avoid unexpected consequences\n @param id The id\n @param newImplementationAddress The address of the new implementation"
									},
									"functionSelector": "5dcc528c",
									"id": 1802,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setAddressAsProxy",
									"nameLocation": "4988:17:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1797,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "5014:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 1802,
												"src": "5006:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1796,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5006:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1799,
												"mutability": "mutable",
												"name": "newImplementationAddress",
												"nameLocation": "5026:24:12",
												"nodeType": "VariableDeclaration",
												"scope": 1802,
												"src": "5018:32:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1798,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5018:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5005:46:12"
									},
									"returnParameters": {
										"id": 1801,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5060:0:12"
									},
									"scope": 1895,
									"src": "4979:82:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1803,
										"nodeType": "StructuredDocumentation",
										"src": "5065:244:12",
										"text": " @notice Sets an address for an id replacing the address saved in the addresses map.\n @dev IMPORTANT Use this function carefully, as it will do a hard replacement\n @param id The id\n @param newAddress The address to set"
									},
									"functionSelector": "ca446dd9",
									"id": 1810,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setAddress",
									"nameLocation": "5321:10:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1805,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "5340:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 1810,
												"src": "5332:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1804,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5332:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1807,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "5352:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 1810,
												"src": "5344:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5344:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5331:32:12"
									},
									"returnParameters": {
										"id": 1809,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5372:0:12"
									},
									"scope": 1895,
									"src": "5312:61:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1811,
										"nodeType": "StructuredDocumentation",
										"src": "5377:97:12",
										"text": " @notice Returns the address of the Pool proxy.\n @return The Pool proxy address"
									},
									"functionSelector": "026b1d5f",
									"id": 1816,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPool",
									"nameLocation": "5486:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1812,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5493:2:12"
									},
									"returnParameters": {
										"id": 1815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1814,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1816,
												"src": "5519:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5519:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5518:9:12"
									},
									"scope": 1895,
									"src": "5477:51:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1817,
										"nodeType": "StructuredDocumentation",
										"src": "5532:224:12",
										"text": " @notice Updates the implementation of the Pool, or creates a proxy\n setting the new `pool` implementation when the function is called for the first time.\n @param newPoolImpl The new Pool implementation"
									},
									"functionSelector": "a1564406",
									"id": 1822,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setPoolImpl",
									"nameLocation": "5768:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1819,
												"mutability": "mutable",
												"name": "newPoolImpl",
												"nameLocation": "5788:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1822,
												"src": "5780:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1818,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5780:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5779:21:12"
									},
									"returnParameters": {
										"id": 1821,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5809:0:12"
									},
									"scope": 1895,
									"src": "5759:51:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1823,
										"nodeType": "StructuredDocumentation",
										"src": "5814:121:12",
										"text": " @notice Returns the address of the PoolConfigurator proxy.\n @return The PoolConfigurator proxy address"
									},
									"functionSelector": "631adfca",
									"id": 1828,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPoolConfigurator",
									"nameLocation": "5947:19:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1824,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5966:2:12"
									},
									"returnParameters": {
										"id": 1827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1826,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1828,
												"src": "5992:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1825,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5992:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5991:9:12"
									},
									"scope": 1895,
									"src": "5938:63:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1829,
										"nodeType": "StructuredDocumentation",
										"src": "6005:272:12",
										"text": " @notice Updates the implementation of the PoolConfigurator, or creates a proxy\n setting the new `PoolConfigurator` implementation when the function is called for the first time.\n @param newPoolConfiguratorImpl The new PoolConfigurator implementation"
									},
									"functionSelector": "e4ca28b7",
									"id": 1834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setPoolConfiguratorImpl",
									"nameLocation": "6289:23:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1831,
												"mutability": "mutable",
												"name": "newPoolConfiguratorImpl",
												"nameLocation": "6321:23:12",
												"nodeType": "VariableDeclaration",
												"scope": 1834,
												"src": "6313:31:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1830,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6313:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6312:33:12"
									},
									"returnParameters": {
										"id": 1833,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6354:0:12"
									},
									"scope": 1895,
									"src": "6280:75:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1835,
										"nodeType": "StructuredDocumentation",
										"src": "6359:107:12",
										"text": " @notice Returns the address of the price oracle.\n @return The address of the PriceOracle"
									},
									"functionSelector": "fca513a8",
									"id": 1840,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPriceOracle",
									"nameLocation": "6478:14:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1836,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6492:2:12"
									},
									"returnParameters": {
										"id": 1839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1838,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1840,
												"src": "6518:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1837,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6518:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6517:9:12"
									},
									"scope": 1895,
									"src": "6469:58:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1841,
										"nodeType": "StructuredDocumentation",
										"src": "6531:125:12",
										"text": " @notice Updates the address of the price oracle.\n @param newPriceOracle The address of the new PriceOracle"
									},
									"functionSelector": "530e784f",
									"id": 1846,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setPriceOracle",
									"nameLocation": "6668:14:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1843,
												"mutability": "mutable",
												"name": "newPriceOracle",
												"nameLocation": "6691:14:12",
												"nodeType": "VariableDeclaration",
												"scope": 1846,
												"src": "6683:22:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1842,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6683:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6682:24:12"
									},
									"returnParameters": {
										"id": 1845,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6715:0:12"
									},
									"scope": 1895,
									"src": "6659:57:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1847,
										"nodeType": "StructuredDocumentation",
										"src": "6720:105:12",
										"text": " @notice Returns the address of the ACL manager.\n @return The address of the ACLManager"
									},
									"functionSelector": "707cd716",
									"id": 1852,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getACLManager",
									"nameLocation": "6837:13:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1848,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6850:2:12"
									},
									"returnParameters": {
										"id": 1851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1850,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1852,
												"src": "6876:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1849,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6876:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6875:9:12"
									},
									"scope": 1895,
									"src": "6828:57:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1853,
										"nodeType": "StructuredDocumentation",
										"src": "6889:122:12",
										"text": " @notice Updates the address of the ACL manager.\n @param newAclManager The address of the new ACLManager"
									},
									"functionSelector": "ed301ca9",
									"id": 1858,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setACLManager",
									"nameLocation": "7023:13:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1855,
												"mutability": "mutable",
												"name": "newAclManager",
												"nameLocation": "7045:13:12",
												"nodeType": "VariableDeclaration",
												"scope": 1858,
												"src": "7037:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1854,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7037:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7036:23:12"
									},
									"returnParameters": {
										"id": 1857,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7068:0:12"
									},
									"scope": 1895,
									"src": "7014:55:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1859,
										"nodeType": "StructuredDocumentation",
										"src": "7073:102:12",
										"text": " @notice Returns the address of the ACL admin.\n @return The address of the ACL admin"
									},
									"functionSelector": "0e67178c",
									"id": 1864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getACLAdmin",
									"nameLocation": "7187:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1860,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7198:2:12"
									},
									"returnParameters": {
										"id": 1863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1864,
												"src": "7224:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1861,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7224:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7223:9:12"
									},
									"scope": 1895,
									"src": "7178:55:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1865,
										"nodeType": "StructuredDocumentation",
										"src": "7237:117:12",
										"text": " @notice Updates the address of the ACL admin.\n @param newAclAdmin The address of the new ACL admin"
									},
									"functionSelector": "76d84ffc",
									"id": 1870,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setACLAdmin",
									"nameLocation": "7366:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1867,
												"mutability": "mutable",
												"name": "newAclAdmin",
												"nameLocation": "7386:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1870,
												"src": "7378:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7378:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7377:21:12"
									},
									"returnParameters": {
										"id": 1869,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7407:0:12"
									},
									"scope": 1895,
									"src": "7357:51:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1871,
										"nodeType": "StructuredDocumentation",
										"src": "7412:124:12",
										"text": " @notice Returns the address of the price oracle sentinel.\n @return The address of the PriceOracleSentinel"
									},
									"functionSelector": "5eb88d3d",
									"id": 1876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPriceOracleSentinel",
									"nameLocation": "7548:22:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1872,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7570:2:12"
									},
									"returnParameters": {
										"id": 1875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1876,
												"src": "7596:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1873,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7596:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7595:9:12"
									},
									"scope": 1895,
									"src": "7539:66:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1877,
										"nodeType": "StructuredDocumentation",
										"src": "7609:150:12",
										"text": " @notice Updates the address of the price oracle sentinel.\n @param newPriceOracleSentinel The address of the new PriceOracleSentinel"
									},
									"functionSelector": "74944cec",
									"id": 1882,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setPriceOracleSentinel",
									"nameLocation": "7771:22:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1879,
												"mutability": "mutable",
												"name": "newPriceOracleSentinel",
												"nameLocation": "7802:22:12",
												"nodeType": "VariableDeclaration",
												"scope": 1882,
												"src": "7794:30:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1878,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7794:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7793:32:12"
									},
									"returnParameters": {
										"id": 1881,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7834:0:12"
									},
									"scope": 1895,
									"src": "7762:73:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1883,
										"nodeType": "StructuredDocumentation",
										"src": "7839:109:12",
										"text": " @notice Returns the address of the data provider.\n @return The address of the DataProvider"
									},
									"functionSelector": "e860accb",
									"id": 1888,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPoolDataProvider",
									"nameLocation": "7960:19:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1884,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7979:2:12"
									},
									"returnParameters": {
										"id": 1887,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1886,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1888,
												"src": "8005:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1885,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8005:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8004:9:12"
									},
									"scope": 1895,
									"src": "7951:63:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1889,
										"nodeType": "StructuredDocumentation",
										"src": "8018:128:12",
										"text": " @notice Updates the address of the data provider.\n @param newDataProvider The address of the new DataProvider"
									},
									"functionSelector": "e44e9ed1",
									"id": 1894,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setPoolDataProvider",
									"nameLocation": "8158:19:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1891,
												"mutability": "mutable",
												"name": "newDataProvider",
												"nameLocation": "8186:15:12",
												"nodeType": "VariableDeclaration",
												"scope": 1894,
												"src": "8178:23:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1890,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8178:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8177:25:12"
									},
									"returnParameters": {
										"id": 1893,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8211:0:12"
									},
									"scope": 1895,
									"src": "8149:63:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1896,
							"src": "189:8025:12",
							"usedErrors": [],
							"usedEvents": [
								1696,
								1703,
								1710,
								1717,
								1724,
								1731,
								1738,
								1745,
								1754,
								1763,
								1774
							]
						}
					],
					"src": "37:8178:12"
				},
				"id": 12
			},
			"@aave/core-v3/contracts/interfaces/IPriceOracleGetter.sol": {
				"ast": {
					"absolutePath": "@aave/core-v3/contracts/interfaces/IPriceOracleGetter.sol",
					"exportedSymbols": {
						"IPriceOracleGetter": [
							1919
						]
					},
					"id": 1920,
					"license": "AGPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1897,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IPriceOracleGetter",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1898,
								"nodeType": "StructuredDocumentation",
								"src": "62:100:13",
								"text": " @title IPriceOracleGetter\n @author Aave\n @notice Interface for the Aave price oracle."
							},
							"fullyImplemented": false,
							"id": 1919,
							"linearizedBaseContracts": [
								1919
							],
							"name": "IPriceOracleGetter",
							"nameLocation": "173:18:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1899,
										"nodeType": "StructuredDocumentation",
										"src": "196:164:13",
										"text": " @notice Returns the base currency address\n @dev Address 0x0 is reserved for USD as base currency.\n @return Returns the base currency address."
									},
									"functionSelector": "e19f4700",
									"id": 1904,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "BASE_CURRENCY",
									"nameLocation": "372:13:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1900,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "385:2:13"
									},
									"returnParameters": {
										"id": 1903,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1902,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1904,
												"src": "411:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1901,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "411:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "410:9:13"
									},
									"scope": 1919,
									"src": "363:57:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1905,
										"nodeType": "StructuredDocumentation",
										"src": "424:138:13",
										"text": " @notice Returns the base currency unit\n @dev 1 ether for ETH, 1e8 for USD.\n @return Returns the base currency unit."
									},
									"functionSelector": "8c89b64f",
									"id": 1910,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "BASE_CURRENCY_UNIT",
									"nameLocation": "574:18:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1906,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "592:2:13"
									},
									"returnParameters": {
										"id": 1909,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1908,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1910,
												"src": "618:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1907,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "618:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "617:9:13"
									},
									"scope": 1919,
									"src": "565:62:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1911,
										"nodeType": "StructuredDocumentation",
										"src": "631:146:13",
										"text": " @notice Returns the asset price in the base currency\n @param asset The address of the asset\n @return The price of the asset"
									},
									"functionSelector": "b3596f07",
									"id": 1918,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAssetPrice",
									"nameLocation": "789:13:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1914,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1913,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "811:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1918,
												"src": "803:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1912,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "802:15:13"
									},
									"returnParameters": {
										"id": 1917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1916,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1918,
												"src": "841:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1915,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "841:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "840:9:13"
									},
									"scope": 1919,
									"src": "780:70:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1920,
							"src": "163:689:13",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "37:816:13"
				},
				"id": 13
			},
			"@aave/core-v3/contracts/protocol/libraries/math/PercentageMath.sol": {
				"ast": {
					"absolutePath": "@aave/core-v3/contracts/protocol/libraries/math/PercentageMath.sol",
					"exportedSymbols": {
						"PercentageMath": [
							1953
						]
					},
					"id": 1954,
					"license": "BUSL-1.1",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1921,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:14"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "PercentageMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1922,
								"nodeType": "StructuredDocumentation",
								"src": "62:347:14",
								"text": " @title PercentageMath library\n @author Aave\n @notice Provides functions to perform percentage calculations\n @dev Percentages are defined by default with 2 decimals of precision (100.00). The precision is indicated by PERCENTAGE_FACTOR\n @dev Operations are rounded. If a value is >=.5, will be rounded up, otherwise rounded down."
							},
							"fullyImplemented": true,
							"id": 1953,
							"linearizedBaseContracts": [
								1953
							],
							"name": "PercentageMath",
							"nameLocation": "418:14:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1925,
									"mutability": "constant",
									"name": "PERCENTAGE_FACTOR",
									"nameLocation": "504:17:14",
									"nodeType": "VariableDeclaration",
									"scope": 1953,
									"src": "478:49:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1923,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "478:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "316534",
										"id": 1924,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "524:3:14",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000_by_1",
											"typeString": "int_const 10000"
										},
										"value": "1e4"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1928,
									"mutability": "constant",
									"name": "HALF_PERCENTAGE_FACTOR",
									"nameLocation": "595:22:14",
									"nodeType": "VariableDeclaration",
									"scope": 1953,
									"src": "569:56:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1926,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "569:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "302e356534",
										"id": 1927,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "620:5:14",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5000_by_1",
											"typeString": "int_const 5000"
										},
										"value": "0.5e4"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1939,
										"nodeType": "Block",
										"src": "1099:402:14",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1207:290:14",
													"nodeType": "YulBlock",
													"src": "1207:290:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "1368:30:14",
																"nodeType": "YulBlock",
																"src": "1368:30:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1385:1:14",
																					"nodeType": "YulLiteral",
																					"src": "1385:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1388:1:14",
																					"nodeType": "YulLiteral",
																					"src": "1388:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1378:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "1378:6:14"
																			},
																			"nativeSrc": "1378:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "1378:12:14"
																		},
																		"nativeSrc": "1378:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "1378:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "percentage",
																						"nativeSrc": "1255:10:14",
																						"nodeType": "YulIdentifier",
																						"src": "1255:10:14"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1248:6:14",
																					"nodeType": "YulIdentifier",
																					"src": "1248:6:14"
																				},
																				"nativeSrc": "1248:18:14",
																				"nodeType": "YulFunctionCall",
																				"src": "1248:18:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "1288:5:14",
																								"nodeType": "YulIdentifier",
																								"src": "1288:5:14"
																							},
																							{
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"kind": "number",
																														"nativeSrc": "1307:1:14",
																														"nodeType": "YulLiteral",
																														"src": "1307:1:14",
																														"type": "",
																														"value": "0"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "1303:3:14",
																													"nodeType": "YulIdentifier",
																													"src": "1303:3:14"
																												},
																												"nativeSrc": "1303:6:14",
																												"nodeType": "YulFunctionCall",
																												"src": "1303:6:14"
																											},
																											{
																												"name": "HALF_PERCENTAGE_FACTOR",
																												"nativeSrc": "1311:22:14",
																												"nodeType": "YulIdentifier",
																												"src": "1311:22:14"
																											}
																										],
																										"functionName": {
																											"name": "sub",
																											"nativeSrc": "1299:3:14",
																											"nodeType": "YulIdentifier",
																											"src": "1299:3:14"
																										},
																										"nativeSrc": "1299:35:14",
																										"nodeType": "YulFunctionCall",
																										"src": "1299:35:14"
																									},
																									{
																										"name": "percentage",
																										"nativeSrc": "1336:10:14",
																										"nodeType": "YulIdentifier",
																										"src": "1336:10:14"
																									}
																								],
																								"functionName": {
																									"name": "div",
																									"nativeSrc": "1295:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "1295:3:14"
																								},
																								"nativeSrc": "1295:52:14",
																								"nodeType": "YulFunctionCall",
																								"src": "1295:52:14"
																							}
																						],
																						"functionName": {
																							"name": "gt",
																							"nativeSrc": "1285:2:14",
																							"nodeType": "YulIdentifier",
																							"src": "1285:2:14"
																						},
																						"nativeSrc": "1285:63:14",
																						"nodeType": "YulFunctionCall",
																						"src": "1285:63:14"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1278:6:14",
																					"nodeType": "YulIdentifier",
																					"src": "1278:6:14"
																				},
																				"nativeSrc": "1278:71:14",
																				"nodeType": "YulFunctionCall",
																				"src": "1278:71:14"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "1234:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "1234:2:14"
																		},
																		"nativeSrc": "1234:125:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1234:125:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1218:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1218:6:14"
																},
																"nativeSrc": "1218:149:14",
																"nodeType": "YulFunctionCall",
																"src": "1218:149:14"
															},
															"nativeSrc": "1215:183:14",
															"nodeType": "YulIf",
															"src": "1215:183:14"
														},
														{
															"nativeSrc": "1406:85:14",
															"nodeType": "YulAssignment",
															"src": "1406:85:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1428:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "1428:5:14"
																					},
																					{
																						"name": "percentage",
																						"nativeSrc": "1435:10:14",
																						"nodeType": "YulIdentifier",
																						"src": "1435:10:14"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "1424:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "1424:3:14"
																				},
																				"nativeSrc": "1424:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "1424:22:14"
																			},
																			{
																				"name": "HALF_PERCENTAGE_FACTOR",
																				"nativeSrc": "1448:22:14",
																				"nodeType": "YulIdentifier",
																				"src": "1448:22:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1420:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1420:3:14"
																		},
																		"nativeSrc": "1420:51:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1420:51:14"
																	},
																	{
																		"name": "PERCENTAGE_FACTOR",
																		"nativeSrc": "1473:17:14",
																		"nodeType": "YulIdentifier",
																		"src": "1473:17:14"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1416:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1416:3:14"
																},
																"nativeSrc": "1416:75:14",
																"nodeType": "YulFunctionCall",
																"src": "1416:75:14"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1406:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1406:6:14"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1928,
														"isOffset": false,
														"isSlot": false,
														"src": "1311:22:14",
														"valueSize": 1
													},
													{
														"declaration": 1928,
														"isOffset": false,
														"isSlot": false,
														"src": "1448:22:14",
														"valueSize": 1
													},
													{
														"declaration": 1925,
														"isOffset": false,
														"isSlot": false,
														"src": "1473:17:14",
														"valueSize": 1
													},
													{
														"declaration": 1933,
														"isOffset": false,
														"isSlot": false,
														"src": "1255:10:14",
														"valueSize": 1
													},
													{
														"declaration": 1933,
														"isOffset": false,
														"isSlot": false,
														"src": "1336:10:14",
														"valueSize": 1
													},
													{
														"declaration": 1933,
														"isOffset": false,
														"isSlot": false,
														"src": "1435:10:14",
														"valueSize": 1
													},
													{
														"declaration": 1936,
														"isOffset": false,
														"isSlot": false,
														"src": "1406:6:14",
														"valueSize": 1
													},
													{
														"declaration": 1931,
														"isOffset": false,
														"isSlot": false,
														"src": "1288:5:14",
														"valueSize": 1
													},
													{
														"declaration": 1931,
														"isOffset": false,
														"isSlot": false,
														"src": "1428:5:14",
														"valueSize": 1
													}
												],
												"id": 1938,
												"nodeType": "InlineAssembly",
												"src": "1198:299:14"
											}
										]
									},
									"documentation": {
										"id": 1929,
										"nodeType": "StructuredDocumentation",
										"src": "630:372:14",
										"text": " @notice Executes a percentage multiplication\n @dev assembly optimized for improved gas savings, see https://twitter.com/transmissions11/status/1451131036377571328\n @param value The value of which the percentage needs to be calculated\n @param percentage The percentage of the value to be calculated\n @return result value percentmul percentage"
									},
									"id": 1940,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "percentMul",
									"nameLocation": "1014:10:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1934,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1931,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1033:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1940,
												"src": "1025:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1930,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1025:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1933,
												"mutability": "mutable",
												"name": "percentage",
												"nameLocation": "1048:10:14",
												"nodeType": "VariableDeclaration",
												"scope": 1940,
												"src": "1040:18:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1932,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1040:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1024:35:14"
									},
									"returnParameters": {
										"id": 1937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1936,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1091:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 1940,
												"src": "1083:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1935,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1083:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1082:16:14"
									},
									"scope": 1953,
									"src": "1005:496:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1951,
										"nodeType": "Block",
										"src": "1968:378:14",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2075:267:14",
													"nodeType": "YulBlock",
													"src": "2075:267:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "2217:30:14",
																"nodeType": "YulBlock",
																"src": "2217:30:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2234:1:14",
																					"nodeType": "YulLiteral",
																					"src": "2234:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2237:1:14",
																					"nodeType": "YulLiteral",
																					"src": "2237:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2227:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "2227:6:14"
																			},
																			"nativeSrc": "2227:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2227:12:14"
																		},
																		"nativeSrc": "2227:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "2227:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "percentage",
																				"nativeSrc": "2105:10:14",
																				"nodeType": "YulIdentifier",
																				"src": "2105:10:14"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2098:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "2098:6:14"
																		},
																		"nativeSrc": "2098:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2098:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "2143:5:14",
																								"nodeType": "YulIdentifier",
																								"src": "2143:5:14"
																							},
																							{
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"kind": "number",
																														"nativeSrc": "2162:1:14",
																														"nodeType": "YulLiteral",
																														"src": "2162:1:14",
																														"type": "",
																														"value": "0"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "2158:3:14",
																													"nodeType": "YulIdentifier",
																													"src": "2158:3:14"
																												},
																												"nativeSrc": "2158:6:14",
																												"nodeType": "YulFunctionCall",
																												"src": "2158:6:14"
																											},
																											{
																												"arguments": [
																													{
																														"name": "percentage",
																														"nativeSrc": "2170:10:14",
																														"nodeType": "YulIdentifier",
																														"src": "2170:10:14"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "2182:1:14",
																														"nodeType": "YulLiteral",
																														"src": "2182:1:14",
																														"type": "",
																														"value": "2"
																													}
																												],
																												"functionName": {
																													"name": "div",
																													"nativeSrc": "2166:3:14",
																													"nodeType": "YulIdentifier",
																													"src": "2166:3:14"
																												},
																												"nativeSrc": "2166:18:14",
																												"nodeType": "YulFunctionCall",
																												"src": "2166:18:14"
																											}
																										],
																										"functionName": {
																											"name": "sub",
																											"nativeSrc": "2154:3:14",
																											"nodeType": "YulIdentifier",
																											"src": "2154:3:14"
																										},
																										"nativeSrc": "2154:31:14",
																										"nodeType": "YulFunctionCall",
																										"src": "2154:31:14"
																									},
																									{
																										"name": "PERCENTAGE_FACTOR",
																										"nativeSrc": "2187:17:14",
																										"nodeType": "YulIdentifier",
																										"src": "2187:17:14"
																									}
																								],
																								"functionName": {
																									"name": "div",
																									"nativeSrc": "2150:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "2150:3:14"
																								},
																								"nativeSrc": "2150:55:14",
																								"nodeType": "YulFunctionCall",
																								"src": "2150:55:14"
																							}
																						],
																						"functionName": {
																							"name": "gt",
																							"nativeSrc": "2140:2:14",
																							"nodeType": "YulIdentifier",
																							"src": "2140:2:14"
																						},
																						"nativeSrc": "2140:66:14",
																						"nodeType": "YulFunctionCall",
																						"src": "2140:66:14"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "2133:6:14",
																					"nodeType": "YulIdentifier",
																					"src": "2133:6:14"
																				},
																				"nativeSrc": "2133:74:14",
																				"nodeType": "YulFunctionCall",
																				"src": "2133:74:14"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2126:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "2126:6:14"
																		},
																		"nativeSrc": "2126:82:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2126:82:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2086:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "2086:2:14"
																},
																"nativeSrc": "2086:130:14",
																"nodeType": "YulFunctionCall",
																"src": "2086:130:14"
															},
															"nativeSrc": "2083:164:14",
															"nodeType": "YulIf",
															"src": "2083:164:14"
														},
														{
															"nativeSrc": "2255:81:14",
															"nodeType": "YulAssignment",
															"src": "2255:81:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2277:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "2277:5:14"
																					},
																					{
																						"name": "PERCENTAGE_FACTOR",
																						"nativeSrc": "2284:17:14",
																						"nodeType": "YulIdentifier",
																						"src": "2284:17:14"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "2273:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "2273:3:14"
																				},
																				"nativeSrc": "2273:29:14",
																				"nodeType": "YulFunctionCall",
																				"src": "2273:29:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "percentage",
																						"nativeSrc": "2308:10:14",
																						"nodeType": "YulIdentifier",
																						"src": "2308:10:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2320:1:14",
																						"nodeType": "YulLiteral",
																						"src": "2320:1:14",
																						"type": "",
																						"value": "2"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "2304:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "2304:3:14"
																				},
																				"nativeSrc": "2304:18:14",
																				"nodeType": "YulFunctionCall",
																				"src": "2304:18:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2269:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "2269:3:14"
																		},
																		"nativeSrc": "2269:54:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2269:54:14"
																	},
																	{
																		"name": "percentage",
																		"nativeSrc": "2325:10:14",
																		"nodeType": "YulIdentifier",
																		"src": "2325:10:14"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2265:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "2265:3:14"
																},
																"nativeSrc": "2265:71:14",
																"nodeType": "YulFunctionCall",
																"src": "2265:71:14"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2255:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2255:6:14"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1925,
														"isOffset": false,
														"isSlot": false,
														"src": "2187:17:14",
														"valueSize": 1
													},
													{
														"declaration": 1925,
														"isOffset": false,
														"isSlot": false,
														"src": "2284:17:14",
														"valueSize": 1
													},
													{
														"declaration": 1945,
														"isOffset": false,
														"isSlot": false,
														"src": "2105:10:14",
														"valueSize": 1
													},
													{
														"declaration": 1945,
														"isOffset": false,
														"isSlot": false,
														"src": "2170:10:14",
														"valueSize": 1
													},
													{
														"declaration": 1945,
														"isOffset": false,
														"isSlot": false,
														"src": "2308:10:14",
														"valueSize": 1
													},
													{
														"declaration": 1945,
														"isOffset": false,
														"isSlot": false,
														"src": "2325:10:14",
														"valueSize": 1
													},
													{
														"declaration": 1948,
														"isOffset": false,
														"isSlot": false,
														"src": "2255:6:14",
														"valueSize": 1
													},
													{
														"declaration": 1943,
														"isOffset": false,
														"isSlot": false,
														"src": "2143:5:14",
														"valueSize": 1
													},
													{
														"declaration": 1943,
														"isOffset": false,
														"isSlot": false,
														"src": "2277:5:14",
														"valueSize": 1
													}
												],
												"id": 1950,
												"nodeType": "InlineAssembly",
												"src": "2066:276:14"
											}
										]
									},
									"documentation": {
										"id": 1941,
										"nodeType": "StructuredDocumentation",
										"src": "1505:366:14",
										"text": " @notice Executes a percentage division\n @dev assembly optimized for improved gas savings, see https://twitter.com/transmissions11/status/1451131036377571328\n @param value The value of which the percentage needs to be calculated\n @param percentage The percentage of the value to be calculated\n @return result value percentdiv percentage"
									},
									"id": 1952,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "percentDiv",
									"nameLocation": "1883:10:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1943,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1902:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1952,
												"src": "1894:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1942,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1894:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1945,
												"mutability": "mutable",
												"name": "percentage",
												"nameLocation": "1917:10:14",
												"nodeType": "VariableDeclaration",
												"scope": 1952,
												"src": "1909:18:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1944,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1909:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1893:35:14"
									},
									"returnParameters": {
										"id": 1949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1948,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1960:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 1952,
												"src": "1952:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1947,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1952:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1951:16:14"
									},
									"scope": 1953,
									"src": "1874:472:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1954,
							"src": "410:1938:14",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "37:2312:14"
				},
				"id": 14
			},
			"@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol": {
				"ast": {
					"absolutePath": "@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol",
					"exportedSymbols": {
						"DataTypes": [
							2305
						]
					},
					"id": 2306,
					"license": "BUSL-1.1",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1955,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:15"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "DataTypes",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 2305,
							"linearizedBaseContracts": [
								2305
							],
							"name": "DataTypes",
							"nameLocation": "70:9:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "DataTypes.ReserveData",
									"id": 1987,
									"members": [
										{
											"constant": false,
											"id": 1958,
											"mutability": "mutable",
											"name": "configuration",
											"nameLocation": "172:13:15",
											"nodeType": "VariableDeclaration",
											"scope": 1987,
											"src": "148:37:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_ReserveConfigurationMap_$1990_storage_ptr",
												"typeString": "struct DataTypes.ReserveConfigurationMap"
											},
											"typeName": {
												"id": 1957,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1956,
													"name": "ReserveConfigurationMap",
													"nameLocations": [
														"148:23:15"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1990,
													"src": "148:23:15"
												},
												"referencedDeclaration": 1990,
												"src": "148:23:15",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReserveConfigurationMap_$1990_storage_ptr",
													"typeString": "struct DataTypes.ReserveConfigurationMap"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1960,
											"mutability": "mutable",
											"name": "liquidityIndex",
											"nameLocation": "243:14:15",
											"nodeType": "VariableDeclaration",
											"scope": 1987,
											"src": "235:22:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 1959,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "235:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1962,
											"mutability": "mutable",
											"name": "currentLiquidityRate",
											"nameLocation": "319:20:15",
											"nodeType": "VariableDeclaration",
											"scope": 1987,
											"src": "311:28:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 1961,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "311:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1964,
											"mutability": "mutable",
											"name": "variableBorrowIndex",
											"nameLocation": "399:19:15",
											"nodeType": "VariableDeclaration",
											"scope": 1987,
											"src": "391:27:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 1963,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "391:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1966,
											"mutability": "mutable",
											"name": "currentVariableBorrowRate",
											"nameLocation": "489:25:15",
											"nodeType": "VariableDeclaration",
											"scope": 1987,
											"src": "481:33:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 1965,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "481:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1968,
											"mutability": "mutable",
											"name": "currentStableBorrowRate",
											"nameLocation": "583:23:15",
											"nodeType": "VariableDeclaration",
											"scope": 1987,
											"src": "575:31:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 1967,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "575:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1970,
											"mutability": "mutable",
											"name": "lastUpdateTimestamp",
											"nameLocation": "650:19:15",
											"nodeType": "VariableDeclaration",
											"scope": 1987,
											"src": "643:26:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint40",
												"typeString": "uint40"
											},
											"typeName": {
												"id": 1969,
												"name": "uint40",
												"nodeType": "ElementaryTypeName",
												"src": "643:6:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint40",
													"typeString": "uint40"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1972,
											"mutability": "mutable",
											"name": "id",
											"nameLocation": "770:2:15",
											"nodeType": "VariableDeclaration",
											"scope": 1987,
											"src": "763:9:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 1971,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "763:6:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1974,
											"mutability": "mutable",
											"name": "aTokenAddress",
											"nameLocation": "807:13:15",
											"nodeType": "VariableDeclaration",
											"scope": 1987,
											"src": "799:21:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1973,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "799:7:15",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1976,
											"mutability": "mutable",
											"name": "stableDebtTokenAddress",
											"nameLocation": "864:22:15",
											"nodeType": "VariableDeclaration",
											"scope": 1987,
											"src": "856:30:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1975,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "856:7:15",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1978,
											"mutability": "mutable",
											"name": "variableDebtTokenAddress",
											"nameLocation": "932:24:15",
											"nodeType": "VariableDeclaration",
											"scope": 1987,
											"src": "924:32:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1977,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "924:7:15",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1980,
											"mutability": "mutable",
											"name": "interestRateStrategyAddress",
											"nameLocation": "1014:27:15",
											"nodeType": "VariableDeclaration",
											"scope": 1987,
											"src": "1006:35:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1979,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1006:7:15",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1982,
											"mutability": "mutable",
											"name": "accruedToTreasury",
											"nameLocation": "1098:17:15",
											"nodeType": "VariableDeclaration",
											"scope": 1987,
											"src": "1090:25:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 1981,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "1090:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1984,
											"mutability": "mutable",
											"name": "unbacked",
											"nameLocation": "1204:8:15",
											"nodeType": "VariableDeclaration",
											"scope": 1987,
											"src": "1196:16:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 1983,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "1196:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1986,
											"mutability": "mutable",
											"name": "isolationModeTotalDebt",
											"nameLocation": "1299:22:15",
											"nodeType": "VariableDeclaration",
											"scope": 1987,
											"src": "1291:30:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 1985,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "1291:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ReserveData",
									"nameLocation": "91:11:15",
									"nodeType": "StructDefinition",
									"scope": 2305,
									"src": "84:1242:15",
									"visibility": "public"
								},
								{
									"canonicalName": "DataTypes.ReserveConfigurationMap",
									"id": 1990,
									"members": [
										{
											"constant": false,
											"id": 1989,
											"mutability": "mutable",
											"name": "data",
											"nameLocation": "2260:4:15",
											"nodeType": "VariableDeclaration",
											"scope": 1990,
											"src": "2252:12:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1988,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2252:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ReserveConfigurationMap",
									"nameLocation": "1337:23:15",
									"nodeType": "StructDefinition",
									"scope": 2305,
									"src": "1330:939:15",
									"visibility": "public"
								},
								{
									"canonicalName": "DataTypes.UserConfigurationMap",
									"id": 1994,
									"members": [
										{
											"constant": false,
											"id": 1993,
											"mutability": "mutable",
											"name": "data",
											"nameLocation": "2578:4:15",
											"nodeType": "VariableDeclaration",
											"scope": 1994,
											"src": "2570:12:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1992,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2570:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserConfigurationMap",
									"nameLocation": "2280:20:15",
									"nodeType": "StructDefinition",
									"scope": 2305,
									"src": "2273:314:15",
									"visibility": "public"
								},
								{
									"canonicalName": "DataTypes.EModeCategory",
									"id": 2005,
									"members": [
										{
											"constant": false,
											"id": 1996,
											"mutability": "mutable",
											"name": "ltv",
											"nameLocation": "2695:3:15",
											"nodeType": "VariableDeclaration",
											"scope": 2005,
											"src": "2688:10:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 1995,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "2688:6:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1998,
											"mutability": "mutable",
											"name": "liquidationThreshold",
											"nameLocation": "2711:20:15",
											"nodeType": "VariableDeclaration",
											"scope": 2005,
											"src": "2704:27:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 1997,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "2704:6:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2000,
											"mutability": "mutable",
											"name": "liquidationBonus",
											"nameLocation": "2744:16:15",
											"nodeType": "VariableDeclaration",
											"scope": 2005,
											"src": "2737:23:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 1999,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "2737:6:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2002,
											"mutability": "mutable",
											"name": "priceSource",
											"nameLocation": "2885:11:15",
											"nodeType": "VariableDeclaration",
											"scope": 2005,
											"src": "2877:19:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2001,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2877:7:15",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2004,
											"mutability": "mutable",
											"name": "label",
											"nameLocation": "2909:5:15",
											"nodeType": "VariableDeclaration",
											"scope": 2005,
											"src": "2902:12:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 2003,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "2902:6:15",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "EModeCategory",
									"nameLocation": "2598:13:15",
									"nodeType": "StructDefinition",
									"scope": 2305,
									"src": "2591:328:15",
									"visibility": "public"
								},
								{
									"canonicalName": "DataTypes.InterestRateMode",
									"id": 2009,
									"members": [
										{
											"id": 2006,
											"name": "NONE",
											"nameLocation": "2946:4:15",
											"nodeType": "EnumValue",
											"src": "2946:4:15"
										},
										{
											"id": 2007,
											"name": "STABLE",
											"nameLocation": "2952:6:15",
											"nodeType": "EnumValue",
											"src": "2952:6:15"
										},
										{
											"id": 2008,
											"name": "VARIABLE",
											"nameLocation": "2960:8:15",
											"nodeType": "EnumValue",
											"src": "2960:8:15"
										}
									],
									"name": "InterestRateMode",
									"nameLocation": "2928:16:15",
									"nodeType": "EnumDefinition",
									"src": "2923:46:15"
								},
								{
									"canonicalName": "DataTypes.ReserveCache",
									"id": 2051,
									"members": [
										{
											"constant": false,
											"id": 2011,
											"mutability": "mutable",
											"name": "currScaledVariableDebt",
											"nameLocation": "3007:22:15",
											"nodeType": "VariableDeclaration",
											"scope": 2051,
											"src": "2999:30:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2010,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2999:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2013,
											"mutability": "mutable",
											"name": "nextScaledVariableDebt",
											"nameLocation": "3043:22:15",
											"nodeType": "VariableDeclaration",
											"scope": 2051,
											"src": "3035:30:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2012,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3035:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2015,
											"mutability": "mutable",
											"name": "currPrincipalStableDebt",
											"nameLocation": "3079:23:15",
											"nodeType": "VariableDeclaration",
											"scope": 2051,
											"src": "3071:31:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2014,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3071:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2017,
											"mutability": "mutable",
											"name": "currAvgStableBorrowRate",
											"nameLocation": "3116:23:15",
											"nodeType": "VariableDeclaration",
											"scope": 2051,
											"src": "3108:31:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2016,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3108:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2019,
											"mutability": "mutable",
											"name": "currTotalStableDebt",
											"nameLocation": "3153:19:15",
											"nodeType": "VariableDeclaration",
											"scope": 2051,
											"src": "3145:27:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2018,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3145:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2021,
											"mutability": "mutable",
											"name": "nextAvgStableBorrowRate",
											"nameLocation": "3186:23:15",
											"nodeType": "VariableDeclaration",
											"scope": 2051,
											"src": "3178:31:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2020,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3178:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2023,
											"mutability": "mutable",
											"name": "nextTotalStableDebt",
											"nameLocation": "3223:19:15",
											"nodeType": "VariableDeclaration",
											"scope": 2051,
											"src": "3215:27:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2022,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3215:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2025,
											"mutability": "mutable",
											"name": "currLiquidityIndex",
											"nameLocation": "3256:18:15",
											"nodeType": "VariableDeclaration",
											"scope": 2051,
											"src": "3248:26:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2024,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3248:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2027,
											"mutability": "mutable",
											"name": "nextLiquidityIndex",
											"nameLocation": "3288:18:15",
											"nodeType": "VariableDeclaration",
											"scope": 2051,
											"src": "3280:26:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2026,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3280:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2029,
											"mutability": "mutable",
											"name": "currVariableBorrowIndex",
											"nameLocation": "3320:23:15",
											"nodeType": "VariableDeclaration",
											"scope": 2051,
											"src": "3312:31:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2028,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3312:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2031,
											"mutability": "mutable",
											"name": "nextVariableBorrowIndex",
											"nameLocation": "3357:23:15",
											"nodeType": "VariableDeclaration",
											"scope": 2051,
											"src": "3349:31:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2030,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3349:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2033,
											"mutability": "mutable",
											"name": "currLiquidityRate",
											"nameLocation": "3394:17:15",
											"nodeType": "VariableDeclaration",
											"scope": 2051,
											"src": "3386:25:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2032,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3386:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2035,
											"mutability": "mutable",
											"name": "currVariableBorrowRate",
											"nameLocation": "3425:22:15",
											"nodeType": "VariableDeclaration",
											"scope": 2051,
											"src": "3417:30:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2034,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3417:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2037,
											"mutability": "mutable",
											"name": "reserveFactor",
											"nameLocation": "3461:13:15",
											"nodeType": "VariableDeclaration",
											"scope": 2051,
											"src": "3453:21:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2036,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3453:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2040,
											"mutability": "mutable",
											"name": "reserveConfiguration",
											"nameLocation": "3504:20:15",
											"nodeType": "VariableDeclaration",
											"scope": 2051,
											"src": "3480:44:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_ReserveConfigurationMap_$1990_storage_ptr",
												"typeString": "struct DataTypes.ReserveConfigurationMap"
											},
											"typeName": {
												"id": 2039,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 2038,
													"name": "ReserveConfigurationMap",
													"nameLocations": [
														"3480:23:15"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1990,
													"src": "3480:23:15"
												},
												"referencedDeclaration": 1990,
												"src": "3480:23:15",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReserveConfigurationMap_$1990_storage_ptr",
													"typeString": "struct DataTypes.ReserveConfigurationMap"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2042,
											"mutability": "mutable",
											"name": "aTokenAddress",
											"nameLocation": "3538:13:15",
											"nodeType": "VariableDeclaration",
											"scope": 2051,
											"src": "3530:21:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2041,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3530:7:15",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2044,
											"mutability": "mutable",
											"name": "stableDebtTokenAddress",
											"nameLocation": "3565:22:15",
											"nodeType": "VariableDeclaration",
											"scope": 2051,
											"src": "3557:30:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2043,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3557:7:15",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2046,
											"mutability": "mutable",
											"name": "variableDebtTokenAddress",
											"nameLocation": "3601:24:15",
											"nodeType": "VariableDeclaration",
											"scope": 2051,
											"src": "3593:32:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2045,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3593:7:15",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2048,
											"mutability": "mutable",
											"name": "reserveLastUpdateTimestamp",
											"nameLocation": "3638:26:15",
											"nodeType": "VariableDeclaration",
											"scope": 2051,
											"src": "3631:33:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint40",
												"typeString": "uint40"
											},
											"typeName": {
												"id": 2047,
												"name": "uint40",
												"nodeType": "ElementaryTypeName",
												"src": "3631:6:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint40",
													"typeString": "uint40"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2050,
											"mutability": "mutable",
											"name": "stableDebtLastUpdateTimestamp",
											"nameLocation": "3677:29:15",
											"nodeType": "VariableDeclaration",
											"scope": 2051,
											"src": "3670:36:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint40",
												"typeString": "uint40"
											},
											"typeName": {
												"id": 2049,
												"name": "uint40",
												"nodeType": "ElementaryTypeName",
												"src": "3670:6:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint40",
													"typeString": "uint40"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ReserveCache",
									"nameLocation": "2980:12:15",
									"nodeType": "StructDefinition",
									"scope": 2305,
									"src": "2973:738:15",
									"visibility": "public"
								},
								{
									"canonicalName": "DataTypes.ExecuteLiquidationCallParams",
									"id": 2070,
									"members": [
										{
											"constant": false,
											"id": 2053,
											"mutability": "mutable",
											"name": "reservesCount",
											"nameLocation": "3765:13:15",
											"nodeType": "VariableDeclaration",
											"scope": 2070,
											"src": "3757:21:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2052,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3757:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2055,
											"mutability": "mutable",
											"name": "debtToCover",
											"nameLocation": "3792:11:15",
											"nodeType": "VariableDeclaration",
											"scope": 2070,
											"src": "3784:19:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2054,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3784:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2057,
											"mutability": "mutable",
											"name": "collateralAsset",
											"nameLocation": "3817:15:15",
											"nodeType": "VariableDeclaration",
											"scope": 2070,
											"src": "3809:23:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2056,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3809:7:15",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2059,
											"mutability": "mutable",
											"name": "debtAsset",
											"nameLocation": "3846:9:15",
											"nodeType": "VariableDeclaration",
											"scope": 2070,
											"src": "3838:17:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2058,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3838:7:15",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2061,
											"mutability": "mutable",
											"name": "user",
											"nameLocation": "3869:4:15",
											"nodeType": "VariableDeclaration",
											"scope": 2070,
											"src": "3861:12:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2060,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3861:7:15",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2063,
											"mutability": "mutable",
											"name": "receiveAToken",
											"nameLocation": "3884:13:15",
											"nodeType": "VariableDeclaration",
											"scope": 2070,
											"src": "3879:18:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2062,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "3879:4:15",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2065,
											"mutability": "mutable",
											"name": "priceOracle",
											"nameLocation": "3911:11:15",
											"nodeType": "VariableDeclaration",
											"scope": 2070,
											"src": "3903:19:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2064,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3903:7:15",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2067,
											"mutability": "mutable",
											"name": "userEModeCategory",
											"nameLocation": "3934:17:15",
											"nodeType": "VariableDeclaration",
											"scope": 2070,
											"src": "3928:23:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 2066,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "3928:5:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2069,
											"mutability": "mutable",
											"name": "priceOracleSentinel",
											"nameLocation": "3965:19:15",
											"nodeType": "VariableDeclaration",
											"scope": 2070,
											"src": "3957:27:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2068,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3957:7:15",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExecuteLiquidationCallParams",
									"nameLocation": "3722:28:15",
									"nodeType": "StructDefinition",
									"scope": 2305,
									"src": "3715:274:15",
									"visibility": "public"
								},
								{
									"canonicalName": "DataTypes.ExecuteSupplyParams",
									"id": 2079,
									"members": [
										{
											"constant": false,
											"id": 2072,
											"mutability": "mutable",
											"name": "asset",
											"nameLocation": "4034:5:15",
											"nodeType": "VariableDeclaration",
											"scope": 2079,
											"src": "4026:13:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2071,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4026:7:15",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2074,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "4053:6:15",
											"nodeType": "VariableDeclaration",
											"scope": 2079,
											"src": "4045:14:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2073,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4045:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2076,
											"mutability": "mutable",
											"name": "onBehalfOf",
											"nameLocation": "4073:10:15",
											"nodeType": "VariableDeclaration",
											"scope": 2079,
											"src": "4065:18:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2075,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4065:7:15",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2078,
											"mutability": "mutable",
											"name": "referralCode",
											"nameLocation": "4096:12:15",
											"nodeType": "VariableDeclaration",
											"scope": 2079,
											"src": "4089:19:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 2077,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "4089:6:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExecuteSupplyParams",
									"nameLocation": "4000:19:15",
									"nodeType": "StructDefinition",
									"scope": 2305,
									"src": "3993:120:15",
									"visibility": "public"
								},
								{
									"canonicalName": "DataTypes.ExecuteBorrowParams",
									"id": 2105,
									"members": [
										{
											"constant": false,
											"id": 2081,
											"mutability": "mutable",
											"name": "asset",
											"nameLocation": "4158:5:15",
											"nodeType": "VariableDeclaration",
											"scope": 2105,
											"src": "4150:13:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2080,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4150:7:15",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2083,
											"mutability": "mutable",
											"name": "user",
											"nameLocation": "4177:4:15",
											"nodeType": "VariableDeclaration",
											"scope": 2105,
											"src": "4169:12:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2082,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4169:7:15",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2085,
											"mutability": "mutable",
											"name": "onBehalfOf",
											"nameLocation": "4195:10:15",
											"nodeType": "VariableDeclaration",
											"scope": 2105,
											"src": "4187:18:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2084,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4187:7:15",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2087,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "4219:6:15",
											"nodeType": "VariableDeclaration",
											"scope": 2105,
											"src": "4211:14:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2086,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4211:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2090,
											"mutability": "mutable",
											"name": "interestRateMode",
											"nameLocation": "4248:16:15",
											"nodeType": "VariableDeclaration",
											"scope": 2105,
											"src": "4231:33:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_InterestRateMode_$2009",
												"typeString": "enum DataTypes.InterestRateMode"
											},
											"typeName": {
												"id": 2089,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 2088,
													"name": "InterestRateMode",
													"nameLocations": [
														"4231:16:15"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 2009,
													"src": "4231:16:15"
												},
												"referencedDeclaration": 2009,
												"src": "4231:16:15",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_InterestRateMode_$2009",
													"typeString": "enum DataTypes.InterestRateMode"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2092,
											"mutability": "mutable",
											"name": "referralCode",
											"nameLocation": "4277:12:15",
											"nodeType": "VariableDeclaration",
											"scope": 2105,
											"src": "4270:19:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 2091,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "4270:6:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2094,
											"mutability": "mutable",
											"name": "releaseUnderlying",
											"nameLocation": "4300:17:15",
											"nodeType": "VariableDeclaration",
											"scope": 2105,
											"src": "4295:22:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2093,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "4295:4:15",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2096,
											"mutability": "mutable",
											"name": "maxStableRateBorrowSizePercent",
											"nameLocation": "4331:30:15",
											"nodeType": "VariableDeclaration",
											"scope": 2105,
											"src": "4323:38:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2095,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4323:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2098,
											"mutability": "mutable",
											"name": "reservesCount",
											"nameLocation": "4375:13:15",
											"nodeType": "VariableDeclaration",
											"scope": 2105,
											"src": "4367:21:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2097,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4367:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2100,
											"mutability": "mutable",
											"name": "oracle",
											"nameLocation": "4402:6:15",
											"nodeType": "VariableDeclaration",
											"scope": 2105,
											"src": "4394:14:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2099,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4394:7:15",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2102,
											"mutability": "mutable",
											"name": "userEModeCategory",
											"nameLocation": "4420:17:15",
											"nodeType": "VariableDeclaration",
											"scope": 2105,
											"src": "4414:23:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 2101,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "4414:5:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2104,
											"mutability": "mutable",
											"name": "priceOracleSentinel",
											"nameLocation": "4451:19:15",
											"nodeType": "VariableDeclaration",
											"scope": 2105,
											"src": "4443:27:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2103,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4443:7:15",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExecuteBorrowParams",
									"nameLocation": "4124:19:15",
									"nodeType": "StructDefinition",
									"scope": 2305,
									"src": "4117:358:15",
									"visibility": "public"
								},
								{
									"canonicalName": "DataTypes.ExecuteRepayParams",
									"id": 2117,
									"members": [
										{
											"constant": false,
											"id": 2107,
											"mutability": "mutable",
											"name": "asset",
											"nameLocation": "4519:5:15",
											"nodeType": "VariableDeclaration",
											"scope": 2117,
											"src": "4511:13:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2106,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4511:7:15",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2109,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "4538:6:15",
											"nodeType": "VariableDeclaration",
											"scope": 2117,
											"src": "4530:14:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2108,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4530:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2112,
											"mutability": "mutable",
											"name": "interestRateMode",
											"nameLocation": "4567:16:15",
											"nodeType": "VariableDeclaration",
											"scope": 2117,
											"src": "4550:33:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_InterestRateMode_$2009",
												"typeString": "enum DataTypes.InterestRateMode"
											},
											"typeName": {
												"id": 2111,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 2110,
													"name": "InterestRateMode",
													"nameLocations": [
														"4550:16:15"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 2009,
													"src": "4550:16:15"
												},
												"referencedDeclaration": 2009,
												"src": "4550:16:15",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_InterestRateMode_$2009",
													"typeString": "enum DataTypes.InterestRateMode"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2114,
											"mutability": "mutable",
											"name": "onBehalfOf",
											"nameLocation": "4597:10:15",
											"nodeType": "VariableDeclaration",
											"scope": 2117,
											"src": "4589:18:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2113,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4589:7:15",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2116,
											"mutability": "mutable",
											"name": "useATokens",
											"nameLocation": "4618:10:15",
											"nodeType": "VariableDeclaration",
											"scope": 2117,
											"src": "4613:15:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2115,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "4613:4:15",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExecuteRepayParams",
									"nameLocation": "4486:18:15",
									"nodeType": "StructDefinition",
									"scope": 2305,
									"src": "4479:154:15",
									"visibility": "public"
								},
								{
									"canonicalName": "DataTypes.ExecuteWithdrawParams",
									"id": 2130,
									"members": [
										{
											"constant": false,
											"id": 2119,
											"mutability": "mutable",
											"name": "asset",
											"nameLocation": "4680:5:15",
											"nodeType": "VariableDeclaration",
											"scope": 2130,
											"src": "4672:13:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2118,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4672:7:15",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2121,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "4699:6:15",
											"nodeType": "VariableDeclaration",
											"scope": 2130,
											"src": "4691:14:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2120,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4691:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2123,
											"mutability": "mutable",
											"name": "to",
											"nameLocation": "4719:2:15",
											"nodeType": "VariableDeclaration",
											"scope": 2130,
											"src": "4711:10:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2122,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4711:7:15",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2125,
											"mutability": "mutable",
											"name": "reservesCount",
											"nameLocation": "4735:13:15",
											"nodeType": "VariableDeclaration",
											"scope": 2130,
											"src": "4727:21:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2124,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4727:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2127,
											"mutability": "mutable",
											"name": "oracle",
											"nameLocation": "4762:6:15",
											"nodeType": "VariableDeclaration",
											"scope": 2130,
											"src": "4754:14:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2126,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4754:7:15",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2129,
											"mutability": "mutable",
											"name": "userEModeCategory",
											"nameLocation": "4780:17:15",
											"nodeType": "VariableDeclaration",
											"scope": 2130,
											"src": "4774:23:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 2128,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "4774:5:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExecuteWithdrawParams",
									"nameLocation": "4644:21:15",
									"nodeType": "StructDefinition",
									"scope": 2305,
									"src": "4637:165:15",
									"visibility": "public"
								},
								{
									"canonicalName": "DataTypes.ExecuteSetUserEModeParams",
									"id": 2137,
									"members": [
										{
											"constant": false,
											"id": 2132,
											"mutability": "mutable",
											"name": "reservesCount",
											"nameLocation": "4853:13:15",
											"nodeType": "VariableDeclaration",
											"scope": 2137,
											"src": "4845:21:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2131,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4845:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2134,
											"mutability": "mutable",
											"name": "oracle",
											"nameLocation": "4880:6:15",
											"nodeType": "VariableDeclaration",
											"scope": 2137,
											"src": "4872:14:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2133,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4872:7:15",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2136,
											"mutability": "mutable",
											"name": "categoryId",
											"nameLocation": "4898:10:15",
											"nodeType": "VariableDeclaration",
											"scope": 2137,
											"src": "4892:16:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 2135,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "4892:5:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExecuteSetUserEModeParams",
									"nameLocation": "4813:25:15",
									"nodeType": "StructDefinition",
									"scope": 2305,
									"src": "4806:107:15",
									"visibility": "public"
								},
								{
									"canonicalName": "DataTypes.FinalizeTransferParams",
									"id": 2156,
									"members": [
										{
											"constant": false,
											"id": 2139,
											"mutability": "mutable",
											"name": "asset",
											"nameLocation": "4961:5:15",
											"nodeType": "VariableDeclaration",
											"scope": 2156,
											"src": "4953:13:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2138,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4953:7:15",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2141,
											"mutability": "mutable",
											"name": "from",
											"nameLocation": "4980:4:15",
											"nodeType": "VariableDeclaration",
											"scope": 2156,
											"src": "4972:12:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2140,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4972:7:15",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2143,
											"mutability": "mutable",
											"name": "to",
											"nameLocation": "4998:2:15",
											"nodeType": "VariableDeclaration",
											"scope": 2156,
											"src": "4990:10:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2142,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4990:7:15",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2145,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "5014:6:15",
											"nodeType": "VariableDeclaration",
											"scope": 2156,
											"src": "5006:14:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2144,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5006:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2147,
											"mutability": "mutable",
											"name": "balanceFromBefore",
											"nameLocation": "5034:17:15",
											"nodeType": "VariableDeclaration",
											"scope": 2156,
											"src": "5026:25:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2146,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5026:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2149,
											"mutability": "mutable",
											"name": "balanceToBefore",
											"nameLocation": "5065:15:15",
											"nodeType": "VariableDeclaration",
											"scope": 2156,
											"src": "5057:23:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2148,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5057:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2151,
											"mutability": "mutable",
											"name": "reservesCount",
											"nameLocation": "5094:13:15",
											"nodeType": "VariableDeclaration",
											"scope": 2156,
											"src": "5086:21:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2150,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5086:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2153,
											"mutability": "mutable",
											"name": "oracle",
											"nameLocation": "5121:6:15",
											"nodeType": "VariableDeclaration",
											"scope": 2156,
											"src": "5113:14:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2152,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "5113:7:15",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2155,
											"mutability": "mutable",
											"name": "fromEModeCategory",
											"nameLocation": "5139:17:15",
											"nodeType": "VariableDeclaration",
											"scope": 2156,
											"src": "5133:23:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 2154,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "5133:5:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "FinalizeTransferParams",
									"nameLocation": "4924:22:15",
									"nodeType": "StructDefinition",
									"scope": 2305,
									"src": "4917:244:15",
									"visibility": "public"
								},
								{
									"canonicalName": "DataTypes.FlashloanParams",
									"id": 2188,
									"members": [
										{
											"constant": false,
											"id": 2158,
											"mutability": "mutable",
											"name": "receiverAddress",
											"nameLocation": "5202:15:15",
											"nodeType": "VariableDeclaration",
											"scope": 2188,
											"src": "5194:23:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2157,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "5194:7:15",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2161,
											"mutability": "mutable",
											"name": "assets",
											"nameLocation": "5233:6:15",
											"nodeType": "VariableDeclaration",
											"scope": 2188,
											"src": "5223:16:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
												"typeString": "address[]"
											},
											"typeName": {
												"baseType": {
													"id": 2159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5223:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2160,
												"nodeType": "ArrayTypeName",
												"src": "5223:9:15",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
													"typeString": "address[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2164,
											"mutability": "mutable",
											"name": "amounts",
											"nameLocation": "5255:7:15",
											"nodeType": "VariableDeclaration",
											"scope": 2188,
											"src": "5245:17:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											},
											"typeName": {
												"baseType": {
													"id": 2162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5245:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2163,
												"nodeType": "ArrayTypeName",
												"src": "5245:9:15",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2167,
											"mutability": "mutable",
											"name": "interestRateModes",
											"nameLocation": "5278:17:15",
											"nodeType": "VariableDeclaration",
											"scope": 2188,
											"src": "5268:27:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											},
											"typeName": {
												"baseType": {
													"id": 2165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5268:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2166,
												"nodeType": "ArrayTypeName",
												"src": "5268:9:15",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2169,
											"mutability": "mutable",
											"name": "onBehalfOf",
											"nameLocation": "5309:10:15",
											"nodeType": "VariableDeclaration",
											"scope": 2188,
											"src": "5301:18:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2168,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "5301:7:15",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2171,
											"mutability": "mutable",
											"name": "params",
											"nameLocation": "5331:6:15",
											"nodeType": "VariableDeclaration",
											"scope": 2188,
											"src": "5325:12:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 2170,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "5325:5:15",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2173,
											"mutability": "mutable",
											"name": "referralCode",
											"nameLocation": "5350:12:15",
											"nodeType": "VariableDeclaration",
											"scope": 2188,
											"src": "5343:19:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 2172,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "5343:6:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2175,
											"mutability": "mutable",
											"name": "flashLoanPremiumToProtocol",
											"nameLocation": "5376:26:15",
											"nodeType": "VariableDeclaration",
											"scope": 2188,
											"src": "5368:34:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2174,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5368:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2177,
											"mutability": "mutable",
											"name": "flashLoanPremiumTotal",
											"nameLocation": "5416:21:15",
											"nodeType": "VariableDeclaration",
											"scope": 2188,
											"src": "5408:29:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2176,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5408:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2179,
											"mutability": "mutable",
											"name": "maxStableRateBorrowSizePercent",
											"nameLocation": "5451:30:15",
											"nodeType": "VariableDeclaration",
											"scope": 2188,
											"src": "5443:38:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2178,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5443:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2181,
											"mutability": "mutable",
											"name": "reservesCount",
											"nameLocation": "5495:13:15",
											"nodeType": "VariableDeclaration",
											"scope": 2188,
											"src": "5487:21:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2180,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5487:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2183,
											"mutability": "mutable",
											"name": "addressesProvider",
											"nameLocation": "5522:17:15",
											"nodeType": "VariableDeclaration",
											"scope": 2188,
											"src": "5514:25:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2182,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "5514:7:15",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2185,
											"mutability": "mutable",
											"name": "userEModeCategory",
											"nameLocation": "5551:17:15",
											"nodeType": "VariableDeclaration",
											"scope": 2188,
											"src": "5545:23:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 2184,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "5545:5:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2187,
											"mutability": "mutable",
											"name": "isAuthorizedFlashBorrower",
											"nameLocation": "5579:25:15",
											"nodeType": "VariableDeclaration",
											"scope": 2188,
											"src": "5574:30:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2186,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "5574:4:15",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "FlashloanParams",
									"nameLocation": "5172:15:15",
									"nodeType": "StructDefinition",
									"scope": 2305,
									"src": "5165:444:15",
									"visibility": "public"
								},
								{
									"canonicalName": "DataTypes.FlashloanSimpleParams",
									"id": 2203,
									"members": [
										{
											"constant": false,
											"id": 2190,
											"mutability": "mutable",
											"name": "receiverAddress",
											"nameLocation": "5656:15:15",
											"nodeType": "VariableDeclaration",
											"scope": 2203,
											"src": "5648:23:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2189,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "5648:7:15",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2192,
											"mutability": "mutable",
											"name": "asset",
											"nameLocation": "5685:5:15",
											"nodeType": "VariableDeclaration",
											"scope": 2203,
											"src": "5677:13:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2191,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "5677:7:15",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2194,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "5704:6:15",
											"nodeType": "VariableDeclaration",
											"scope": 2203,
											"src": "5696:14:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2193,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5696:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2196,
											"mutability": "mutable",
											"name": "params",
											"nameLocation": "5722:6:15",
											"nodeType": "VariableDeclaration",
											"scope": 2203,
											"src": "5716:12:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 2195,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "5716:5:15",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2198,
											"mutability": "mutable",
											"name": "referralCode",
											"nameLocation": "5741:12:15",
											"nodeType": "VariableDeclaration",
											"scope": 2203,
											"src": "5734:19:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 2197,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "5734:6:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2200,
											"mutability": "mutable",
											"name": "flashLoanPremiumToProtocol",
											"nameLocation": "5767:26:15",
											"nodeType": "VariableDeclaration",
											"scope": 2203,
											"src": "5759:34:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2199,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5759:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2202,
											"mutability": "mutable",
											"name": "flashLoanPremiumTotal",
											"nameLocation": "5807:21:15",
											"nodeType": "VariableDeclaration",
											"scope": 2203,
											"src": "5799:29:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2201,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5799:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "FlashloanSimpleParams",
									"nameLocation": "5620:21:15",
									"nodeType": "StructDefinition",
									"scope": 2305,
									"src": "5613:220:15",
									"visibility": "public"
								},
								{
									"canonicalName": "DataTypes.FlashLoanRepaymentParams",
									"id": 2216,
									"members": [
										{
											"constant": false,
											"id": 2205,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "5883:6:15",
											"nodeType": "VariableDeclaration",
											"scope": 2216,
											"src": "5875:14:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2204,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5875:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2207,
											"mutability": "mutable",
											"name": "totalPremium",
											"nameLocation": "5903:12:15",
											"nodeType": "VariableDeclaration",
											"scope": 2216,
											"src": "5895:20:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2206,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5895:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2209,
											"mutability": "mutable",
											"name": "flashLoanPremiumToProtocol",
											"nameLocation": "5929:26:15",
											"nodeType": "VariableDeclaration",
											"scope": 2216,
											"src": "5921:34:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2208,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5921:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2211,
											"mutability": "mutable",
											"name": "asset",
											"nameLocation": "5969:5:15",
											"nodeType": "VariableDeclaration",
											"scope": 2216,
											"src": "5961:13:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2210,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "5961:7:15",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2213,
											"mutability": "mutable",
											"name": "receiverAddress",
											"nameLocation": "5988:15:15",
											"nodeType": "VariableDeclaration",
											"scope": 2216,
											"src": "5980:23:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2212,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "5980:7:15",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2215,
											"mutability": "mutable",
											"name": "referralCode",
											"nameLocation": "6016:12:15",
											"nodeType": "VariableDeclaration",
											"scope": 2216,
											"src": "6009:19:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 2214,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "6009:6:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "FlashLoanRepaymentParams",
									"nameLocation": "5844:24:15",
									"nodeType": "StructDefinition",
									"scope": 2305,
									"src": "5837:196:15",
									"visibility": "public"
								},
								{
									"canonicalName": "DataTypes.CalculateUserAccountDataParams",
									"id": 2228,
									"members": [
										{
											"constant": false,
											"id": 2219,
											"mutability": "mutable",
											"name": "userConfig",
											"nameLocation": "6102:10:15",
											"nodeType": "VariableDeclaration",
											"scope": 2228,
											"src": "6081:31:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_UserConfigurationMap_$1994_storage_ptr",
												"typeString": "struct DataTypes.UserConfigurationMap"
											},
											"typeName": {
												"id": 2218,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 2217,
													"name": "UserConfigurationMap",
													"nameLocations": [
														"6081:20:15"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1994,
													"src": "6081:20:15"
												},
												"referencedDeclaration": 1994,
												"src": "6081:20:15",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserConfigurationMap_$1994_storage_ptr",
													"typeString": "struct DataTypes.UserConfigurationMap"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2221,
											"mutability": "mutable",
											"name": "reservesCount",
											"nameLocation": "6126:13:15",
											"nodeType": "VariableDeclaration",
											"scope": 2228,
											"src": "6118:21:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2220,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6118:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2223,
											"mutability": "mutable",
											"name": "user",
											"nameLocation": "6153:4:15",
											"nodeType": "VariableDeclaration",
											"scope": 2228,
											"src": "6145:12:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2222,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "6145:7:15",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2225,
											"mutability": "mutable",
											"name": "oracle",
											"nameLocation": "6171:6:15",
											"nodeType": "VariableDeclaration",
											"scope": 2228,
											"src": "6163:14:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2224,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "6163:7:15",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2227,
											"mutability": "mutable",
											"name": "userEModeCategory",
											"nameLocation": "6189:17:15",
											"nodeType": "VariableDeclaration",
											"scope": 2228,
											"src": "6183:23:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 2226,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "6183:5:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "CalculateUserAccountDataParams",
									"nameLocation": "6044:30:15",
									"nodeType": "StructDefinition",
									"scope": 2305,
									"src": "6037:174:15",
									"visibility": "public"
								},
								{
									"canonicalName": "DataTypes.ValidateBorrowParams",
									"id": 2260,
									"members": [
										{
											"constant": false,
											"id": 2231,
											"mutability": "mutable",
											"name": "reserveCache",
											"nameLocation": "6262:12:15",
											"nodeType": "VariableDeclaration",
											"scope": 2260,
											"src": "6249:25:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_ReserveCache_$2051_storage_ptr",
												"typeString": "struct DataTypes.ReserveCache"
											},
											"typeName": {
												"id": 2230,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 2229,
													"name": "ReserveCache",
													"nameLocations": [
														"6249:12:15"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 2051,
													"src": "6249:12:15"
												},
												"referencedDeclaration": 2051,
												"src": "6249:12:15",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReserveCache_$2051_storage_ptr",
													"typeString": "struct DataTypes.ReserveCache"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2234,
											"mutability": "mutable",
											"name": "userConfig",
											"nameLocation": "6301:10:15",
											"nodeType": "VariableDeclaration",
											"scope": 2260,
											"src": "6280:31:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_UserConfigurationMap_$1994_storage_ptr",
												"typeString": "struct DataTypes.UserConfigurationMap"
											},
											"typeName": {
												"id": 2233,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 2232,
													"name": "UserConfigurationMap",
													"nameLocations": [
														"6280:20:15"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1994,
													"src": "6280:20:15"
												},
												"referencedDeclaration": 1994,
												"src": "6280:20:15",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserConfigurationMap_$1994_storage_ptr",
													"typeString": "struct DataTypes.UserConfigurationMap"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2236,
											"mutability": "mutable",
											"name": "asset",
											"nameLocation": "6325:5:15",
											"nodeType": "VariableDeclaration",
											"scope": 2260,
											"src": "6317:13:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2235,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "6317:7:15",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2238,
											"mutability": "mutable",
											"name": "userAddress",
											"nameLocation": "6344:11:15",
											"nodeType": "VariableDeclaration",
											"scope": 2260,
											"src": "6336:19:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2237,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "6336:7:15",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2240,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "6369:6:15",
											"nodeType": "VariableDeclaration",
											"scope": 2260,
											"src": "6361:14:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2239,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6361:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2243,
											"mutability": "mutable",
											"name": "interestRateMode",
											"nameLocation": "6398:16:15",
											"nodeType": "VariableDeclaration",
											"scope": 2260,
											"src": "6381:33:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_InterestRateMode_$2009",
												"typeString": "enum DataTypes.InterestRateMode"
											},
											"typeName": {
												"id": 2242,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 2241,
													"name": "InterestRateMode",
													"nameLocations": [
														"6381:16:15"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 2009,
													"src": "6381:16:15"
												},
												"referencedDeclaration": 2009,
												"src": "6381:16:15",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_InterestRateMode_$2009",
													"typeString": "enum DataTypes.InterestRateMode"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2245,
											"mutability": "mutable",
											"name": "maxStableLoanPercent",
											"nameLocation": "6428:20:15",
											"nodeType": "VariableDeclaration",
											"scope": 2260,
											"src": "6420:28:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2244,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6420:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2247,
											"mutability": "mutable",
											"name": "reservesCount",
											"nameLocation": "6462:13:15",
											"nodeType": "VariableDeclaration",
											"scope": 2260,
											"src": "6454:21:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2246,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6454:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2249,
											"mutability": "mutable",
											"name": "oracle",
											"nameLocation": "6489:6:15",
											"nodeType": "VariableDeclaration",
											"scope": 2260,
											"src": "6481:14:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2248,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "6481:7:15",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2251,
											"mutability": "mutable",
											"name": "userEModeCategory",
											"nameLocation": "6507:17:15",
											"nodeType": "VariableDeclaration",
											"scope": 2260,
											"src": "6501:23:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 2250,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "6501:5:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2253,
											"mutability": "mutable",
											"name": "priceOracleSentinel",
											"nameLocation": "6538:19:15",
											"nodeType": "VariableDeclaration",
											"scope": 2260,
											"src": "6530:27:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2252,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "6530:7:15",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2255,
											"mutability": "mutable",
											"name": "isolationModeActive",
											"nameLocation": "6568:19:15",
											"nodeType": "VariableDeclaration",
											"scope": 2260,
											"src": "6563:24:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2254,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "6563:4:15",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2257,
											"mutability": "mutable",
											"name": "isolationModeCollateralAddress",
											"nameLocation": "6601:30:15",
											"nodeType": "VariableDeclaration",
											"scope": 2260,
											"src": "6593:38:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2256,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "6593:7:15",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2259,
											"mutability": "mutable",
											"name": "isolationModeDebtCeiling",
											"nameLocation": "6645:24:15",
											"nodeType": "VariableDeclaration",
											"scope": 2260,
											"src": "6637:32:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2258,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6637:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ValidateBorrowParams",
									"nameLocation": "6222:20:15",
									"nodeType": "StructDefinition",
									"scope": 2305,
									"src": "6215:459:15",
									"visibility": "public"
								},
								{
									"canonicalName": "DataTypes.ValidateLiquidationCallParams",
									"id": 2270,
									"members": [
										{
											"constant": false,
											"id": 2263,
											"mutability": "mutable",
											"name": "debtReserveCache",
											"nameLocation": "6734:16:15",
											"nodeType": "VariableDeclaration",
											"scope": 2270,
											"src": "6721:29:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_ReserveCache_$2051_storage_ptr",
												"typeString": "struct DataTypes.ReserveCache"
											},
											"typeName": {
												"id": 2262,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 2261,
													"name": "ReserveCache",
													"nameLocations": [
														"6721:12:15"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 2051,
													"src": "6721:12:15"
												},
												"referencedDeclaration": 2051,
												"src": "6721:12:15",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReserveCache_$2051_storage_ptr",
													"typeString": "struct DataTypes.ReserveCache"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2265,
											"mutability": "mutable",
											"name": "totalDebt",
											"nameLocation": "6764:9:15",
											"nodeType": "VariableDeclaration",
											"scope": 2270,
											"src": "6756:17:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2264,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6756:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2267,
											"mutability": "mutable",
											"name": "healthFactor",
											"nameLocation": "6787:12:15",
											"nodeType": "VariableDeclaration",
											"scope": 2270,
											"src": "6779:20:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2266,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6779:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2269,
											"mutability": "mutable",
											"name": "priceOracleSentinel",
											"nameLocation": "6813:19:15",
											"nodeType": "VariableDeclaration",
											"scope": 2270,
											"src": "6805:27:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2268,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "6805:7:15",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ValidateLiquidationCallParams",
									"nameLocation": "6685:29:15",
									"nodeType": "StructDefinition",
									"scope": 2305,
									"src": "6678:159:15",
									"visibility": "public"
								},
								{
									"canonicalName": "DataTypes.CalculateInterestRatesParams",
									"id": 2289,
									"members": [
										{
											"constant": false,
											"id": 2272,
											"mutability": "mutable",
											"name": "unbacked",
											"nameLocation": "6891:8:15",
											"nodeType": "VariableDeclaration",
											"scope": 2289,
											"src": "6883:16:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2271,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6883:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2274,
											"mutability": "mutable",
											"name": "liquidityAdded",
											"nameLocation": "6913:14:15",
											"nodeType": "VariableDeclaration",
											"scope": 2289,
											"src": "6905:22:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2273,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6905:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2276,
											"mutability": "mutable",
											"name": "liquidityTaken",
											"nameLocation": "6941:14:15",
											"nodeType": "VariableDeclaration",
											"scope": 2289,
											"src": "6933:22:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2275,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6933:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2278,
											"mutability": "mutable",
											"name": "totalStableDebt",
											"nameLocation": "6969:15:15",
											"nodeType": "VariableDeclaration",
											"scope": 2289,
											"src": "6961:23:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2277,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6961:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2280,
											"mutability": "mutable",
											"name": "totalVariableDebt",
											"nameLocation": "6998:17:15",
											"nodeType": "VariableDeclaration",
											"scope": 2289,
											"src": "6990:25:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2279,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6990:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2282,
											"mutability": "mutable",
											"name": "averageStableBorrowRate",
											"nameLocation": "7029:23:15",
											"nodeType": "VariableDeclaration",
											"scope": 2289,
											"src": "7021:31:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2281,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "7021:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2284,
											"mutability": "mutable",
											"name": "reserveFactor",
											"nameLocation": "7066:13:15",
											"nodeType": "VariableDeclaration",
											"scope": 2289,
											"src": "7058:21:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2283,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "7058:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2286,
											"mutability": "mutable",
											"name": "reserve",
											"nameLocation": "7093:7:15",
											"nodeType": "VariableDeclaration",
											"scope": 2289,
											"src": "7085:15:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2285,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "7085:7:15",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2288,
											"mutability": "mutable",
											"name": "aToken",
											"nameLocation": "7114:6:15",
											"nodeType": "VariableDeclaration",
											"scope": 2289,
											"src": "7106:14:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2287,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "7106:7:15",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "CalculateInterestRatesParams",
									"nameLocation": "6848:28:15",
									"nodeType": "StructDefinition",
									"scope": 2305,
									"src": "6841:284:15",
									"visibility": "public"
								},
								{
									"canonicalName": "DataTypes.InitReserveParams",
									"id": 2304,
									"members": [
										{
											"constant": false,
											"id": 2291,
											"mutability": "mutable",
											"name": "asset",
											"nameLocation": "7168:5:15",
											"nodeType": "VariableDeclaration",
											"scope": 2304,
											"src": "7160:13:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2290,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "7160:7:15",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2293,
											"mutability": "mutable",
											"name": "aTokenAddress",
											"nameLocation": "7187:13:15",
											"nodeType": "VariableDeclaration",
											"scope": 2304,
											"src": "7179:21:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2292,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "7179:7:15",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2295,
											"mutability": "mutable",
											"name": "stableDebtAddress",
											"nameLocation": "7214:17:15",
											"nodeType": "VariableDeclaration",
											"scope": 2304,
											"src": "7206:25:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2294,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "7206:7:15",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2297,
											"mutability": "mutable",
											"name": "variableDebtAddress",
											"nameLocation": "7245:19:15",
											"nodeType": "VariableDeclaration",
											"scope": 2304,
											"src": "7237:27:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2296,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "7237:7:15",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2299,
											"mutability": "mutable",
											"name": "interestRateStrategyAddress",
											"nameLocation": "7278:27:15",
											"nodeType": "VariableDeclaration",
											"scope": 2304,
											"src": "7270:35:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2298,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "7270:7:15",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2301,
											"mutability": "mutable",
											"name": "reservesCount",
											"nameLocation": "7318:13:15",
											"nodeType": "VariableDeclaration",
											"scope": 2304,
											"src": "7311:20:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 2300,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "7311:6:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2303,
											"mutability": "mutable",
											"name": "maxNumberReserves",
											"nameLocation": "7344:17:15",
											"nodeType": "VariableDeclaration",
											"scope": 2304,
											"src": "7337:24:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 2302,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "7337:6:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "InitReserveParams",
									"nameLocation": "7136:17:15",
									"nodeType": "StructDefinition",
									"scope": 2305,
									"src": "7129:237:15",
									"visibility": "public"
								}
							],
							"scope": 2306,
							"src": "62:7306:15",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "37:7332:15"
				},
				"id": 15
			},
			"contracts/adapters/paraswap/BaseParaSwapAdapter.sol": {
				"ast": {
					"absolutePath": "contracts/adapters/paraswap/BaseParaSwapAdapter.sol",
					"exportedSymbols": {
						"BaseParaSwapAdapter": [
							2584
						],
						"DataTypes": [
							2305
						],
						"FlashLoanSimpleReceiverBase": [
							985
						],
						"GPv2SafeERC20": [
							70
						],
						"IERC20": [
							471
						],
						"IERC20Detailed": [
							493
						],
						"IERC20WithPermit": [
							1047
						],
						"IPoolAddressesProvider": [
							1895
						],
						"IPriceOracleGetter": [
							1919
						],
						"Ownable": [
							602
						],
						"SafeMath": [
							946
						]
					},
					"id": 2585,
					"license": "AGPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2307,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "38:24:16"
						},
						{
							"absolutePath": "@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol",
							"file": "@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol",
							"id": 2309,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2585,
							"sourceUnit": 2306,
							"src": "66:89:16",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2308,
										"name": "DataTypes",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2305,
										"src": "74:9:16",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@aave/core-v3/contracts/flashloan/base/FlashLoanSimpleReceiverBase.sol",
							"file": "@aave/core-v3/contracts/flashloan/base/FlashLoanSimpleReceiverBase.sol",
							"id": 2311,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2585,
							"sourceUnit": 986,
							"src": "157:115:16",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2310,
										"name": "FlashLoanSimpleReceiverBase",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 985,
										"src": "165:27:16",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@aave/core-v3/contracts/dependencies/gnosis/contracts/GPv2SafeERC20.sol",
							"file": "@aave/core-v3/contracts/dependencies/gnosis/contracts/GPv2SafeERC20.sol",
							"id": 2313,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2585,
							"sourceUnit": 71,
							"src": "274:102:16",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2312,
										"name": "GPv2SafeERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 70,
										"src": "282:13:16",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@aave/core-v3/contracts/dependencies/openzeppelin/contracts/IERC20.sol",
							"file": "@aave/core-v3/contracts/dependencies/openzeppelin/contracts/IERC20.sol",
							"id": 2315,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2585,
							"sourceUnit": 472,
							"src": "378:94:16",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2314,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 471,
										"src": "386:6:16",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@aave/core-v3/contracts/dependencies/openzeppelin/contracts/IERC20Detailed.sol",
							"file": "@aave/core-v3/contracts/dependencies/openzeppelin/contracts/IERC20Detailed.sol",
							"id": 2317,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2585,
							"sourceUnit": 494,
							"src": "474:110:16",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2316,
										"name": "IERC20Detailed",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 493,
										"src": "482:14:16",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@aave/core-v3/contracts/interfaces/IERC20WithPermit.sol",
							"file": "@aave/core-v3/contracts/interfaces/IERC20WithPermit.sol",
							"id": 2319,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2585,
							"sourceUnit": 1048,
							"src": "586:89:16",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2318,
										"name": "IERC20WithPermit",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1047,
										"src": "594:16:16",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@aave/core-v3/contracts/interfaces/IPoolAddressesProvider.sol",
							"file": "@aave/core-v3/contracts/interfaces/IPoolAddressesProvider.sol",
							"id": 2321,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2585,
							"sourceUnit": 1896,
							"src": "677:101:16",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2320,
										"name": "IPoolAddressesProvider",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1895,
										"src": "685:22:16",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@aave/core-v3/contracts/interfaces/IPriceOracleGetter.sol",
							"file": "@aave/core-v3/contracts/interfaces/IPriceOracleGetter.sol",
							"id": 2323,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2585,
							"sourceUnit": 1920,
							"src": "780:93:16",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2322,
										"name": "IPriceOracleGetter",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1919,
										"src": "788:18:16",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@aave/core-v3/contracts/dependencies/openzeppelin/contracts/SafeMath.sol",
							"file": "@aave/core-v3/contracts/dependencies/openzeppelin/contracts/SafeMath.sol",
							"id": 2325,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2585,
							"sourceUnit": 947,
							"src": "875:98:16",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2324,
										"name": "SafeMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 946,
										"src": "883:8:16",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol",
							"file": "@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol",
							"id": 2327,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2585,
							"sourceUnit": 603,
							"src": "975:96:16",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2326,
										"name": "Ownable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 602,
										"src": "983:7:16",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2329,
										"name": "FlashLoanSimpleReceiverBase",
										"nameLocations": [
											"1246:27:16"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 985,
										"src": "1246:27:16"
									},
									"id": 2330,
									"nodeType": "InheritanceSpecifier",
									"src": "1246:27:16"
								},
								{
									"baseName": {
										"id": 2331,
										"name": "Ownable",
										"nameLocations": [
											"1275:7:16"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 602,
										"src": "1275:7:16"
									},
									"id": 2332,
									"nodeType": "InheritanceSpecifier",
									"src": "1275:7:16"
								}
							],
							"canonicalName": "BaseParaSwapAdapter",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2328,
								"nodeType": "StructuredDocumentation",
								"src": "1075:128:16",
								"text": " @title BaseParaSwapAdapter\n @notice Utility functions for adapters using ParaSwap\n @author Jason Raymond Bell"
							},
							"fullyImplemented": false,
							"id": 2584,
							"linearizedBaseContracts": [
								2584,
								602,
								393,
								985,
								1021
							],
							"name": "BaseParaSwapAdapter",
							"nameLocation": "1223:19:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 2335,
									"libraryName": {
										"id": 2333,
										"name": "SafeMath",
										"nameLocations": [
											"1294:8:16"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 946,
										"src": "1294:8:16"
									},
									"nodeType": "UsingForDirective",
									"src": "1288:27:16",
									"typeName": {
										"id": 2334,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1307:7:16",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"global": false,
									"id": 2339,
									"libraryName": {
										"id": 2336,
										"name": "GPv2SafeERC20",
										"nameLocations": [
											"1325:13:16"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 70,
										"src": "1325:13:16"
									},
									"nodeType": "UsingForDirective",
									"src": "1319:31:16",
									"typeName": {
										"id": 2338,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2337,
											"name": "IERC20",
											"nameLocations": [
												"1343:6:16"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 471,
											"src": "1343:6:16"
										},
										"referencedDeclaration": 471,
										"src": "1343:6:16",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$471",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"global": false,
									"id": 2343,
									"libraryName": {
										"id": 2340,
										"name": "GPv2SafeERC20",
										"nameLocations": [
											"1360:13:16"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 70,
										"src": "1360:13:16"
									},
									"nodeType": "UsingForDirective",
									"src": "1354:39:16",
									"typeName": {
										"id": 2342,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2341,
											"name": "IERC20Detailed",
											"nameLocations": [
												"1378:14:16"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 493,
											"src": "1378:14:16"
										},
										"referencedDeclaration": 493,
										"src": "1378:14:16",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20Detailed_$493",
											"typeString": "contract IERC20Detailed"
										}
									}
								},
								{
									"global": false,
									"id": 2347,
									"libraryName": {
										"id": 2344,
										"name": "GPv2SafeERC20",
										"nameLocations": [
											"1403:13:16"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 70,
										"src": "1403:13:16"
									},
									"nodeType": "UsingForDirective",
									"src": "1397:41:16",
									"typeName": {
										"id": 2346,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2345,
											"name": "IERC20WithPermit",
											"nameLocations": [
												"1421:16:16"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1047,
											"src": "1421:16:16"
										},
										"referencedDeclaration": 1047,
										"src": "1421:16:16",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20WithPermit_$1047",
											"typeString": "contract IERC20WithPermit"
										}
									}
								},
								{
									"canonicalName": "BaseParaSwapAdapter.PermitSignature",
									"id": 2358,
									"members": [
										{
											"constant": false,
											"id": 2349,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "1482:6:16",
											"nodeType": "VariableDeclaration",
											"scope": 2358,
											"src": "1474:14:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2348,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1474:7:16",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2351,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "1503:8:16",
											"nodeType": "VariableDeclaration",
											"scope": 2358,
											"src": "1495:16:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2350,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1495:7:16",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2353,
											"mutability": "mutable",
											"name": "v",
											"nameLocation": "1524:1:16",
											"nodeType": "VariableDeclaration",
											"scope": 2358,
											"src": "1518:7:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 2352,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "1518:5:16",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2355,
											"mutability": "mutable",
											"name": "r",
											"nameLocation": "1540:1:16",
											"nodeType": "VariableDeclaration",
											"scope": 2358,
											"src": "1532:9:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 2354,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1532:7:16",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2357,
											"mutability": "mutable",
											"name": "s",
											"nameLocation": "1556:1:16",
											"nodeType": "VariableDeclaration",
											"scope": 2358,
											"src": "1548:9:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 2356,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1548:7:16",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PermitSignature",
									"nameLocation": "1451:15:16",
									"nodeType": "StructDefinition",
									"scope": 2584,
									"src": "1444:119:16",
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "32e4b286",
									"id": 2361,
									"mutability": "constant",
									"name": "MAX_SLIPPAGE_PERCENT",
									"nameLocation": "1628:20:16",
									"nodeType": "VariableDeclaration",
									"scope": 2584,
									"src": "1604:51:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2359,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1604:7:16",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "33303030",
										"id": 2360,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1651:4:16",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3000_by_1",
											"typeString": "int_const 3000"
										},
										"value": "3000"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "38013f02",
									"id": 2364,
									"mutability": "immutable",
									"name": "ORACLE",
									"nameLocation": "1705:6:16",
									"nodeType": "VariableDeclaration",
									"scope": 2584,
									"src": "1669:42:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IPriceOracleGetter_$1919",
										"typeString": "contract IPriceOracleGetter"
									},
									"typeName": {
										"id": 2363,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2362,
											"name": "IPriceOracleGetter",
											"nameLocations": [
												"1669:18:16"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1919,
											"src": "1669:18:16"
										},
										"referencedDeclaration": 1919,
										"src": "1669:18:16",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IPriceOracleGetter_$1919",
											"typeString": "contract IPriceOracleGetter"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "a078c4190abe07940190effc1846be0ccf03ad6007bc9e93f9697d0b460befbb",
									"id": 2374,
									"name": "Swapped",
									"nameLocation": "1724:7:16",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2366,
												"indexed": true,
												"mutability": "mutable",
												"name": "fromAsset",
												"nameLocation": "1754:9:16",
												"nodeType": "VariableDeclaration",
												"scope": 2374,
												"src": "1738:25:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1738:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2368,
												"indexed": true,
												"mutability": "mutable",
												"name": "toAsset",
												"nameLocation": "1786:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 2374,
												"src": "1770:23:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1770:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2370,
												"indexed": false,
												"mutability": "mutable",
												"name": "fromAmount",
												"nameLocation": "1808:10:16",
												"nodeType": "VariableDeclaration",
												"scope": 2374,
												"src": "1800:18:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1800:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2372,
												"indexed": false,
												"mutability": "mutable",
												"name": "receivedAmount",
												"nameLocation": "1833:14:16",
												"nodeType": "VariableDeclaration",
												"scope": 2374,
												"src": "1825:22:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2371,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1825:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1731:121:16"
									},
									"src": "1718:135:16"
								},
								{
									"anonymous": false,
									"eventSelector": "bf77fd13a39d14dc0da779342c14105c38d9a5d0c60f2caa22f5fd1d5525416d",
									"id": 2384,
									"name": "Bought",
									"nameLocation": "1863:6:16",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2376,
												"indexed": true,
												"mutability": "mutable",
												"name": "fromAsset",
												"nameLocation": "1892:9:16",
												"nodeType": "VariableDeclaration",
												"scope": 2384,
												"src": "1876:25:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2375,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1876:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2378,
												"indexed": true,
												"mutability": "mutable",
												"name": "toAsset",
												"nameLocation": "1924:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 2384,
												"src": "1908:23:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1908:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2380,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountSold",
												"nameLocation": "1946:10:16",
												"nodeType": "VariableDeclaration",
												"scope": 2384,
												"src": "1938:18:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1938:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2382,
												"indexed": false,
												"mutability": "mutable",
												"name": "receivedAmount",
												"nameLocation": "1971:14:16",
												"nodeType": "VariableDeclaration",
												"scope": 2384,
												"src": "1963:22:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2381,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1963:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1869:121:16"
									},
									"src": "1857:134:16"
								},
								{
									"body": {
										"id": 2401,
										"nodeType": "Block",
										"src": "2108:76:16",
										"statements": [
											{
												"expression": {
													"id": 2399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2393,
														"name": "ORACLE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2364,
														"src": "2115:6:16",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IPriceOracleGetter_$1919",
															"typeString": "contract IPriceOracleGetter"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 2395,
																		"name": "addressesProvider",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2387,
																		"src": "2143:17:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IPoolAddressesProvider_$1895",
																			"typeString": "contract IPoolAddressesProvider"
																		}
																	},
																	"id": 2396,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2161:14:16",
																	"memberName": "getPriceOracle",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1840,
																	"src": "2143:32:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																		"typeString": "function () view external returns (address)"
																	}
																},
																"id": 2397,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2143:34:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2394,
															"name": "IPriceOracleGetter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1919,
															"src": "2124:18:16",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IPriceOracleGetter_$1919_$",
																"typeString": "type(contract IPriceOracleGetter)"
															}
														},
														"id": 2398,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2124:54:16",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IPriceOracleGetter_$1919",
															"typeString": "contract IPriceOracleGetter"
														}
													},
													"src": "2115:63:16",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IPriceOracleGetter_$1919",
														"typeString": "contract IPriceOracleGetter"
													}
												},
												"id": 2400,
												"nodeType": "ExpressionStatement",
												"src": "2115:63:16"
											}
										]
									},
									"id": 2402,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2390,
													"name": "addressesProvider",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2387,
													"src": "2089:17:16",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IPoolAddressesProvider_$1895",
														"typeString": "contract IPoolAddressesProvider"
													}
												}
											],
											"id": 2391,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 2389,
												"name": "FlashLoanSimpleReceiverBase",
												"nameLocations": [
													"2061:27:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 985,
												"src": "2061:27:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "2061:46:16"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2387,
												"mutability": "mutable",
												"name": "addressesProvider",
												"nameLocation": "2038:17:16",
												"nodeType": "VariableDeclaration",
												"scope": 2402,
												"src": "2015:40:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IPoolAddressesProvider_$1895",
													"typeString": "contract IPoolAddressesProvider"
												},
												"typeName": {
													"id": 2386,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2385,
														"name": "IPoolAddressesProvider",
														"nameLocations": [
															"2015:22:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1895,
														"src": "2015:22:16"
													},
													"referencedDeclaration": 1895,
													"src": "2015:22:16",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IPoolAddressesProvider_$1895",
														"typeString": "contract IPoolAddressesProvider"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:52:16"
									},
									"returnParameters": {
										"id": 2392,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2108:0:16"
									},
									"scope": 2584,
									"src": "1997:187:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2415,
										"nodeType": "Block",
										"src": "2408:47:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2412,
															"name": "asset",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2405,
															"src": "2443:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2410,
															"name": "ORACLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2364,
															"src": "2422:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IPriceOracleGetter_$1919",
																"typeString": "contract IPriceOracleGetter"
															}
														},
														"id": 2411,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2429:13:16",
														"memberName": "getAssetPrice",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1918,
														"src": "2422:20:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 2413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2422:27:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2409,
												"id": 2414,
												"nodeType": "Return",
												"src": "2415:34:16"
											}
										]
									},
									"documentation": {
										"id": 2403,
										"nodeType": "StructuredDocumentation",
										"src": "2190:148:16",
										"text": " @dev Get the price of the asset from the oracle denominated in eth\n @param asset address\n @return eth price for the asset"
									},
									"id": 2416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getPrice",
									"nameLocation": "2351:9:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2405,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "2369:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2416,
												"src": "2361:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2404,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2361:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2360:15:16"
									},
									"returnParameters": {
										"id": 2409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2408,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2416,
												"src": "2399:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2407,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2399:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2398:9:16"
									},
									"scope": 2584,
									"src": "2342:113:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2440,
										"nodeType": "Block",
										"src": "2635:181:16",
										"statements": [
											{
												"assignments": [
													2426
												],
												"declarations": [
													{
														"constant": false,
														"id": 2426,
														"mutability": "mutable",
														"name": "decimals",
														"nameLocation": "2648:8:16",
														"nodeType": "VariableDeclaration",
														"scope": 2440,
														"src": "2642:14:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 2425,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "2642:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2430,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 2427,
															"name": "asset",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2420,
															"src": "2659:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Detailed_$493",
																"typeString": "contract IERC20Detailed"
															}
														},
														"id": 2428,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2665:8:16",
														"memberName": "decimals",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 492,
														"src": "2659:14:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
															"typeString": "function () view external returns (uint8)"
														}
													},
													"id": 2429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2659:16:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2642:33:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"id": 2434,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2432,
																"name": "decimals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2426,
																"src": "2743:8:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "3737",
																"id": 2433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2755:2:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_77_by_1",
																	"typeString": "int_const 77"
																},
																"value": "77"
															},
															"src": "2743:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "544f4f5f4d414e595f444543494d414c535f4f4e5f544f4b454e",
															"id": 2435,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2759:28:16",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc5915f8715e0da4bd5e6487e67e57e89850a48fc18d4e921a811a8c928ad119",
																"typeString": "literal_string \"TOO_MANY_DECIMALS_ON_TOKEN\""
															},
															"value": "TOO_MANY_DECIMALS_ON_TOKEN"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc5915f8715e0da4bd5e6487e67e57e89850a48fc18d4e921a811a8c928ad119",
																"typeString": "literal_string \"TOO_MANY_DECIMALS_ON_TOKEN\""
															}
														],
														"id": 2431,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2735:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2735:53:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2437,
												"nodeType": "ExpressionStatement",
												"src": "2735:53:16"
											},
											{
												"expression": {
													"id": 2438,
													"name": "decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2426,
													"src": "2802:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 2424,
												"id": 2439,
												"nodeType": "Return",
												"src": "2795:15:16"
											}
										]
									},
									"documentation": {
										"id": 2417,
										"nodeType": "StructuredDocumentation",
										"src": "2461:96:16",
										"text": " @dev Get the decimals of an asset\n @return number of decimals of the asset"
									},
									"id": 2441,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getDecimals",
									"nameLocation": "2570:12:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2420,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "2598:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2441,
												"src": "2583:20:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Detailed_$493",
													"typeString": "contract IERC20Detailed"
												},
												"typeName": {
													"id": 2419,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2418,
														"name": "IERC20Detailed",
														"nameLocations": [
															"2583:14:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 493,
														"src": "2583:14:16"
													},
													"referencedDeclaration": 493,
													"src": "2583:14:16",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Detailed_$493",
														"typeString": "contract IERC20Detailed"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2582:22:16"
									},
									"returnParameters": {
										"id": 2424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2423,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2441,
												"src": "2628:5:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2422,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2628:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2627:7:16"
									},
									"scope": 2584,
									"src": "2561:255:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2455,
										"nodeType": "Block",
										"src": "3015:46:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2452,
															"name": "asset",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2444,
															"src": "3049:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2450,
															"name": "POOL",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 965,
															"src": "3029:4:16",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IPool_$1686",
																"typeString": "contract IPool"
															}
														},
														"id": 2451,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3034:14:16",
														"memberName": "getReserveData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1536,
														"src": "3029:19:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_struct$_ReserveData_$1987_memory_ptr_$",
															"typeString": "function (address) view external returns (struct DataTypes.ReserveData memory)"
														}
													},
													"id": 2453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3029:26:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReserveData_$1987_memory_ptr",
														"typeString": "struct DataTypes.ReserveData memory"
													}
												},
												"functionReturnParameters": 2449,
												"id": 2454,
												"nodeType": "Return",
												"src": "3022:33:16"
											}
										]
									},
									"documentation": {
										"id": 2442,
										"nodeType": "StructuredDocumentation",
										"src": "2822:96:16",
										"text": " @dev Get the aToken associated to the asset\n @return address of the aToken"
									},
									"id": 2456,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getReserveData",
									"nameLocation": "2931:15:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2444,
												"mutability": "mutable",
												"name": "asset",
												"nameLocation": "2955:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2456,
												"src": "2947:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2443,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2947:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2946:15:16"
									},
									"returnParameters": {
										"id": 2449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2448,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2456,
												"src": "2985:28:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReserveData_$1987_memory_ptr",
													"typeString": "struct DataTypes.ReserveData"
												},
												"typeName": {
													"id": 2447,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2446,
														"name": "DataTypes.ReserveData",
														"nameLocations": [
															"2985:9:16",
															"2995:11:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1987,
														"src": "2985:21:16"
													},
													"referencedDeclaration": 1987,
													"src": "2985:21:16",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReserveData_$1987_storage_ptr",
														"typeString": "struct DataTypes.ReserveData"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2984:30:16"
									},
									"scope": 2584,
									"src": "2922:139:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2489,
										"nodeType": "Block",
										"src": "3220:209:16",
										"statements": [
											{
												"assignments": [
													2470
												],
												"declarations": [
													{
														"constant": false,
														"id": 2470,
														"mutability": "mutable",
														"name": "reserveAToken",
														"nameLocation": "3244:13:16",
														"nodeType": "VariableDeclaration",
														"scope": 2489,
														"src": "3227:30:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20WithPermit_$1047",
															"typeString": "contract IERC20WithPermit"
														},
														"typeName": {
															"id": 2469,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2468,
																"name": "IERC20WithPermit",
																"nameLocations": [
																	"3227:16:16"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1047,
																"src": "3227:16:16"
															},
															"referencedDeclaration": 1047,
															"src": "3227:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20WithPermit_$1047",
																"typeString": "contract IERC20WithPermit"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2480,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 2475,
																				"name": "reserve",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2458,
																				"src": "3309:7:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3301:7:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2473,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3301:7:16",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3301:16:16",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2472,
																	"name": "_getReserveData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2456,
																	"src": "3285:15:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_struct$_ReserveData_$1987_memory_ptr_$",
																		"typeString": "function (address) view returns (struct DataTypes.ReserveData memory)"
																	}
																},
																"id": 2477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3285:33:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ReserveData_$1987_memory_ptr",
																	"typeString": "struct DataTypes.ReserveData memory"
																}
															},
															"id": 2478,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3319:13:16",
															"memberName": "aTokenAddress",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1974,
															"src": "3285:47:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2471,
														"name": "IERC20WithPermit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1047,
														"src": "3260:16:16",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IERC20WithPermit_$1047_$",
															"typeString": "type(contract IERC20WithPermit)"
														}
													},
													"id": 2479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3260:79:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20WithPermit_$1047",
														"typeString": "contract IERC20WithPermit"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3227:112:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2482,
															"name": "reserve",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2458,
															"src": "3369:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2483,
															"name": "reserveAToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2470,
															"src": "3378:13:16",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20WithPermit_$1047",
																"typeString": "contract IERC20WithPermit"
															}
														},
														{
															"id": 2484,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2460,
															"src": "3393:4:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2485,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2462,
															"src": "3399:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2486,
															"name": "permitSignature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2465,
															"src": "3407:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PermitSignature_$2358_memory_ptr",
																"typeString": "struct BaseParaSwapAdapter.PermitSignature memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_contract$_IERC20WithPermit_$1047",
																"typeString": "contract IERC20WithPermit"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_struct$_PermitSignature_$2358_memory_ptr",
																"typeString": "struct BaseParaSwapAdapter.PermitSignature memory"
															}
														],
														"id": 2481,
														"name": "_pullATokenAndWithdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2490,
															2559
														],
														"referencedDeclaration": 2559,
														"src": "3346:22:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_contract$_IERC20WithPermit_$1047_$_t_address_$_t_uint256_$_t_struct$_PermitSignature_$2358_memory_ptr_$returns$__$",
															"typeString": "function (address,contract IERC20WithPermit,address,uint256,struct BaseParaSwapAdapter.PermitSignature memory)"
														}
													},
													"id": 2487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3346:77:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2488,
												"nodeType": "ExpressionStatement",
												"src": "3346:77:16"
											}
										]
									},
									"id": 2490,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_pullATokenAndWithdraw",
									"nameLocation": "3076:22:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2458,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "3113:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 2490,
												"src": "3105:15:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2457,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3105:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2460,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "3135:4:16",
												"nodeType": "VariableDeclaration",
												"scope": 2490,
												"src": "3127:12:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2459,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3127:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2462,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3154:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 2490,
												"src": "3146:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2461,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2465,
												"mutability": "mutable",
												"name": "permitSignature",
												"nameLocation": "3190:15:16",
												"nodeType": "VariableDeclaration",
												"scope": 2490,
												"src": "3167:38:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PermitSignature_$2358_memory_ptr",
													"typeString": "struct BaseParaSwapAdapter.PermitSignature"
												},
												"typeName": {
													"id": 2464,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2463,
														"name": "PermitSignature",
														"nameLocations": [
															"3167:15:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2358,
														"src": "3167:15:16"
													},
													"referencedDeclaration": 2358,
													"src": "3167:15:16",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PermitSignature_$2358_storage_ptr",
														"typeString": "struct BaseParaSwapAdapter.PermitSignature"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3098:112:16"
									},
									"returnParameters": {
										"id": 2467,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3220:0:16"
									},
									"scope": 2584,
									"src": "3067:362:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2558,
										"nodeType": "Block",
										"src": "3945:595:16",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2506,
															"name": "permitSignature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2503,
															"src": "4032:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PermitSignature_$2358_memory_ptr",
																"typeString": "struct BaseParaSwapAdapter.PermitSignature memory"
															}
														},
														"id": 2507,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4048:8:16",
														"memberName": "deadline",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2351,
														"src": "4032:24:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2508,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4060:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4032:29:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2531,
												"nodeType": "IfStatement",
												"src": "4028:272:16",
												"trueBody": {
													"id": 2530,
													"nodeType": "Block",
													"src": "4063:237:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2513,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2498,
																		"src": "4103:4:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 2516,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "4126:4:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_BaseParaSwapAdapter_$2584",
																					"typeString": "contract BaseParaSwapAdapter"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_BaseParaSwapAdapter_$2584",
																					"typeString": "contract BaseParaSwapAdapter"
																				}
																			],
																			"id": 2515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4118:7:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2514,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4118:7:16",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4118:13:16",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 2518,
																			"name": "permitSignature",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2503,
																			"src": "4142:15:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PermitSignature_$2358_memory_ptr",
																				"typeString": "struct BaseParaSwapAdapter.PermitSignature memory"
																			}
																		},
																		"id": 2519,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4158:6:16",
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2349,
																		"src": "4142:22:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 2520,
																			"name": "permitSignature",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2503,
																			"src": "4175:15:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PermitSignature_$2358_memory_ptr",
																				"typeString": "struct BaseParaSwapAdapter.PermitSignature memory"
																			}
																		},
																		"id": 2521,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4191:8:16",
																		"memberName": "deadline",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2351,
																		"src": "4175:24:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 2522,
																			"name": "permitSignature",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2503,
																			"src": "4210:15:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PermitSignature_$2358_memory_ptr",
																				"typeString": "struct BaseParaSwapAdapter.PermitSignature memory"
																			}
																		},
																		"id": 2523,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4226:1:16",
																		"memberName": "v",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2353,
																		"src": "4210:17:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	{
																		"expression": {
																			"id": 2524,
																			"name": "permitSignature",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2503,
																			"src": "4238:15:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PermitSignature_$2358_memory_ptr",
																				"typeString": "struct BaseParaSwapAdapter.PermitSignature memory"
																			}
																		},
																		"id": 2525,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4254:1:16",
																		"memberName": "r",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2355,
																		"src": "4238:17:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"expression": {
																			"id": 2526,
																			"name": "permitSignature",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2503,
																			"src": "4266:15:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PermitSignature_$2358_memory_ptr",
																				"typeString": "struct BaseParaSwapAdapter.PermitSignature memory"
																			}
																		},
																		"id": 2527,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4282:1:16",
																		"memberName": "s",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2357,
																		"src": "4266:17:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"expression": {
																		"id": 2510,
																		"name": "reserveAToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2496,
																		"src": "4072:13:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20WithPermit_$1047",
																			"typeString": "contract IERC20WithPermit"
																		}
																	},
																	"id": 2512,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4086:6:16",
																	"memberName": "permit",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1046,
																	"src": "4072:20:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
																		"typeString": "function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"
																	}
																},
																"id": 2528,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4072:220:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2529,
															"nodeType": "ExpressionStatement",
															"src": "4072:220:16"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2535,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2498,
															"src": "4377:4:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 2538,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4391:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_BaseParaSwapAdapter_$2584",
																		"typeString": "contract BaseParaSwapAdapter"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_BaseParaSwapAdapter_$2584",
																		"typeString": "contract BaseParaSwapAdapter"
																	}
																],
																"id": 2537,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4383:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2536,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4383:7:16",
																	"typeDescriptions": {}
																}
															},
															"id": 2539,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4383:13:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2540,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2500,
															"src": "4398:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2532,
															"name": "reserveAToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2496,
															"src": "4346:13:16",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20WithPermit_$1047",
																"typeString": "contract IERC20WithPermit"
															}
														},
														"id": 2534,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4360:16:16",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 58,
														"src": "4346:30:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$471_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$471_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 2541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4346:59:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2542,
												"nodeType": "ExpressionStatement",
												"src": "4346:59:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2554,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 2546,
																		"name": "reserve",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2493,
																		"src": "4461:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2547,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2500,
																		"src": "4470:6:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 2550,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "4486:4:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_BaseParaSwapAdapter_$2584",
																					"typeString": "contract BaseParaSwapAdapter"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_BaseParaSwapAdapter_$2584",
																					"typeString": "contract BaseParaSwapAdapter"
																				}
																			],
																			"id": 2549,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4478:7:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2548,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4478:7:16",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2551,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4478:13:16",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 2544,
																		"name": "POOL",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 965,
																		"src": "4447:4:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IPool_$1686",
																			"typeString": "contract IPool"
																		}
																	},
																	"id": 2545,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4452:8:16",
																	"memberName": "withdraw",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1303,
																	"src": "4447:13:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256,address) external returns (uint256)"
																	}
																},
																"id": 2552,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4447:45:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 2553,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2500,
																"src": "4496:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4447:55:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "554e45585045435445445f414d4f554e545f57495448445241574e",
															"id": 2555,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4504:29:16",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_85a045c7862eb0e81d59fe8dfd2ed8c824917ce215328caf39199676e5939f87",
																"typeString": "literal_string \"UNEXPECTED_AMOUNT_WITHDRAWN\""
															},
															"value": "UNEXPECTED_AMOUNT_WITHDRAWN"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_85a045c7862eb0e81d59fe8dfd2ed8c824917ce215328caf39199676e5939f87",
																"typeString": "literal_string \"UNEXPECTED_AMOUNT_WITHDRAWN\""
															}
														],
														"id": 2543,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4439:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4439:95:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2557,
												"nodeType": "ExpressionStatement",
												"src": "4439:95:16"
											}
										]
									},
									"documentation": {
										"id": 2491,
										"nodeType": "StructuredDocumentation",
										"src": "3435:316:16",
										"text": " @dev Pull the ATokens from the user\n @param reserve address of the asset\n @param reserveAToken address of the aToken of the reserve\n @param user address\n @param amount of tokens to be transferred to the contract\n @param permitSignature struct containing the permit signature"
									},
									"id": 2559,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_pullATokenAndWithdraw",
									"nameLocation": "3764:22:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2493,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "3801:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 2559,
												"src": "3793:15:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2492,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3793:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2496,
												"mutability": "mutable",
												"name": "reserveAToken",
												"nameLocation": "3832:13:16",
												"nodeType": "VariableDeclaration",
												"scope": 2559,
												"src": "3815:30:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20WithPermit_$1047",
													"typeString": "contract IERC20WithPermit"
												},
												"typeName": {
													"id": 2495,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2494,
														"name": "IERC20WithPermit",
														"nameLocations": [
															"3815:16:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1047,
														"src": "3815:16:16"
													},
													"referencedDeclaration": 1047,
													"src": "3815:16:16",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20WithPermit_$1047",
														"typeString": "contract IERC20WithPermit"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2498,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "3860:4:16",
												"nodeType": "VariableDeclaration",
												"scope": 2559,
												"src": "3852:12:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2497,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3852:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2500,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3879:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 2559,
												"src": "3871:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2499,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3871:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2503,
												"mutability": "mutable",
												"name": "permitSignature",
												"nameLocation": "3915:15:16",
												"nodeType": "VariableDeclaration",
												"scope": 2559,
												"src": "3892:38:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PermitSignature_$2358_memory_ptr",
													"typeString": "struct BaseParaSwapAdapter.PermitSignature"
												},
												"typeName": {
													"id": 2502,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2501,
														"name": "PermitSignature",
														"nameLocations": [
															"3892:15:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2358,
														"src": "3892:15:16"
													},
													"referencedDeclaration": 2358,
													"src": "3892:15:16",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PermitSignature_$2358_storage_ptr",
														"typeString": "struct BaseParaSwapAdapter.PermitSignature"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3786:149:16"
									},
									"returnParameters": {
										"id": 2505,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3945:0:16"
									},
									"scope": 2584,
									"src": "3755:785:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2582,
										"nodeType": "Block",
										"src": "4822:72:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2571,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 538,
																"src": "4848:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2572,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4848:7:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2577,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4881:4:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_BaseParaSwapAdapter_$2584",
																				"typeString": "contract BaseParaSwapAdapter"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_BaseParaSwapAdapter_$2584",
																				"typeString": "contract BaseParaSwapAdapter"
																			}
																		],
																		"id": 2576,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4873:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2575,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4873:7:16",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2578,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4873:13:16",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 2573,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2563,
																	"src": "4857:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$471",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 2574,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4863:9:16",
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 410,
																"src": "4857:15:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 2579,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4857:30:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2568,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2563,
															"src": "4829:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$471",
																"typeString": "contract IERC20"
															}
														},
														"id": 2570,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4835:12:16",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 30,
														"src": "4829:18:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$471_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$471_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 2580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4829:59:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2581,
												"nodeType": "ExpressionStatement",
												"src": "4829:59:16"
											}
										]
									},
									"documentation": {
										"id": 2560,
										"nodeType": "StructuredDocumentation",
										"src": "4546:217:16",
										"text": " @dev Emergency rescue for token stucked on this contract, as failsafe mechanism\n - Funds should never remain in this contract more time than during transactions\n - Only callable by the owner"
									},
									"functionSelector": "00ae3bf8",
									"id": 2583,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2566,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2565,
												"name": "onlyOwner",
												"nameLocations": [
													"4812:9:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 551,
												"src": "4812:9:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "4812:9:16"
										}
									],
									"name": "rescueTokens",
									"nameLocation": "4776:12:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2563,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4796:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2583,
												"src": "4789:12:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$471",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2562,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2561,
														"name": "IERC20",
														"nameLocations": [
															"4789:6:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 471,
														"src": "4789:6:16"
													},
													"referencedDeclaration": 471,
													"src": "4789:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$471",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4788:14:16"
									},
									"returnParameters": {
										"id": 2567,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4822:0:16"
									},
									"scope": 2584,
									"src": "4767:127:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2585,
							"src": "1205:3692:16",
							"usedErrors": [],
							"usedEvents": [
								507,
								2374,
								2384
							]
						}
					],
					"src": "38:4861:16"
				},
				"id": 16
			},
			"contracts/adapters/paraswap/BaseParaSwapSellAdapter.sol": {
				"ast": {
					"absolutePath": "contracts/adapters/paraswap/BaseParaSwapSellAdapter.sol",
					"exportedSymbols": {
						"BaseParaSwapAdapter": [
							2584
						],
						"BaseParaSwapSellAdapter": [
							2877
						],
						"IERC20Detailed": [
							493
						],
						"IParaSwapAugustus": [
							2885
						],
						"IParaSwapAugustusRegistry": [
							2895
						],
						"IPoolAddressesProvider": [
							1895
						],
						"PercentageMath": [
							1953
						],
						"SafeERC20": [
							826
						],
						"SafeMath": [
							946
						]
					},
					"id": 2878,
					"license": "AGPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2586,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "38:24:17"
						},
						{
							"absolutePath": "@aave/core-v3/contracts/dependencies/openzeppelin/contracts/SafeERC20.sol",
							"file": "@aave/core-v3/contracts/dependencies/openzeppelin/contracts/SafeERC20.sol",
							"id": 2588,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2878,
							"sourceUnit": 827,
							"src": "66:100:17",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2587,
										"name": "SafeERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 826,
										"src": "74:9:17",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@aave/core-v3/contracts/dependencies/openzeppelin/contracts/SafeMath.sol",
							"file": "@aave/core-v3/contracts/dependencies/openzeppelin/contracts/SafeMath.sol",
							"id": 2590,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2878,
							"sourceUnit": 947,
							"src": "168:98:17",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2589,
										"name": "SafeMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 946,
										"src": "176:8:17",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@aave/core-v3/contracts/protocol/libraries/math/PercentageMath.sol",
							"file": "@aave/core-v3/contracts/protocol/libraries/math/PercentageMath.sol",
							"id": 2592,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2878,
							"sourceUnit": 1954,
							"src": "268:98:17",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2591,
										"name": "PercentageMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1953,
										"src": "276:14:17",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@aave/core-v3/contracts/interfaces/IPoolAddressesProvider.sol",
							"file": "@aave/core-v3/contracts/interfaces/IPoolAddressesProvider.sol",
							"id": 2594,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2878,
							"sourceUnit": 1896,
							"src": "368:101:17",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2593,
										"name": "IPoolAddressesProvider",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1895,
										"src": "376:22:17",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@aave/core-v3/contracts/dependencies/openzeppelin/contracts/IERC20Detailed.sol",
							"file": "@aave/core-v3/contracts/dependencies/openzeppelin/contracts/IERC20Detailed.sol",
							"id": 2596,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2878,
							"sourceUnit": 494,
							"src": "471:110:17",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2595,
										"name": "IERC20Detailed",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 493,
										"src": "479:14:17",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/adapters/paraswap/interfaces/IParaSwapAugustus.sol",
							"file": "./interfaces/IParaSwapAugustus.sol",
							"id": 2598,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2878,
							"sourceUnit": 2886,
							"src": "583:69:17",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2597,
										"name": "IParaSwapAugustus",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2885,
										"src": "591:17:17",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/adapters/paraswap/interfaces/IParaSwapAugustusRegistry.sol",
							"file": "./interfaces/IParaSwapAugustusRegistry.sol",
							"id": 2600,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2878,
							"sourceUnit": 2896,
							"src": "654:85:17",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2599,
										"name": "IParaSwapAugustusRegistry",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2895,
										"src": "662:25:17",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/adapters/paraswap/BaseParaSwapAdapter.sol",
							"file": "./BaseParaSwapAdapter.sol",
							"id": 2602,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2878,
							"sourceUnit": 2585,
							"src": "741:62:17",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2601,
										"name": "BaseParaSwapAdapter",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2584,
										"src": "749:19:17",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2604,
										"name": "BaseParaSwapAdapter",
										"nameLocations": [
											"992:19:17"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2584,
										"src": "992:19:17"
									},
									"id": 2605,
									"nodeType": "InheritanceSpecifier",
									"src": "992:19:17"
								}
							],
							"canonicalName": "BaseParaSwapSellAdapter",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2603,
								"nodeType": "StructuredDocumentation",
								"src": "807:138:17",
								"text": " @title BaseParaSwapSellAdapter\n @notice Implements the logic for selling tokens on ParaSwap\n @author Jason Raymond Bell"
							},
							"fullyImplemented": false,
							"id": 2877,
							"linearizedBaseContracts": [
								2877,
								2584,
								602,
								393,
								985,
								1021
							],
							"name": "BaseParaSwapSellAdapter",
							"nameLocation": "965:23:17",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 2608,
									"libraryName": {
										"id": 2606,
										"name": "PercentageMath",
										"nameLocations": [
											"1023:14:17"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1953,
										"src": "1023:14:17"
									},
									"nodeType": "UsingForDirective",
									"src": "1017:33:17",
									"typeName": {
										"id": 2607,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1042:7:17",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"global": false,
									"id": 2611,
									"libraryName": {
										"id": 2609,
										"name": "SafeMath",
										"nameLocations": [
											"1060:8:17"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 946,
										"src": "1060:8:17"
									},
									"nodeType": "UsingForDirective",
									"src": "1054:27:17",
									"typeName": {
										"id": 2610,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1073:7:17",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"global": false,
									"id": 2615,
									"libraryName": {
										"id": 2612,
										"name": "SafeERC20",
										"nameLocations": [
											"1091:9:17"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 826,
										"src": "1091:9:17"
									},
									"nodeType": "UsingForDirective",
									"src": "1085:35:17",
									"typeName": {
										"id": 2614,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2613,
											"name": "IERC20Detailed",
											"nameLocations": [
												"1105:14:17"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 493,
											"src": "1105:14:17"
										},
										"referencedDeclaration": 493,
										"src": "1105:14:17",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20Detailed_$493",
											"typeString": "contract IERC20Detailed"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "3a829867",
									"id": 2618,
									"mutability": "immutable",
									"name": "AUGUSTUS_REGISTRY",
									"nameLocation": "1169:17:17",
									"nodeType": "VariableDeclaration",
									"scope": 2877,
									"src": "1126:60:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IParaSwapAugustusRegistry_$2895",
										"typeString": "contract IParaSwapAugustusRegistry"
									},
									"typeName": {
										"id": 2617,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2616,
											"name": "IParaSwapAugustusRegistry",
											"nameLocations": [
												"1126:25:17"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2895,
											"src": "1126:25:17"
										},
										"referencedDeclaration": 2895,
										"src": "1126:25:17",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IParaSwapAugustusRegistry_$2895",
											"typeString": "contract IParaSwapAugustusRegistry"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 2645,
										"nodeType": "Block",
										"src": "1345:191:17",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2638,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1441:45:17",
															"subExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2635,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1483:1:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2634,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1475:7:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2633,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1475:7:17",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2636,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1475:10:17",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 2631,
																		"name": "augustusRegistry",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2624,
																		"src": "1442:16:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IParaSwapAugustusRegistry_$2895",
																			"typeString": "contract IParaSwapAugustusRegistry"
																		}
																	},
																	"id": 2632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1459:15:17",
																	"memberName": "isValidAugustus",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2894,
																	"src": "1442:32:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address) view external returns (bool)"
																	}
																},
																"id": 2637,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1442:44:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2630,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1433:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 2639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1433:54:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2640,
												"nodeType": "ExpressionStatement",
												"src": "1433:54:17"
											},
											{
												"expression": {
													"id": 2643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2641,
														"name": "AUGUSTUS_REGISTRY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2618,
														"src": "1494:17:17",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IParaSwapAugustusRegistry_$2895",
															"typeString": "contract IParaSwapAugustusRegistry"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2642,
														"name": "augustusRegistry",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2624,
														"src": "1514:16:17",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IParaSwapAugustusRegistry_$2895",
															"typeString": "contract IParaSwapAugustusRegistry"
														}
													},
													"src": "1494:36:17",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IParaSwapAugustusRegistry_$2895",
														"typeString": "contract IParaSwapAugustusRegistry"
													}
												},
												"id": 2644,
												"nodeType": "ExpressionStatement",
												"src": "1494:36:17"
											}
										]
									},
									"id": 2646,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2627,
													"name": "addressesProvider",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2621,
													"src": "1326:17:17",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IPoolAddressesProvider_$1895",
														"typeString": "contract IPoolAddressesProvider"
													}
												}
											],
											"id": 2628,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 2626,
												"name": "BaseParaSwapAdapter",
												"nameLocations": [
													"1306:19:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2584,
												"src": "1306:19:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "1306:38:17"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2621,
												"mutability": "mutable",
												"name": "addressesProvider",
												"nameLocation": "1234:17:17",
												"nodeType": "VariableDeclaration",
												"scope": 2646,
												"src": "1211:40:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IPoolAddressesProvider_$1895",
													"typeString": "contract IPoolAddressesProvider"
												},
												"typeName": {
													"id": 2620,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2619,
														"name": "IPoolAddressesProvider",
														"nameLocations": [
															"1211:22:17"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1895,
														"src": "1211:22:17"
													},
													"referencedDeclaration": 1895,
													"src": "1211:22:17",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IPoolAddressesProvider_$1895",
														"typeString": "contract IPoolAddressesProvider"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2624,
												"mutability": "mutable",
												"name": "augustusRegistry",
												"nameLocation": "1284:16:17",
												"nodeType": "VariableDeclaration",
												"scope": 2646,
												"src": "1258:42:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IParaSwapAugustusRegistry_$2895",
													"typeString": "contract IParaSwapAugustusRegistry"
												},
												"typeName": {
													"id": 2623,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2622,
														"name": "IParaSwapAugustusRegistry",
														"nameLocations": [
															"1258:25:17"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2895,
														"src": "1258:25:17"
													},
													"referencedDeclaration": 2895,
													"src": "1258:25:17",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IParaSwapAugustusRegistry_$2895",
														"typeString": "contract IParaSwapAugustusRegistry"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1204:101:17"
									},
									"returnParameters": {
										"id": 2629,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1345:0:17"
									},
									"scope": 2877,
									"src": "1193:343:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2875,
										"nodeType": "Block",
										"src": "2485:2507:17",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2674,
																			"name": "augustus",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2654,
																			"src": "2542:8:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IParaSwapAugustus_$2885",
																				"typeString": "contract IParaSwapAugustus"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IParaSwapAugustus_$2885",
																				"typeString": "contract IParaSwapAugustus"
																			}
																		],
																		"id": 2673,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2534:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2672,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2534:7:17",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2675,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2534:17:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 2670,
																	"name": "AUGUSTUS_REGISTRY",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2618,
																	"src": "2500:17:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IParaSwapAugustusRegistry_$2895",
																		"typeString": "contract IParaSwapAugustusRegistry"
																	}
																},
																"id": 2671,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2518:15:17",
																"memberName": "isValidAugustus",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2894,
																"src": "2500:33:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view external returns (bool)"
																}
															},
															"id": 2676,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2500:52:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "494e56414c49445f4155475553545553",
															"id": 2677,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2554:18:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3202e1fc4f78abbce03a97de69392b3f69ebba48c41588ffb32a1c8b97349f74",
																"typeString": "literal_string \"INVALID_AUGUSTUS\""
															},
															"value": "INVALID_AUGUSTUS"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3202e1fc4f78abbce03a97de69392b3f69ebba48c41588ffb32a1c8b97349f74",
																"typeString": "literal_string \"INVALID_AUGUSTUS\""
															}
														],
														"id": 2669,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2492:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2492:81:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2679,
												"nodeType": "ExpressionStatement",
												"src": "2492:81:17"
											},
											{
												"id": 2743,
												"nodeType": "Block",
												"src": "2582:615:17",
												"statements": [
													{
														"assignments": [
															2681
														],
														"declarations": [
															{
																"constant": false,
																"id": 2681,
																"mutability": "mutable",
																"name": "fromAssetDecimals",
																"nameLocation": "2599:17:17",
																"nodeType": "VariableDeclaration",
																"scope": 2743,
																"src": "2591:25:17",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2680,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2591:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2685,
														"initialValue": {
															"arguments": [
																{
																	"id": 2683,
																	"name": "assetToSwapFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2657,
																	"src": "2632:15:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20Detailed_$493",
																		"typeString": "contract IERC20Detailed"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20Detailed_$493",
																		"typeString": "contract IERC20Detailed"
																	}
																],
																"id": 2682,
																"name": "_getDecimals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2441,
																"src": "2619:12:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_contract$_IERC20Detailed_$493_$returns$_t_uint8_$",
																	"typeString": "function (contract IERC20Detailed) view returns (uint8)"
																}
															},
															"id": 2684,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2619:29:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2591:57:17"
													},
													{
														"assignments": [
															2687
														],
														"declarations": [
															{
																"constant": false,
																"id": 2687,
																"mutability": "mutable",
																"name": "toAssetDecimals",
																"nameLocation": "2665:15:17",
																"nodeType": "VariableDeclaration",
																"scope": 2743,
																"src": "2657:23:17",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2686,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2657:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2691,
														"initialValue": {
															"arguments": [
																{
																	"id": 2689,
																	"name": "assetToSwapTo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2660,
																	"src": "2696:13:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20Detailed_$493",
																		"typeString": "contract IERC20Detailed"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20Detailed_$493",
																		"typeString": "contract IERC20Detailed"
																	}
																],
																"id": 2688,
																"name": "_getDecimals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2441,
																"src": "2683:12:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_contract$_IERC20Detailed_$493_$returns$_t_uint8_$",
																	"typeString": "function (contract IERC20Detailed) view returns (uint8)"
																}
															},
															"id": 2690,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2683:27:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2657:53:17"
													},
													{
														"assignments": [
															2693
														],
														"declarations": [
															{
																"constant": false,
																"id": 2693,
																"mutability": "mutable",
																"name": "fromAssetPrice",
																"nameLocation": "2729:14:17",
																"nodeType": "VariableDeclaration",
																"scope": 2743,
																"src": "2721:22:17",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2692,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2721:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2700,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2697,
																			"name": "assetToSwapFrom",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2657,
																			"src": "2764:15:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20Detailed_$493",
																				"typeString": "contract IERC20Detailed"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20Detailed_$493",
																				"typeString": "contract IERC20Detailed"
																			}
																		],
																		"id": 2696,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2756:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2695,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2756:7:17",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2698,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2756:24:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2694,
																"name": "_getPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2416,
																"src": "2746:9:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view returns (uint256)"
																}
															},
															"id": 2699,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2746:35:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2721:60:17"
													},
													{
														"assignments": [
															2702
														],
														"declarations": [
															{
																"constant": false,
																"id": 2702,
																"mutability": "mutable",
																"name": "toAssetPrice",
																"nameLocation": "2798:12:17",
																"nodeType": "VariableDeclaration",
																"scope": 2743,
																"src": "2790:20:17",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2701,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2790:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2709,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2706,
																			"name": "assetToSwapTo",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2660,
																			"src": "2831:13:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20Detailed_$493",
																				"typeString": "contract IERC20Detailed"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20Detailed_$493",
																				"typeString": "contract IERC20Detailed"
																			}
																		],
																		"id": 2705,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2823:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2704,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2823:7:17",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2707,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2823:22:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2703,
																"name": "_getPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2416,
																"src": "2813:9:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view returns (uint256)"
																}
															},
															"id": 2708,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2813:33:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2790:56:17"
													},
													{
														"assignments": [
															2711
														],
														"declarations": [
															{
																"constant": false,
																"id": 2711,
																"mutability": "mutable",
																"name": "expectedMinAmountOut",
																"nameLocation": "2865:20:17",
																"nodeType": "VariableDeclaration",
																"scope": 2743,
																"src": "2857:28:17",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2710,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2857:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2735,
														"initialValue": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2733,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 2730,
																			"name": "PercentageMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1953,
																			"src": "3036:14:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_PercentageMath_$1953_$",
																				"typeString": "type(library PercentageMath)"
																			}
																		},
																		"id": 2731,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "3051:17:17",
																		"memberName": "PERCENTAGE_FACTOR",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1925,
																		"src": "3036:32:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 2732,
																		"name": "MAX_SLIPPAGE_PERCENT",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2361,
																		"src": "3071:20:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3036:55:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2726,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2724,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "2989:2:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2725,
																						"name": "fromAssetDecimals",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2681,
																						"src": "2995:17:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "2989:23:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 2722,
																					"name": "toAssetPrice",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2702,
																					"src": "2972:12:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2723,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2985:3:17",
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 930,
																				"src": "2972:16:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 2727,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2972:41:17",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 2718,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"hexValue": "3130",
																								"id": 2716,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "2934:2:17",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_10_by_1",
																									"typeString": "int_const 10"
																								},
																								"value": "10"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "**",
																							"rightExpression": {
																								"id": 2717,
																								"name": "toAssetDecimals",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2687,
																								"src": "2940:15:17",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "2934:21:17",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"id": 2714,
																							"name": "fromAssetPrice",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2693,
																							"src": "2915:14:17",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 2715,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "2930:3:17",
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 930,
																						"src": "2915:18:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 2719,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2915:41:17",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 2712,
																					"name": "amountToSwap",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2662,
																					"src": "2888:12:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2713,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2911:3:17",
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 930,
																				"src": "2888:26:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 2720,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2888:69:17",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2721,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2968:3:17",
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 945,
																		"src": "2888:83:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2728,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2888:126:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2729,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3025:10:17",
																"memberName": "percentMul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1940,
																"src": "2888:147:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2734,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2888:204:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2857:235:17"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2739,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2737,
																		"name": "expectedMinAmountOut",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2711,
																		"src": "3111:20:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 2738,
																		"name": "minAmountToReceive",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2664,
																		"src": "3135:18:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3111:42:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "4d494e5f414d4f554e545f455843454544535f4d41585f534c495050414745",
																	"id": 2740,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3155:33:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_8333172953304c474b0cfe8eccb09fd2b08c1198c3d73a3ed0388645fb84d24e",
																		"typeString": "literal_string \"MIN_AMOUNT_EXCEEDS_MAX_SLIPPAGE\""
																	},
																	"value": "MIN_AMOUNT_EXCEEDS_MAX_SLIPPAGE"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_8333172953304c474b0cfe8eccb09fd2b08c1198c3d73a3ed0388645fb84d24e",
																		"typeString": "literal_string \"MIN_AMOUNT_EXCEEDS_MAX_SLIPPAGE\""
																	}
																],
																"id": 2736,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "3103:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 2741,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3103:86:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 2742,
														"nodeType": "ExpressionStatement",
														"src": "3103:86:17"
													}
												]
											},
											{
												"assignments": [
													2745
												],
												"declarations": [
													{
														"constant": false,
														"id": 2745,
														"mutability": "mutable",
														"name": "balanceBeforeAssetFrom",
														"nameLocation": "3213:22:17",
														"nodeType": "VariableDeclaration",
														"scope": 2875,
														"src": "3205:30:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2744,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3205:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2753,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2750,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3272:4:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_BaseParaSwapSellAdapter_$2877",
																		"typeString": "contract BaseParaSwapSellAdapter"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_BaseParaSwapSellAdapter_$2877",
																		"typeString": "contract BaseParaSwapSellAdapter"
																	}
																],
																"id": 2749,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3264:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2748,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3264:7:17",
																	"typeDescriptions": {}
																}
															},
															"id": 2751,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3264:13:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2746,
															"name": "assetToSwapFrom",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2657,
															"src": "3238:15:17",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Detailed_$493",
																"typeString": "contract IERC20Detailed"
															}
														},
														"id": 2747,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3254:9:17",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 410,
														"src": "3238:25:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 2752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3238:40:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3205:73:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2757,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2755,
																"name": "balanceBeforeAssetFrom",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2745,
																"src": "3293:22:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2756,
																"name": "amountToSwap",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2662,
																"src": "3319:12:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3293:38:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "494e53554646494349454e545f42414c414e43455f4245464f52455f53574150",
															"id": 2758,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3333:34:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51fc4946c16284910827fc38bc7611d60d4dd1f7d8fefa0da6f8642035c3c48b",
																"typeString": "literal_string \"INSUFFICIENT_BALANCE_BEFORE_SWAP\""
															},
															"value": "INSUFFICIENT_BALANCE_BEFORE_SWAP"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51fc4946c16284910827fc38bc7611d60d4dd1f7d8fefa0da6f8642035c3c48b",
																"typeString": "literal_string \"INSUFFICIENT_BALANCE_BEFORE_SWAP\""
															}
														],
														"id": 2754,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3285:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3285:83:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2760,
												"nodeType": "ExpressionStatement",
												"src": "3285:83:17"
											},
											{
												"assignments": [
													2762
												],
												"declarations": [
													{
														"constant": false,
														"id": 2762,
														"mutability": "mutable",
														"name": "balanceBeforeAssetTo",
														"nameLocation": "3383:20:17",
														"nodeType": "VariableDeclaration",
														"scope": 2875,
														"src": "3375:28:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2761,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3375:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2770,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2767,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3438:4:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_BaseParaSwapSellAdapter_$2877",
																		"typeString": "contract BaseParaSwapSellAdapter"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_BaseParaSwapSellAdapter_$2877",
																		"typeString": "contract BaseParaSwapSellAdapter"
																	}
																],
																"id": 2766,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3430:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2765,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3430:7:17",
																	"typeDescriptions": {}
																}
															},
															"id": 2768,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3430:13:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2763,
															"name": "assetToSwapTo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2660,
															"src": "3406:13:17",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Detailed_$493",
																"typeString": "contract IERC20Detailed"
															}
														},
														"id": 2764,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3420:9:17",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 410,
														"src": "3406:23:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 2769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3406:38:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3375:69:17"
											},
											{
												"assignments": [
													2772
												],
												"declarations": [
													{
														"constant": false,
														"id": 2772,
														"mutability": "mutable",
														"name": "tokenTransferProxy",
														"nameLocation": "3461:18:17",
														"nodeType": "VariableDeclaration",
														"scope": 2875,
														"src": "3453:26:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2771,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3453:7:17",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2776,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 2773,
															"name": "augustus",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2654,
															"src": "3482:8:17",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IParaSwapAugustus_$2885",
																"typeString": "contract IParaSwapAugustus"
															}
														},
														"id": 2774,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3491:21:17",
														"memberName": "getTokenTransferProxy",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2884,
														"src": "3482:30:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 2775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3482:32:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3453:61:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2780,
															"name": "tokenTransferProxy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2772,
															"src": "3549:18:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "30",
															"id": 2781,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3569:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"expression": {
															"id": 2777,
															"name": "assetToSwapFrom",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2657,
															"src": "3521:15:17",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Detailed_$493",
																"typeString": "contract IERC20Detailed"
															}
														},
														"id": 2779,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3537:11:17",
														"memberName": "safeApprove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 703,
														"src": "3521:27:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$471_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$471_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 2782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3521:50:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2783,
												"nodeType": "ExpressionStatement",
												"src": "3521:50:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2787,
															"name": "tokenTransferProxy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2772,
															"src": "3606:18:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2788,
															"name": "amountToSwap",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2662,
															"src": "3626:12:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2784,
															"name": "assetToSwapFrom",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2657,
															"src": "3578:15:17",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Detailed_$493",
																"typeString": "contract IERC20Detailed"
															}
														},
														"id": 2786,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3594:11:17",
														"memberName": "safeApprove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 703,
														"src": "3578:27:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$471_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$471_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 2789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3578:61:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2790,
												"nodeType": "ExpressionStatement",
												"src": "3578:61:17"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2793,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2791,
														"name": "fromAmountOffset",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2649,
														"src": "3652:16:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2792,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3672:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3652:21:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2811,
												"nodeType": "IfStatement",
												"src": "3648:679:17",
												"trueBody": {
													"id": 2810,
													"nodeType": "Block",
													"src": "3675:652:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 2805,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2797,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2795,
																				"name": "fromAmountOffset",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2649,
																				"src": "3859:16:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2796,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3879:1:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "3859:21:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2804,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2798,
																				"name": "fromAmountOffset",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2649,
																				"src": "3884:16:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<=",
																			"rightExpression": {
																				"arguments": [
																					{
																						"hexValue": "3332",
																						"id": 2802,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3928:2:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_32_by_1",
																							"typeString": "int_const 32"
																						},
																						"value": "32"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_rational_32_by_1",
																							"typeString": "int_const 32"
																						}
																					],
																					"expression": {
																						"expression": {
																							"id": 2799,
																							"name": "swapCalldata",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2651,
																							"src": "3904:12:17",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 2800,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "3917:6:17",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "3904:19:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 2801,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3924:3:17",
																					"memberName": "sub",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 875,
																					"src": "3904:23:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 2803,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3904:27:17",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3884:47:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "3859:72:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "46524f4d5f414d4f554e545f4f46465345545f4f55545f4f465f52414e4745",
																		"id": 2806,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3942:33:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_f920786e74a0af1b51a64ca021265d328aab062025c81f249165aca83960cff7",
																			"typeString": "literal_string \"FROM_AMOUNT_OFFSET_OUT_OF_RANGE\""
																		},
																		"value": "FROM_AMOUNT_OFFSET_OUT_OF_RANGE"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_f920786e74a0af1b51a64ca021265d328aab062025c81f249165aca83960cff7",
																			"typeString": "literal_string \"FROM_AMOUNT_OFFSET_OUT_OF_RANGE\""
																		}
																	],
																	"id": 2794,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3841:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2807,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3841:143:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2808,
															"nodeType": "ExpressionStatement",
															"src": "3841:143:17"
														},
														{
															"AST": {
																"nativeSrc": "4234:86:17",
																"nodeType": "YulBlock",
																"src": "4234:86:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "swapCalldata",
																							"nativeSrc": "4256:12:17",
																							"nodeType": "YulIdentifier",
																							"src": "4256:12:17"
																						},
																						{
																							"arguments": [
																								{
																									"name": "fromAmountOffset",
																									"nativeSrc": "4274:16:17",
																									"nodeType": "YulIdentifier",
																									"src": "4274:16:17"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4292:2:17",
																									"nodeType": "YulLiteral",
																									"src": "4292:2:17",
																									"type": "",
																									"value": "32"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4270:3:17",
																								"nodeType": "YulIdentifier",
																								"src": "4270:3:17"
																							},
																							"nativeSrc": "4270:25:17",
																							"nodeType": "YulFunctionCall",
																							"src": "4270:25:17"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4252:3:17",
																						"nodeType": "YulIdentifier",
																						"src": "4252:3:17"
																					},
																					"nativeSrc": "4252:44:17",
																					"nodeType": "YulFunctionCall",
																					"src": "4252:44:17"
																				},
																				{
																					"name": "amountToSwap",
																					"nativeSrc": "4298:12:17",
																					"nodeType": "YulIdentifier",
																					"src": "4298:12:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4245:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "4245:6:17"
																			},
																			"nativeSrc": "4245:66:17",
																			"nodeType": "YulFunctionCall",
																			"src": "4245:66:17"
																		},
																		"nativeSrc": "4245:66:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "4245:66:17"
																	}
																]
															},
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 2662,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "4298:12:17",
																	"valueSize": 1
																},
																{
																	"declaration": 2649,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "4274:16:17",
																	"valueSize": 1
																},
																{
																	"declaration": 2651,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "4256:12:17",
																	"valueSize": 1
																}
															],
															"id": 2809,
															"nodeType": "InlineAssembly",
															"src": "4225:95:17"
														}
													]
												}
											},
											{
												"assignments": [
													2813,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 2813,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4339:7:17",
														"nodeType": "VariableDeclaration",
														"scope": 2875,
														"src": "4334:12:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2812,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4334:4:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 2821,
												"initialValue": {
													"arguments": [
														{
															"id": 2819,
															"name": "swapCalldata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2651,
															"src": "4375:12:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2816,
																	"name": "augustus",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2654,
																	"src": "4360:8:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IParaSwapAugustus_$2885",
																		"typeString": "contract IParaSwapAugustus"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IParaSwapAugustus_$2885",
																		"typeString": "contract IParaSwapAugustus"
																	}
																],
																"id": 2815,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4352:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2814,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4352:7:17",
																	"typeDescriptions": {}
																}
															},
															"id": 2817,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4352:17:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2818,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4370:4:17",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "4352:22:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 2820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4352:36:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4333:55:17"
											},
											{
												"condition": {
													"id": 2823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4399:8:17",
													"subExpression": {
														"id": 2822,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2813,
														"src": "4400:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2826,
												"nodeType": "IfStatement",
												"src": "4395:173:17",
												"trueBody": {
													"id": 2825,
													"nodeType": "Block",
													"src": "4409:159:17",
													"statements": [
														{
															"AST": {
																"nativeSrc": "4466:95:17",
																"nodeType": "YulBlock",
																"src": "4466:95:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4492:1:17",
																					"nodeType": "YulLiteral",
																					"src": "4492:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4495:1:17",
																					"nodeType": "YulLiteral",
																					"src": "4495:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "4498:14:17",
																						"nodeType": "YulIdentifier",
																						"src": "4498:14:17"
																					},
																					"nativeSrc": "4498:16:17",
																					"nodeType": "YulFunctionCall",
																					"src": "4498:16:17"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "4477:14:17",
																				"nodeType": "YulIdentifier",
																				"src": "4477:14:17"
																			},
																			"nativeSrc": "4477:38:17",
																			"nodeType": "YulFunctionCall",
																			"src": "4477:38:17"
																		},
																		"nativeSrc": "4477:38:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "4477:38:17"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4532:1:17",
																					"nodeType": "YulLiteral",
																					"src": "4532:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "4535:14:17",
																						"nodeType": "YulIdentifier",
																						"src": "4535:14:17"
																					},
																					"nativeSrc": "4535:16:17",
																					"nodeType": "YulFunctionCall",
																					"src": "4535:16:17"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4525:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "4525:6:17"
																			},
																			"nativeSrc": "4525:27:17",
																			"nodeType": "YulFunctionCall",
																			"src": "4525:27:17"
																		},
																		"nativeSrc": "4525:27:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "4525:27:17"
																	}
																]
															},
															"evmVersion": "cancun",
															"externalReferences": [],
															"id": 2824,
															"nodeType": "InlineAssembly",
															"src": "4457:104:17"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2838,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 2832,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "4624:4:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_BaseParaSwapSellAdapter_$2877",
																					"typeString": "contract BaseParaSwapSellAdapter"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_BaseParaSwapSellAdapter_$2877",
																					"typeString": "contract BaseParaSwapSellAdapter"
																				}
																			],
																			"id": 2831,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4616:7:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2830,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4616:7:17",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2833,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4616:13:17",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 2828,
																		"name": "assetToSwapFrom",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2657,
																		"src": "4590:15:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20Detailed_$493",
																			"typeString": "contract IERC20Detailed"
																		}
																	},
																	"id": 2829,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4606:9:17",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 410,
																	"src": "4590:25:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 2834,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4590:40:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2837,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2835,
																	"name": "balanceBeforeAssetFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2745,
																	"src": "4634:22:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 2836,
																	"name": "amountToSwap",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2662,
																	"src": "4659:12:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4634:37:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4590:81:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "57524f4e475f42414c414e43455f41465445525f53574150",
															"id": 2839,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4680:26:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9bfa76b9c2e298d52f58639e051d7d21997f6c435f534dfd0c2e6c351c64a39a",
																"typeString": "literal_string \"WRONG_BALANCE_AFTER_SWAP\""
															},
															"value": "WRONG_BALANCE_AFTER_SWAP"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9bfa76b9c2e298d52f58639e051d7d21997f6c435f534dfd0c2e6c351c64a39a",
																"typeString": "literal_string \"WRONG_BALANCE_AFTER_SWAP\""
															}
														],
														"id": 2827,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4574:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4574:139:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2841,
												"nodeType": "ExpressionStatement",
												"src": "4574:139:17"
											},
											{
												"expression": {
													"id": 2853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2842,
														"name": "amountReceived",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2667,
														"src": "4720:14:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2851,
																"name": "balanceBeforeAssetTo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2762,
																"src": "4780:20:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 2847,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "4769:4:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_BaseParaSwapSellAdapter_$2877",
																					"typeString": "contract BaseParaSwapSellAdapter"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_BaseParaSwapSellAdapter_$2877",
																					"typeString": "contract BaseParaSwapSellAdapter"
																				}
																			],
																			"id": 2846,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4761:7:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2845,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4761:7:17",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2848,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4761:13:17",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 2843,
																		"name": "assetToSwapTo",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2660,
																		"src": "4737:13:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20Detailed_$493",
																			"typeString": "contract IERC20Detailed"
																		}
																	},
																	"id": 2844,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4751:9:17",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 410,
																	"src": "4737:23:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 2849,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4737:38:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2850,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4776:3:17",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 875,
															"src": "4737:42:17",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2852,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4737:64:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4720:81:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2854,
												"nodeType": "ExpressionStatement",
												"src": "4720:81:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2858,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2856,
																"name": "amountReceived",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2667,
																"src": "4816:14:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2857,
																"name": "minAmountToReceive",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2664,
																"src": "4834:18:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4816:36:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "494e53554646494349454e545f414d4f554e545f5245434549564544",
															"id": 2859,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4854:30:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_74fc5696336325aeb54c5d19133ed01308c8174de21fc66f38ac28668f995bc7",
																"typeString": "literal_string \"INSUFFICIENT_AMOUNT_RECEIVED\""
															},
															"value": "INSUFFICIENT_AMOUNT_RECEIVED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_74fc5696336325aeb54c5d19133ed01308c8174de21fc66f38ac28668f995bc7",
																"typeString": "literal_string \"INSUFFICIENT_AMOUNT_RECEIVED\""
															}
														],
														"id": 2855,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4808:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4808:77:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2861,
												"nodeType": "ExpressionStatement",
												"src": "4808:77:17"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2865,
																	"name": "assetToSwapFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2657,
																	"src": "4915:15:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20Detailed_$493",
																		"typeString": "contract IERC20Detailed"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20Detailed_$493",
																		"typeString": "contract IERC20Detailed"
																	}
																],
																"id": 2864,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4907:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2863,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4907:7:17",
																	"typeDescriptions": {}
																}
															},
															"id": 2866,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4907:24:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 2869,
																	"name": "assetToSwapTo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2660,
																	"src": "4941:13:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20Detailed_$493",
																		"typeString": "contract IERC20Detailed"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20Detailed_$493",
																		"typeString": "contract IERC20Detailed"
																	}
																],
																"id": 2868,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4933:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2867,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4933:7:17",
																	"typeDescriptions": {}
																}
															},
															"id": 2870,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4933:22:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2871,
															"name": "amountToSwap",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2662,
															"src": "4957:12:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2872,
															"name": "amountReceived",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2667,
															"src": "4971:14:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2862,
														"name": "Swapped",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2374,
														"src": "4899:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2873,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4899:87:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2874,
												"nodeType": "EmitStatement",
												"src": "4894:92:17"
											}
										]
									},
									"documentation": {
										"id": 2647,
										"nodeType": "StructuredDocumentation",
										"src": "1542:639:17",
										"text": " @dev Swaps a token for another using ParaSwap\n @param fromAmountOffset Offset of fromAmount in Augustus calldata if it should be overwritten, otherwise 0\n @param swapCalldata Calldata for ParaSwap's AugustusSwapper contract\n @param augustus Address of ParaSwap's AugustusSwapper contract\n @param assetToSwapFrom Address of the asset to be swapped from\n @param assetToSwapTo Address of the asset to be swapped to\n @param amountToSwap Amount to be swapped\n @param minAmountToReceive Minimum amount to be received from the swap\n @return amountReceived The amount received from the swap"
									},
									"id": 2876,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_sellOnParaSwap",
									"nameLocation": "2194:15:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2649,
												"mutability": "mutable",
												"name": "fromAmountOffset",
												"nameLocation": "2224:16:17",
												"nodeType": "VariableDeclaration",
												"scope": 2876,
												"src": "2216:24:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2648,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2216:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2651,
												"mutability": "mutable",
												"name": "swapCalldata",
												"nameLocation": "2260:12:17",
												"nodeType": "VariableDeclaration",
												"scope": 2876,
												"src": "2247:25:17",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2650,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2247:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2654,
												"mutability": "mutable",
												"name": "augustus",
												"nameLocation": "2297:8:17",
												"nodeType": "VariableDeclaration",
												"scope": 2876,
												"src": "2279:26:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IParaSwapAugustus_$2885",
													"typeString": "contract IParaSwapAugustus"
												},
												"typeName": {
													"id": 2653,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2652,
														"name": "IParaSwapAugustus",
														"nameLocations": [
															"2279:17:17"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2885,
														"src": "2279:17:17"
													},
													"referencedDeclaration": 2885,
													"src": "2279:17:17",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IParaSwapAugustus_$2885",
														"typeString": "contract IParaSwapAugustus"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2657,
												"mutability": "mutable",
												"name": "assetToSwapFrom",
												"nameLocation": "2327:15:17",
												"nodeType": "VariableDeclaration",
												"scope": 2876,
												"src": "2312:30:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Detailed_$493",
													"typeString": "contract IERC20Detailed"
												},
												"typeName": {
													"id": 2656,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2655,
														"name": "IERC20Detailed",
														"nameLocations": [
															"2312:14:17"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 493,
														"src": "2312:14:17"
													},
													"referencedDeclaration": 493,
													"src": "2312:14:17",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Detailed_$493",
														"typeString": "contract IERC20Detailed"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2660,
												"mutability": "mutable",
												"name": "assetToSwapTo",
												"nameLocation": "2364:13:17",
												"nodeType": "VariableDeclaration",
												"scope": 2876,
												"src": "2349:28:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Detailed_$493",
													"typeString": "contract IERC20Detailed"
												},
												"typeName": {
													"id": 2659,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2658,
														"name": "IERC20Detailed",
														"nameLocations": [
															"2349:14:17"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 493,
														"src": "2349:14:17"
													},
													"referencedDeclaration": 493,
													"src": "2349:14:17",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Detailed_$493",
														"typeString": "contract IERC20Detailed"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2662,
												"mutability": "mutable",
												"name": "amountToSwap",
												"nameLocation": "2392:12:17",
												"nodeType": "VariableDeclaration",
												"scope": 2876,
												"src": "2384:20:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2661,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2384:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2664,
												"mutability": "mutable",
												"name": "minAmountToReceive",
												"nameLocation": "2419:18:17",
												"nodeType": "VariableDeclaration",
												"scope": 2876,
												"src": "2411:26:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2663,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2411:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2209:233:17"
									},
									"returnParameters": {
										"id": 2668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2667,
												"mutability": "mutable",
												"name": "amountReceived",
												"nameLocation": "2469:14:17",
												"nodeType": "VariableDeclaration",
												"scope": 2876,
												"src": "2461:22:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2666,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:24:17"
									},
									"scope": 2877,
									"src": "2185:2807:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2878,
							"src": "947:4048:17",
							"usedErrors": [],
							"usedEvents": [
								507,
								2374,
								2384
							]
						}
					],
					"src": "38:4959:17"
				},
				"id": 17
			},
			"contracts/adapters/paraswap/interfaces/IParaSwapAugustus.sol": {
				"ast": {
					"absolutePath": "contracts/adapters/paraswap/interfaces/IParaSwapAugustus.sol",
					"exportedSymbols": {
						"IParaSwapAugustus": [
							2885
						]
					},
					"id": 2886,
					"license": "AGPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2879,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "38:24:18"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IParaSwapAugustus",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2885,
							"linearizedBaseContracts": [
								2885
							],
							"name": "IParaSwapAugustus",
							"nameLocation": "76:17:18",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "d2c4b598",
									"id": 2884,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenTransferProxy",
									"nameLocation": "108:21:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2880,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "129:2:18"
									},
									"returnParameters": {
										"id": 2883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2882,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2884,
												"src": "155:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2881,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "155:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "154:9:18"
									},
									"scope": 2885,
									"src": "99:65:18",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2886,
							"src": "66:101:18",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "38:131:18"
				},
				"id": 18
			},
			"contracts/adapters/paraswap/interfaces/IParaSwapAugustusRegistry.sol": {
				"ast": {
					"absolutePath": "contracts/adapters/paraswap/interfaces/IParaSwapAugustusRegistry.sol",
					"exportedSymbols": {
						"IParaSwapAugustusRegistry": [
							2895
						]
					},
					"id": 2896,
					"license": "AGPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2887,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "38:24:19"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IParaSwapAugustusRegistry",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2895,
							"linearizedBaseContracts": [
								2895
							],
							"name": "IParaSwapAugustusRegistry",
							"nameLocation": "76:25:19",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "fb04e17b",
									"id": 2894,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isValidAugustus",
									"nameLocation": "116:15:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2889,
												"mutability": "mutable",
												"name": "augustus",
												"nameLocation": "140:8:19",
												"nodeType": "VariableDeclaration",
												"scope": 2894,
												"src": "132:16:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2888,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "132:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "131:18:19"
									},
									"returnParameters": {
										"id": 2893,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2892,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2894,
												"src": "173:4:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2891,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "173:4:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "172:6:19"
									},
									"scope": 2895,
									"src": "107:72:19",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2896,
							"src": "66:116:19",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "38:146:19"
				},
				"id": 19
			}
		}
	}
}