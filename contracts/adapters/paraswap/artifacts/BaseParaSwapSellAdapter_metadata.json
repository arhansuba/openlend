{
	"compiler": {
		"version": "0.8.26+commit.8a97fa7a"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "fromAsset",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "toAsset",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amountSold",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "receivedAmount",
						"type": "uint256"
					}
				],
				"name": "Bought",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "fromAsset",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "toAsset",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "fromAmount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "receivedAmount",
						"type": "uint256"
					}
				],
				"name": "Swapped",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "ADDRESSES_PROVIDER",
				"outputs": [
					{
						"internalType": "contract IPoolAddressesProvider",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "AUGUSTUS_REGISTRY",
				"outputs": [
					{
						"internalType": "contract IParaSwapAugustusRegistry",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "MAX_SLIPPAGE_PERCENT",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "ORACLE",
				"outputs": [
					{
						"internalType": "contract IPriceOracleGetter",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "POOL",
				"outputs": [
					{
						"internalType": "contract IPool",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "asset",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "premium",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "initiator",
						"type": "address"
					},
					{
						"internalType": "bytes",
						"name": "params",
						"type": "bytes"
					}
				],
				"name": "executeOperation",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "contract IERC20",
						"name": "token",
						"type": "address"
					}
				],
				"name": "rescueTokens",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"author": "Jason Raymond Bell",
			"kind": "dev",
			"methods": {
				"executeOperation(address,uint256,uint256,address,bytes)": {
					"details": "Ensure that the contract can return the debt + premium, e.g., has      enough funds to repay and has approved the Pool to pull the total amount",
					"params": {
						"amount": "The amount of the flash-borrowed asset",
						"asset": "The address of the flash-borrowed asset",
						"initiator": "The address of the flashloan initiator",
						"params": "The byte-encoded params passed when initiating the flashloan",
						"premium": "The fee of the flash-borrowed asset"
					},
					"returns": {
						"_0": "True if the execution of the operation succeeds, false otherwise"
					}
				},
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
				},
				"rescueTokens(address)": {
					"details": "Emergency rescue for token stucked on this contract, as failsafe mechanism - Funds should never remain in this contract more time than during transactions - Only callable by the owner"
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"title": "BaseParaSwapSellAdapter",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"executeOperation(address,uint256,uint256,address,bytes)": {
					"notice": "Executes an operation after receiving the flash-borrowed asset"
				}
			},
			"notice": "Implements the logic for selling tokens on ParaSwap",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/adapters/paraswap/BaseParaSwapSellAdapter.sol": "BaseParaSwapSellAdapter"
		},
		"evmVersion": "cancun",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@aave/core-v3/contracts/dependencies/gnosis/contracts/GPv2SafeERC20.sol": {
			"keccak256": "0xb18337187a2a6c4e64c61f8e4e06f0e932a69bb8f33688943bf50d7f4198e44b",
			"license": "LGPL-3.0-or-later",
			"urls": [
				"bzz-raw://38c0769720d226d41fb5a0f504a0b9434ca266acb15d1de9bbc08f1a5c8a7bbc",
				"dweb:/ipfs/QmeskcXDL7cbMXbjEdAdbUamKmjqYKBwRfheFZmm9mpBKJ"
			]
		},
		"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Address.sol": {
			"keccak256": "0x4ce20476966f73ba3c0aeb85b602b6ecc4e715f5bd9524d1c6286819282c76c5",
			"license": "MIT",
			"urls": [
				"bzz-raw://b856247f6c2fe07d0d293ed4b493a7ec37fa2dd8de7c69b446482ca49532fecd",
				"dweb:/ipfs/QmSYTbb8cMjrQ1dtgfLUEektidnT9Wjaxqz7HWU28QTEgS"
			]
		},
		"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Context.sol": {
			"keccak256": "0xc0df5ebb2c3d8b4509464c40a88cc51e5e5f5e4a26fafc909330e9bb2658f641",
			"license": "MIT",
			"urls": [
				"bzz-raw://dc2690f871399de8f14e4cd8ae9b57a67e135afa28ac4be76594eaf4ecd8e244",
				"dweb:/ipfs/Qmb9gKAnQBciUknb3ysnfDpWAdYXGJm51NzFYWNkXwoAZg"
			]
		},
		"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/IERC20.sol": {
			"keccak256": "0xf57d62241e553696a1324d225663ba2e1a51db0a51ca236d0c1b009d89b6284c",
			"license": "AGPL-3.0",
			"urls": [
				"bzz-raw://d327db93b636790909aa137124f30a856ac1631cb79c476aa188f9627fda8d03",
				"dweb:/ipfs/QmaxpmEoBFioeNYmpxJemyZ7aYF2nX1NKW1XDqREm7i6es"
			]
		},
		"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/IERC20Detailed.sol": {
			"keccak256": "0x9365cd885dc1ed7aed1364ae4dedf8e4660100cba0437061013f64c5002b385a",
			"license": "AGPL-3.0",
			"urls": [
				"bzz-raw://ddc639d67c82e15f76b08588e8ad2ee87eaff6bb9cba5c0e5b08e242c3c4ac00",
				"dweb:/ipfs/QmY1D9WcH3nmg2VVfqSUkEX6Zrkmkmx8oi2pJAvw5BABi7"
			]
		},
		"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/Ownable.sol": {
			"keccak256": "0x3ce185c4f579e32006f8893dbfdc1b5d878c0e2cafd1508f7ceb081698bc81f9",
			"license": "MIT",
			"urls": [
				"bzz-raw://de40129c2380570ce2e883210452f0dc0913788e66be6690084be3d9f8def73f",
				"dweb:/ipfs/QmVAEtQHTYDPheoDniWaVNyRcWwfu3ccmUCxFXuzxHEwFT"
			]
		},
		"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/SafeERC20.sol": {
			"keccak256": "0x9ada5448c24f34f934122c0e11d1a89bf9a31b7ade0dcb935bd7dcb339ef7f32",
			"license": "MIT",
			"urls": [
				"bzz-raw://d0208c47c8fbee6a2812e96cb7fad419d3437b49ee9749953f03ab14979d3d6f",
				"dweb:/ipfs/QmXavasrpSX5WRGST3LTsP7incRaTmtJQJ8uU3pLhmWLWG"
			]
		},
		"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/SafeMath.sol": {
			"keccak256": "0xf1c5d8ba70a5fc3e20dbbc2aa2a2278d2535a57bc1e9abf1228ebc3068a045f0",
			"license": "AGPL-3.0",
			"urls": [
				"bzz-raw://275183a6783193c44497f0535e5f8473a5d1fd970bb968f2db4d7bf25c967e7b",
				"dweb:/ipfs/QmXggrHmKWkZEXN5UYkDcYWGrU428k5iYbf39apqbk3fqQ"
			]
		},
		"@aave/core-v3/contracts/flashloan/base/FlashLoanSimpleReceiverBase.sol": {
			"keccak256": "0x3a04fc046c4f04c71ff230eba56e56bb718be41e4317f0c938bd287d81e384b1",
			"license": "AGPL-3.0",
			"urls": [
				"bzz-raw://8a02e8f6034e6536269eca55dc4e068e584a67cef530dea865d9a75e0e950ca3",
				"dweb:/ipfs/QmdwL6Wvbk8QAyThNzPkeCfmTUryUdUnkbBDSRs5eigBmj"
			]
		},
		"@aave/core-v3/contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol": {
			"keccak256": "0xba50a7834ddfdca3e3cfac09043f72699be42ff88925641ac30950a434b2b2ff",
			"license": "AGPL-3.0",
			"urls": [
				"bzz-raw://588513e813da8c9edf06bdd8912f33f5e304735e4b0145da9fb034eb46f205b5",
				"dweb:/ipfs/Qmco68eeRnTUGyZaoZ9Vu4R7xzH9x1pUwP36nUvrxnxHxg"
			]
		},
		"@aave/core-v3/contracts/interfaces/IERC20WithPermit.sol": {
			"keccak256": "0xfb041570f1804648f543be72cecc80ca9f65129232bacaa9247ebd11a7d9f83e",
			"license": "AGPL-3.0",
			"urls": [
				"bzz-raw://d46fcfc306a6f9d52dd6d17f9d344907f7fe54ad8e36b890949662f5a1c7ca55",
				"dweb:/ipfs/QmX5B4ZfmxpgF86tMhCV5DiH5pAyVanzsiCRDT8GkCfzkZ"
			]
		},
		"@aave/core-v3/contracts/interfaces/IPool.sol": {
			"keccak256": "0xbfd2077251c8dc766a56d45f4b03eb07f3441323e79c0f794efea3657a99747f",
			"license": "AGPL-3.0",
			"urls": [
				"bzz-raw://c6ff6221de0ea877932c73c0b99d3e4535f293053ae44f9f9d6b9d265e9af2f6",
				"dweb:/ipfs/QmSTaEKrhz1xNVnx4oBzWw8DenYPShVzJoP1A9GTEWkAzX"
			]
		},
		"@aave/core-v3/contracts/interfaces/IPoolAddressesProvider.sol": {
			"keccak256": "0x33d4308d9407b4ee2297fc4ba5acce1a96a6c658189e2778a4f6b90e032fb3b5",
			"license": "AGPL-3.0",
			"urls": [
				"bzz-raw://978336a2a40229ccc7749344be890862ea12e17e9fffe5bb977ba3841de07b5a",
				"dweb:/ipfs/QmScNrQfDSPg1afJmkCty6fZkETUrWTmEXWeTmHoe7mSqa"
			]
		},
		"@aave/core-v3/contracts/interfaces/IPriceOracleGetter.sol": {
			"keccak256": "0xfe72e94869ca91465a7f57282b8d367b2c9ba798fdc13ac8546304db8d971df6",
			"license": "AGPL-3.0",
			"urls": [
				"bzz-raw://17eb0014e4dd33c8a177ff6a80aea1361d40cda65f0e832484d9dad9c80c9aea",
				"dweb:/ipfs/QmVNsRx7bJjKmgfTVnpArCRRFGAyds2d5pY4sigcvgmxtf"
			]
		},
		"@aave/core-v3/contracts/protocol/libraries/math/PercentageMath.sol": {
			"keccak256": "0x6a7dcf18e1af47b69c8dd58093b0134e3689bf719ba63eae485d8f9dfc10cac7",
			"license": "BUSL-1.1",
			"urls": [
				"bzz-raw://f1eb7f7813ade11391040b7bf495c8eaaf55780e75d9f2f0f75ce01975b44dfd",
				"dweb:/ipfs/QmUpXWird3PCkTrTDEVVnwV353L9jHxabEfAfsw57vjWux"
			]
		},
		"@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol": {
			"keccak256": "0x771cb99fd8519c974f7e12130387c4d9a997a6e8d0ac10e4303b842fe53efa88",
			"license": "BUSL-1.1",
			"urls": [
				"bzz-raw://0f41689d1d58bc13678c749bae8830f5a8b19b89cd135e962bf07d483350f828",
				"dweb:/ipfs/QmQSNGDxjYGqT1GU2CZzsWUTNcAtcfkg1jDGTH516nCAfN"
			]
		},
		"contracts/adapters/paraswap/BaseParaSwapAdapter.sol": {
			"keccak256": "0xd835ab6371f67b48ba0cb9247c97fea02e62922582d136de51c81d5ad007eca8",
			"license": "AGPL-3.0",
			"urls": [
				"bzz-raw://760eb7ce5d1a4b7405d979f7d9c6c14ee7ba88765ef7c83cdaf299f7113f08c0",
				"dweb:/ipfs/QmRQECuGD173RVR9v3mf3Uo6cHxYzKjPYBHfawaibpbKyY"
			]
		},
		"contracts/adapters/paraswap/BaseParaSwapSellAdapter.sol": {
			"keccak256": "0x9e565eb56fa4debf90474bda8e104c74e14fcb71e6fc9641a3bd2c8cb9b99ad5",
			"license": "AGPL-3.0",
			"urls": [
				"bzz-raw://1930649dd00e7207c3336bc2467c8d29a9389b48eaa21f4407af4d87581a723b",
				"dweb:/ipfs/QmVUT9pj42WJswuTSD4HWGQbRtVGo5FBcY9gaZyQCP9JfP"
			]
		},
		"contracts/adapters/paraswap/interfaces/IParaSwapAugustus.sol": {
			"keccak256": "0xebfd529a60d9f067139fe0997a557a13cc0c1360b39807dd6186c4a1c8c4d81e",
			"license": "AGPL-3.0",
			"urls": [
				"bzz-raw://bb07e3b23773e3baf87e282eed3c625d7da9d9eb4cb3a34bd8c96cc044c99e11",
				"dweb:/ipfs/QmQcunUbKrZwMNNnPhDwUzrdUNFEvU9gem31DjAp65uD5q"
			]
		},
		"contracts/adapters/paraswap/interfaces/IParaSwapAugustusRegistry.sol": {
			"keccak256": "0x0c8164c8749336883c179328de6dbded1a22f678ee2db029c24cea50fea138c8",
			"license": "AGPL-3.0",
			"urls": [
				"bzz-raw://a42ca391cdf06caf63acd41e189e16b23764e889c20f739a95dd37ccdc932283",
				"dweb:/ipfs/QmUQqiFsoST1t2i8uZKwkpGQBLReiwphqhSeLtWaHLirX3"
			]
		}
	},
	"version": 1
}