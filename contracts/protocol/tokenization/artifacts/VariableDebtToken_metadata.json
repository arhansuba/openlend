{
	"compiler": {
		"version": "0.8.26+commit.8a97fa7a"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "contract IPool",
						"name": "pool",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "Approval",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "fromUser",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "toUser",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "asset",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "BorrowAllowanceDelegated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "target",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "balanceIncrease",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "index",
						"type": "uint256"
					}
				],
				"name": "Burn",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "underlyingAsset",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "pool",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "incentivesController",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint8",
						"name": "debtTokenDecimals",
						"type": "uint8"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "debtTokenName",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "debtTokenSymbol",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "bytes",
						"name": "params",
						"type": "bytes"
					}
				],
				"name": "Initialized",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "caller",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "onBehalfOf",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "balanceIncrease",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "index",
						"type": "uint256"
					}
				],
				"name": "Mint",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "Transfer",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "DEBT_TOKEN_REVISION",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "DELEGATION_WITH_SIG_TYPEHASH",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "DOMAIN_SEPARATOR",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "EIP712_REVISION",
				"outputs": [
					{
						"internalType": "bytes",
						"name": "",
						"type": "bytes"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "POOL",
				"outputs": [
					{
						"internalType": "contract IPool",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "UNDERLYING_ASSET_ADDRESS",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "allowance",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "approve",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "delegatee",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "approveDelegation",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "user",
						"type": "address"
					}
				],
				"name": "balanceOf",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "fromUser",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "toUser",
						"type": "address"
					}
				],
				"name": "borrowAllowance",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "index",
						"type": "uint256"
					}
				],
				"name": "burn",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "decimals",
				"outputs": [
					{
						"internalType": "uint8",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "decreaseAllowance",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "delegator",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "delegatee",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "deadline",
						"type": "uint256"
					},
					{
						"internalType": "uint8",
						"name": "v",
						"type": "uint8"
					},
					{
						"internalType": "bytes32",
						"name": "r",
						"type": "bytes32"
					},
					{
						"internalType": "bytes32",
						"name": "s",
						"type": "bytes32"
					}
				],
				"name": "delegationWithSig",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getIncentivesController",
				"outputs": [
					{
						"internalType": "contract IAaveIncentivesController",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "user",
						"type": "address"
					}
				],
				"name": "getPreviousIndex",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "user",
						"type": "address"
					}
				],
				"name": "getScaledUserBalanceAndSupply",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "increaseAllowance",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "contract IPool",
						"name": "initializingPool",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "underlyingAsset",
						"type": "address"
					},
					{
						"internalType": "contract IAaveIncentivesController",
						"name": "incentivesController",
						"type": "address"
					},
					{
						"internalType": "uint8",
						"name": "debtTokenDecimals",
						"type": "uint8"
					},
					{
						"internalType": "string",
						"name": "debtTokenName",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "debtTokenSymbol",
						"type": "string"
					},
					{
						"internalType": "bytes",
						"name": "params",
						"type": "bytes"
					}
				],
				"name": "initialize",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "onBehalfOf",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "index",
						"type": "uint256"
					}
				],
				"name": "mint",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "name",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					}
				],
				"name": "nonces",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "user",
						"type": "address"
					}
				],
				"name": "scaledBalanceOf",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "scaledTotalSupply",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "contract IAaveIncentivesController",
						"name": "controller",
						"type": "address"
					}
				],
				"name": "setIncentivesController",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "symbol",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "totalSupply",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "transfer",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "transferFrom",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"author": "Aave",
			"details": "Transfer and approve functionalities are disabled since its a non-transferable token",
			"events": {
				"Approval(address,address,uint256)": {
					"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
				},
				"BorrowAllowanceDelegated(address,address,address,uint256)": {
					"details": "Emitted on `approveDelegation` and `borrowAllowance",
					"params": {
						"amount": "The amount being delegated",
						"asset": "The address of the delegated asset",
						"fromUser": "The address of the delegator",
						"toUser": "The address of the delegatee"
					}
				},
				"Burn(address,address,uint256,uint256,uint256)": {
					"details": "Emitted after the burn actionIf the burn function does not involve a transfer of the underlying asset, the target defaults to zero address",
					"params": {
						"balanceIncrease": "The increase in scaled-up balance since the last action of 'from'",
						"from": "The address from which the tokens will be burned",
						"index": "The next liquidity index of the reserve",
						"target": "The address that will receive the underlying, if any",
						"value": "The scaled-up amount being burned (user entered amount - balance increase from interest)"
					}
				},
				"Initialized(address,address,address,uint8,string,string,bytes)": {
					"details": "Emitted when a debt token is initialized",
					"params": {
						"debtTokenDecimals": "The decimals of the debt token",
						"debtTokenName": "The name of the debt token",
						"debtTokenSymbol": "The symbol of the debt token",
						"incentivesController": "The address of the incentives controller for this aToken",
						"params": "A set of encoded parameters for additional initialization",
						"pool": "The address of the associated pool",
						"underlyingAsset": "The address of the underlying asset"
					}
				},
				"Mint(address,address,uint256,uint256,uint256)": {
					"details": "Emitted after the mint action",
					"params": {
						"balanceIncrease": "The increase in scaled-up balance since the last action of 'onBehalfOf'",
						"caller": "The address performing the mint",
						"index": "The next liquidity index of the reserve",
						"onBehalfOf": "The address of the user that will receive the minted tokens",
						"value": "The scaled-up amount being minted (based on user entered amount and balance increase from interest)"
					}
				},
				"Transfer(address,address,uint256)": {
					"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
				}
			},
			"kind": "dev",
			"methods": {
				"DOMAIN_SEPARATOR()": {
					"details": "Return cached value if chainId matches cache, otherwise recomputes separator",
					"returns": {
						"_0": "The domain separator of the token at current chain"
					}
				},
				"UNDERLYING_ASSET_ADDRESS()": {
					"returns": {
						"_0": "The address of the underlying asset"
					}
				},
				"approveDelegation(address,uint256)": {
					"params": {
						"amount": "The maximum amount being delegated.",
						"delegatee": "The address receiving the delegated borrowing power"
					}
				},
				"balanceOf(address)": {
					"details": "Returns the amount of tokens owned by `account`."
				},
				"borrowAllowance(address,address)": {
					"params": {
						"fromUser": "The user to giving allowance",
						"toUser": "The user to give allowance to"
					},
					"returns": {
						"_0": "The current allowance of `toUser`"
					}
				},
				"burn(address,uint256,uint256)": {
					"details": "In some instances, a burn transaction will emit a mint event if the amount to burn is less than the interest that the user accrued",
					"params": {
						"amount": "The amount getting burned",
						"from": "The address from which the debt will be burned",
						"index": "The variable debt index of the reserve"
					},
					"returns": {
						"_0": "The scaled total debt of the reserve"
					}
				},
				"constructor": {
					"details": "Constructor.",
					"params": {
						"pool": "The address of the Pool contract"
					}
				},
				"delegationWithSig(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
					"params": {
						"deadline": "The deadline timestamp, type(uint256).max for max deadline",
						"delegatee": "The delegatee that can use the credit",
						"delegator": "The delegator of the credit",
						"r": "The R signature param",
						"s": "The S signature param",
						"v": "The V signature param",
						"value": "The amount to be delegated"
					}
				},
				"getIncentivesController()": {
					"returns": {
						"_0": "The address of the Incentives Controller"
					}
				},
				"getPreviousIndex(address)": {
					"params": {
						"user": "The address of the user"
					},
					"returns": {
						"_0": "The last index interest was accrued to the user's balance, expressed in ray"
					}
				},
				"getScaledUserBalanceAndSupply(address)": {
					"params": {
						"user": "The address of the user"
					},
					"returns": {
						"_0": "The scaled balance of the user",
						"_1": "The scaled total supply"
					}
				},
				"initialize(address,address,address,uint8,string,string,bytes)": {
					"params": {
						"debtTokenDecimals": "The decimals of the debtToken, same as the underlying asset's",
						"debtTokenName": "The name of the token",
						"debtTokenSymbol": "The symbol of the token",
						"incentivesController": "The smart contract managing potential incentives distribution",
						"params": "A set of encoded parameters for additional initialization",
						"pool": "The pool contract that is initializing this contract",
						"underlyingAsset": "The address of the underlying asset of this aToken (E.g. WETH for aWETH)"
					}
				},
				"mint(address,address,uint256,uint256)": {
					"params": {
						"amount": "The amount of debt being minted",
						"index": "The variable debt index of the reserve",
						"onBehalfOf": "The address receiving the debt tokens",
						"user": "The address receiving the borrowed underlying, being the delegatee in case of credit delegate, or same as `onBehalfOf` otherwise"
					},
					"returns": {
						"_0": "True if the previous balance of the user is 0, false otherwise",
						"_1": "The scaled total debt of the reserve"
					}
				},
				"nonces(address)": {
					"params": {
						"owner": "The address for which the nonce is being returned"
					},
					"returns": {
						"_0": "The nonce value for the input address`"
					}
				},
				"scaledBalanceOf(address)": {
					"details": "The scaled balance is the sum of all the updated stored balance divided by the reserve's liquidity index at the moment of the update",
					"params": {
						"user": "The user whose balance is calculated"
					},
					"returns": {
						"_0": "The scaled balance of the user"
					}
				},
				"scaledTotalSupply()": {
					"returns": {
						"_0": "The scaled total supply"
					}
				},
				"setIncentivesController(address)": {
					"params": {
						"controller": "the new Incentives controller"
					}
				},
				"totalSupply()": {
					"details": "Returns the amount of tokens in existence."
				},
				"transfer(address,uint256)": {
					"details": "Being non transferrable, the debt token does not implement any of the standard ERC20 functions for transfer and allowance."
				}
			},
			"title": "VariableDebtToken",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"DOMAIN_SEPARATOR()": {
					"notice": "Get the domain separator for the token"
				},
				"UNDERLYING_ASSET_ADDRESS()": {
					"notice": "Returns the address of the underlying asset of this debtToken (E.g. WETH for variableDebtWETH)"
				},
				"approveDelegation(address,uint256)": {
					"notice": "Delegates borrowing power to a user on the specific debt token. Delegation will still respect the liquidation constraints (even if delegated, a delegatee cannot force a delegator HF to go below 1)"
				},
				"borrowAllowance(address,address)": {
					"notice": "Returns the borrow allowance of the user"
				},
				"burn(address,uint256,uint256)": {
					"notice": "Burns user variable debt"
				},
				"delegationWithSig(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
					"notice": "Delegates borrowing power to a user on the specific debt token via ERC712 signature"
				},
				"getIncentivesController()": {
					"notice": "Returns the address of the Incentives Controller contract"
				},
				"getPreviousIndex(address)": {
					"notice": "Returns last index interest was accrued to the user's balance"
				},
				"getScaledUserBalanceAndSupply(address)": {
					"notice": "Returns the scaled balance of the user and the scaled total supply."
				},
				"initialize(address,address,address,uint8,string,string,bytes)": {
					"notice": "Initializes the debt token."
				},
				"mint(address,address,uint256,uint256)": {
					"notice": "Mints debt token to the `onBehalfOf` address"
				},
				"nonces(address)": {
					"notice": "Returns the nonce value for address specified as parameter"
				},
				"scaledBalanceOf(address)": {
					"notice": "Returns the scaled balance of the user."
				},
				"scaledTotalSupply()": {
					"notice": "Returns the scaled total supply of the scaled balance token. Represents sum(debt/index)"
				},
				"setIncentivesController(address)": {
					"notice": "Sets a new Incentives Controller"
				}
			},
			"notice": "Implements a variable debt token to track the borrowing positions of users at variable rate mode",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/protocol/tokenization/VariableDebtToken.sol": "VariableDebtToken"
		},
		"evmVersion": "cancun",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/dependencies/openzeppelin/contracts/Context.sol": {
			"keccak256": "0x58e76abc9cac3909e67c990d0b1f781a845cd294c0fc91a5b3b000510e2043bf",
			"license": "MIT",
			"urls": [
				"bzz-raw://e6c0a518ec3bf9aed12a90aabed9ffa16c5a3ab29be91b7ee826644d1fbdf8df",
				"dweb:/ipfs/QmeG7iQ5aoXaDhisunyAQmHk3bvrcSLk278H2VbhSCB2Qb"
			]
		},
		"contracts/dependencies/openzeppelin/contracts/IERC20.sol": {
			"keccak256": "0x07fe55e38757b195c884a8ede60deb8a1f6a85cc607e4e112a8c0004a9ebd448",
			"license": "AGPL-3.0",
			"urls": [
				"bzz-raw://dac71166c7a8cd1eef36ef868a41fbe8227c0de4fad7052b28657e4176af741f",
				"dweb:/ipfs/QmSPRAVhBexaW12JXoXoz94apX25fSqxzgS2a1AYJPKamv"
			]
		},
		"contracts/dependencies/openzeppelin/contracts/IERC20Detailed.sol": {
			"keccak256": "0x8fa3eef49754f897adaf2d2b578e494ce342992e255283f0327d049573f3cfb4",
			"license": "AGPL-3.0",
			"urls": [
				"bzz-raw://812381e07cfe547bf5a35a7eca8893c3e9fea8afb250f786c4e285e760eff36c",
				"dweb:/ipfs/QmbnTHFZuU4wPbYzbLMcKxp8D6Qr33CVbcN3CJE9H4RUGs"
			]
		},
		"contracts/dependencies/openzeppelin/contracts/SafeCast.sol": {
			"keccak256": "0x9dc85595ff727e421497d6507db33360a47adf75fb17eee51680c4e60e4b0447",
			"license": "MIT",
			"urls": [
				"bzz-raw://d9d36860ed2d82fad841166231e24a2a67f7c82177b91bc8c75e36f801f527bb",
				"dweb:/ipfs/QmSZhSNiR3kp5p8Eix4tMdw8sVQkGQJan7PtBhpCSLryex"
			]
		},
		"contracts/interfaces/IACLManager.sol": {
			"keccak256": "0x518142961e1f7c74c9709585287a5dd698874a6db42f7155c2e6564e313888bb",
			"license": "AGPL-3.0",
			"urls": [
				"bzz-raw://115f1920f839c3cbf909631b543f2af8bbcc9aa34b2c7a333bb552740ea8fd7f",
				"dweb:/ipfs/QmNsqxwBjhecXtrmALP8Cjpsf4PvyCn28EVNEW6vgzvhpN"
			]
		},
		"contracts/interfaces/IAaveIncentivesController.sol": {
			"keccak256": "0x1fa5b0b5e06c28c3e0e5c4052bd4448abb905cdfd2496a347d539093c5337ebf",
			"license": "AGPL-3.0",
			"urls": [
				"bzz-raw://561f0f9f057e8f800ed5730ff290363a343811ebab34511db727d2b91352ec78",
				"dweb:/ipfs/QmYyhpvB5MDogyyUgy7ndrqkHQFtF5q5ZWtvranB6Tqc2q"
			]
		},
		"contracts/interfaces/ICreditDelegationToken.sol": {
			"keccak256": "0xf4d01813335217aeeb6329790b0cee27a4d3bd6500d43d9336ab01940a48d955",
			"license": "AGPL-3.0",
			"urls": [
				"bzz-raw://9b51371dc1d385d5025abaef575a24102738bc1a5b4f6311ffc6a365258233cf",
				"dweb:/ipfs/QmRWzaCmWLdHYTBD4mLEGWV7bunty75rcHLseKFPRTYPD1"
			]
		},
		"contracts/interfaces/IInitializableDebtToken.sol": {
			"keccak256": "0x78eb0003df3280b92abaa1773133f78cd8b8d634a9f72cedd60f5287e8dd60fc",
			"license": "AGPL-3.0",
			"urls": [
				"bzz-raw://5fb4811db7379f814cb906a7c204e023c07fd2aae4f4f45240b473dd9034f044",
				"dweb:/ipfs/QmYFqAxCc5TQRt33MRYWuMYiEoNJnUDCkTC3dqRckjj9sQ"
			]
		},
		"contracts/interfaces/IPool.sol": {
			"keccak256": "0x91fc8cafd9f6fda5046620662d57c5ab5f724375be08903114576216a4980629",
			"license": "AGPL-3.0",
			"urls": [
				"bzz-raw://87c472da79a61750b3cd010532de6092c6be145591f27ca5436850e9985cf3ae",
				"dweb:/ipfs/QmSVysBKZUepgucokF4Av7i3PJQSj2RSpXKKfYaAcYkR6d"
			]
		},
		"contracts/interfaces/IPoolAddressesProvider.sol": {
			"keccak256": "0xf37b9fdb389d45783acfc16664c06f28af953d4a409d1059bdf10b917d41fd4a",
			"license": "AGPL-3.0",
			"urls": [
				"bzz-raw://bb3c42a324ea0adf0095b1e3ea05df7edd70816cfd472e79a29a4fd5b196fa7b",
				"dweb:/ipfs/QmcSYcH5NZc96EHqAp7sY5Gxvo1229gLnihyBfqme5EdGj"
			]
		},
		"contracts/interfaces/IScaledBalanceToken.sol": {
			"keccak256": "0xf811b6f5f28cb114bf0157f5c29e4f3b6916cd07a2d199e41a6e095bf10e9274",
			"license": "AGPL-3.0",
			"urls": [
				"bzz-raw://dfd126d6e02ccce04f58919686589c05eccf242d5bf4c270a612e7c46dc645c1",
				"dweb:/ipfs/QmTSk6ojkAxRPVwUBKMWhtFAaJS1jLt48sK8dySxXFNxJW"
			]
		},
		"contracts/interfaces/IVariableDebtToken.sol": {
			"keccak256": "0xe8dc967f087955ad66fc6ea21bedff59e2ba5a39314a2c81f6428a4703a46984",
			"license": "AGPL-3.0",
			"urls": [
				"bzz-raw://c0d00437213235446a0037370166fb5ef6b864bfc5cd9809c498be3051e220d5",
				"dweb:/ipfs/QmcT8UA4qm1zoU8bLkg583zfvmTnMoLqMdoyvmjnGPD2aU"
			]
		},
		"contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol": {
			"keccak256": "0x5f85255cef8377443dddcd32b57a1693da484320829282f78e471cd106d7615c",
			"license": "AGPL-3.0",
			"urls": [
				"bzz-raw://1cd759611a938fe9250d7ba819bbcce9b517b846c826f7e622db467500ba31ea",
				"dweb:/ipfs/QmXuhheJQ1aDdRX65ZcEUyqAHSLDKk4RHFDEo7r2WHX1gt"
			]
		},
		"contracts/protocol/libraries/helpers/Errors.sol": {
			"keccak256": "0xb6227b2cd999d01882dcfa20f489bf7b95d7428120253da7833c3361d2c8865d",
			"license": "BUSL-1.1",
			"urls": [
				"bzz-raw://e41c6e7c7ce1e5454602a590b07235e58684f15eef8fb80deb3b1017cff52516",
				"dweb:/ipfs/QmYkjQHEqKTTZA9WpoXhevUtugDnLqxDdatkmkFxbihT5Z"
			]
		},
		"contracts/protocol/libraries/math/WadRayMath.sol": {
			"keccak256": "0x1fefec0fa31e0b2960c90dd1a637b69e5748fee962d3b5e6f2f6b0b5965a67b1",
			"license": "BUSL-1.1",
			"urls": [
				"bzz-raw://b1e926d9b5a4bc735ab024f78bdd25138e209977d28a49587f496cabfae077e4",
				"dweb:/ipfs/QmUEYMevf8L7dcFF6CrLc5YKDvDVHdv5fwnXPHiRwbQEBX"
			]
		},
		"contracts/protocol/libraries/types/DataTypes.sol": {
			"keccak256": "0xf484b9e835d41d75d2ad32ea241e1cc859f278df49a8c4ceb2c0299036e577be",
			"license": "BUSL-1.1",
			"urls": [
				"bzz-raw://eafa12cff7ec168fd0e868ffee3931cc128c57bab003efbdb30e67e73d477fe3",
				"dweb:/ipfs/QmU6nessQ7F1JLRbeYzZzgkh4E5mRdVh3YqLNN5nxGuUvb"
			]
		},
		"contracts/protocol/tokenization/VariableDebtToken.sol": {
			"keccak256": "0x4558e3cb8785b5f6f64cef6748081bd8f1df2fc0e4a1df547ef54b24ca8fa8d1",
			"license": "BUSL-1.1",
			"urls": [
				"bzz-raw://cffaef206a856a8613230f37791b4989ec61f14b951abb964aaf456c337610f6",
				"dweb:/ipfs/QmQCiwtXr9LdMHeVrpwSiUY7HTSgaUkw6q28cQ6GfTFkjH"
			]
		},
		"contracts/protocol/tokenization/base/DebtTokenBase.sol": {
			"keccak256": "0xbaddaab0eb0c95232647274a07c2dd37569a70823988bbbb2f5f535cd30fc4e7",
			"license": "BUSL-1.1",
			"urls": [
				"bzz-raw://32dea69e8643ab97c57f9483d4b09cd7ba570fb87c457f99c37579e7ef53ee21",
				"dweb:/ipfs/QmUB3GKnfejaP2sRJEQc3uru4DdeJoR6pmiBpkybisRZxX"
			]
		},
		"contracts/protocol/tokenization/base/EIP712Base.sol": {
			"keccak256": "0x1d367909141cf1c6f103d69837ebd94013cd0f34a206cdb7692d4da3cdce60a3",
			"license": "BUSL-1.1",
			"urls": [
				"bzz-raw://13338a975543726810b25a510971a5d6c033f8a78703443c139e6b0d6d2c70a8",
				"dweb:/ipfs/QmREx1MXHyDh3jE27AN7uCTRzCEDGGSNMgfWPWnWLVU9SJ"
			]
		},
		"contracts/protocol/tokenization/base/IncentivizedERC20.sol": {
			"keccak256": "0x7301e97330aea6314ac52ee547774c0c6c2fbf28f79c3e6163a18551f57c4104",
			"license": "BUSL-1.1",
			"urls": [
				"bzz-raw://00a3071caef876afbd47803f55c150e8c194d36925d79c904a2d87b453c44014",
				"dweb:/ipfs/QmXnZ5Q54BAJxR3AePaaXzJ5sxh251ubAk3YSgqiT71sDH"
			]
		},
		"contracts/protocol/tokenization/base/MintableIncentivizedERC20.sol": {
			"keccak256": "0xb4e738934ba091f565d7e121bd430234673e50e64928aab8586a5cc87194991c",
			"license": "BUSL-1.1",
			"urls": [
				"bzz-raw://cffc3dded348e4d85b475bd7597dda20ea097bd3cdc85563d23c36b0d1741137",
				"dweb:/ipfs/QmZUxH361ZdvDY9RMEc3Cs5iR41o5ianQU6f39AtnqKuoR"
			]
		},
		"contracts/protocol/tokenization/base/ScaledBalanceTokenBase.sol": {
			"keccak256": "0xac257c1adc7fa5cfb9a2705f5bb9c9f0a4cf11ef63fd9e9750081f67d1abca55",
			"license": "BUSL-1.1",
			"urls": [
				"bzz-raw://de8f7ec472472321b1471db524e08b3440c548613b00e241591c1d439dfcef77",
				"dweb:/ipfs/QmWNRxMWaV7B1JRhu6zNdAshyKWUEjGth1SGANoax3tShi"
			]
		}
	},
	"version": 1
}